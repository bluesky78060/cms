{"version":3,"file":"static/js/main.9b4d46c1.js","mappings":"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","sources":["services/browserFs.js","services/storage.js","services/xlsxMirror.js","contexts/AppContext.js","contexts/UserContext.js","components/Login.js","components/Navbar.js","components/Dashboard.js","utils/numberToKorean.js","utils/excelUtils.js","components/Invoices.js","components/Clients.js","components/WorkItems.js","components/Estimates.js","utils/imageStorage.js","components/CompanyInfo.js","utils/phoneFormatter.js","components/UserManagement.js","components/AdminPanel.js","App.js","index.tsx","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["// Experimental browser folder storage using File System Access API (Edge/Chrome)\n\nconst DB_NAME = 'cms-fs';\nconst STORE = 'handles';\nconst DIR_KEY = 'dirHandle';\n\nfunction isSupported() {\n  return typeof window !== 'undefined' && 'showDirectoryPicker' in window;\n}\n\nfunction openDb() {\n  return new Promise((resolve, reject) => {\n    const req = indexedDB.open(DB_NAME, 1);\n    req.onupgradeneeded = () => {\n      const db = req.result;\n      if (!db.objectStoreNames.contains(STORE)) db.createObjectStore(STORE);\n    };\n    req.onsuccess = () => resolve(req.result);\n    req.onerror = () => reject(req.error);\n  });\n}\n\nasync function idbGet(key) {\n  const db = await openDb();\n  return new Promise((resolve, reject) => {\n    const tx = db.transaction(STORE, 'readonly');\n    const st = tx.objectStore(STORE);\n    const req = st.get(key);\n    req.onsuccess = () => resolve(req.result || null);\n    req.onerror = () => reject(req.error);\n  });\n}\n\nasync function idbSet(key, value) {\n  const db = await openDb();\n  return new Promise((resolve, reject) => {\n    const tx = db.transaction(STORE, 'readwrite');\n    const st = tx.objectStore(STORE);\n    const req = st.put(value, key);\n    req.onsuccess = () => resolve();\n    req.onerror = () => reject(req.error);\n  });\n}\n\nasync function getSavedDirectoryHandle() {\n  if (!isSupported()) return null;\n  try {\n    const handle = await idbGet(DIR_KEY);\n    return handle || null;\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function saveDirectoryHandle(handle) {\n  if (!isSupported()) return false;\n  try {\n    await idbSet(DIR_KEY, handle);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function verifyPermission(handle, mode = 'readwrite') {\n  if (!handle) return false;\n  if (await handle.queryPermission({ mode }) === 'granted') return true;\n  if (await handle.requestPermission({ mode }) === 'granted') return true;\n  return false;\n}\n\nasync function chooseDirectory() {\n  if (!isSupported()) return null;\n  try {\n    const handle = await window.showDirectoryPicker({ id: 'cms-data' });\n    if (!(await verifyPermission(handle, 'readwrite'))) return null;\n    await saveDirectoryHandle(handle);\n    return handle;\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function getFileHandle(dirHandle, name) {\n  return await dirHandle.getFileHandle(name, { create: true });\n}\n\nasync function readKey(dirHandle, key) {\n  try {\n    if (!dirHandle) dirHandle = await getSavedDirectoryHandle();\n    if (!dirHandle) return null;\n    if (!(await verifyPermission(dirHandle, 'read'))) return null;\n    const fileHandle = await getFileHandle(dirHandle, `${key}.json`);\n    const file = await fileHandle.getFile();\n    const text = await file.text();\n    if (!text) return null;\n    return JSON.parse(text);\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function writeKey(dirHandle, key, obj) {\n  try {\n    if (!dirHandle) dirHandle = await getSavedDirectoryHandle();\n    if (!dirHandle) return false;\n    if (!(await verifyPermission(dirHandle, 'readwrite'))) return false;\n    const fileHandle = await getFileHandle(dirHandle, `${key}.json`);\n    const writable = await fileHandle.createWritable();\n    await writable.write(new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' }));\n    await writable.close();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function writeKeyDirect(key, value) {\n  const dir = await getSavedDirectoryHandle();\n  if (!dir) return false;\n  return await writeKey(dir, key, value);\n}\n\nexport const browserFs = {\n  isSupported,\n  getSavedDirectoryHandle,\n  saveDirectoryHandle,\n  chooseDirectory,\n  readKey,\n  writeKey,\n  writeKeyDirect,\n};\n","// Storage abstraction: Electron JSON file storage if available, else localStorage\n\nimport { browserFs } from './browserFs';\n\nexport const storage = {\n  getItem(key, defaultValue) {\n    try {\n      if (typeof window !== 'undefined' && window.cms && typeof window.cms.storageGetSync === 'function') {\n        const v = window.cms.storageGetSync(key);\n        return v == null ? defaultValue : v;\n      }\n    } catch (e) {}\n    try {\n      const raw = localStorage.getItem(key);\n      return raw ? JSON.parse(raw) : defaultValue;\n    } catch (e) {\n      return defaultValue;\n    }\n  },\n  setItem(key, data) {\n    try {\n      if (typeof window !== 'undefined' && window.cms && typeof window.cms.storageSet === 'function') {\n        window.cms.storageSet(key, data);\n        return;\n      }\n    } catch (e) {}\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n    } catch (e) {}\n    // Additionally mirror to chosen browser directory if supported\n    if (browserFs.isSupported()) {\n      // Fire and forget; on failure it silently falls back\n      browserFs.writeKeyDirect(key, data).catch(() => {});\n    }\n  },\n  async chooseBrowserDirectory() {\n    if (!browserFs.isSupported()) return false;\n    const handle = await browserFs.chooseDirectory();\n    return !!handle;\n  },\n  async getBrowserDirectoryInfo() {\n    if (!browserFs.isSupported()) return null;\n    const handle = await browserFs.getSavedDirectoryHandle();\n    if (!handle) return null;\n    return { name: handle.name };\n  }\n};\n","// Automatic XLSX mirror of core app data (read-only export for humans)\nimport * as XLSX from 'xlsx';\nimport { browserFs } from './browserFs';\n\nconst XLSX_MIME = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n\nlet timer = null;\nlet lastPayload = null;\n\nfunction toArrayBuffer(workbook) {\n  // Generate an ArrayBuffer for writing via Electron or File System Access\n  const array = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n  return array; // ArrayBuffer\n}\n\nfunction normalizeArray(arr) {\n  return Array.isArray(arr) ? arr : [];\n}\n\nexport function buildWorkbook(snapshot) {\n  const {\n    companyInfo = {},\n    clients = [],\n    workItems = [],\n    invoices = [],\n    estimates = [],\n    units = [],\n    categories = [],\n  } = snapshot || {};\n\n  const wb = XLSX.utils.book_new();\n\n  // Company (single row)\n  const companyRows = [companyInfo];\n  const wsCompany = XLSX.utils.json_to_sheet(companyRows);\n  XLSX.utils.book_append_sheet(wb, wsCompany, 'Company');\n\n  // Core entities\n  const wsClients = XLSX.utils.json_to_sheet(normalizeArray(clients));\n  XLSX.utils.book_append_sheet(wb, wsClients, 'Clients');\n\n  const wsWorkItems = XLSX.utils.json_to_sheet(normalizeArray(workItems));\n  XLSX.utils.book_append_sheet(wb, wsWorkItems, 'WorkItems');\n\n  const wsInvoices = XLSX.utils.json_to_sheet(normalizeArray(invoices));\n  XLSX.utils.book_append_sheet(wb, wsInvoices, 'Invoices');\n\n  const wsEstimates = XLSX.utils.json_to_sheet(normalizeArray(estimates));\n  XLSX.utils.book_append_sheet(wb, wsEstimates, 'Estimates');\n\n  // Lookups\n  const wsUnits = XLSX.utils.json_to_sheet(normalizeArray(units).map(v => ({ unit: v })));\n  XLSX.utils.book_append_sheet(wb, wsUnits, 'Units');\n\n  const wsCategories = XLSX.utils.json_to_sheet(normalizeArray(categories).map(v => ({ category: v })));\n  XLSX.utils.book_append_sheet(wb, wsCategories, 'Categories');\n\n  return wb;\n}\n\nasync function writeViaElectron(ab) {\n  if (typeof window === 'undefined') return false;\n  const api = window.cms;\n  if (!api || typeof api.writeXlsx !== 'function') return false;\n  try {\n    // Send as Uint8Array for efficient IPC transfer\n    const uint = new Uint8Array(ab);\n    await api.writeXlsx(uint, 'latest.xlsx');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function writeViaBrowserFs(ab) {\n  try {\n    if (!browserFs.isSupported()) return false;\n    const dir = await browserFs.getSavedDirectoryHandle();\n    if (!dir) return false;\n    const fileHandle = await dir.getFileHandle('latest.xlsx', { create: true });\n    const writable = await fileHandle.createWritable();\n    await writable.write(new Blob([ab], { type: XLSX_MIME }));\n    await writable.close();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function mirrorNow(snapshot) {\n  try {\n    const wb = buildWorkbook(snapshot);\n    const ab = toArrayBuffer(wb);\n    // Prefer Electron path; fallback to browser directory if previously granted\n    const okElectron = await writeViaElectron(ab);\n    if (okElectron) return true;\n    const okBrowser = await writeViaBrowserFs(ab);\n    return okBrowser;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function scheduleMirror(snapshot, delayMs = 1000) {\n  lastPayload = snapshot;\n  if (timer) clearTimeout(timer);\n  timer = setTimeout(() => {\n    mirrorNow(lastPayload);\n  }, delayMs);\n}\n\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { storage } from '../services/storage';\nimport { scheduleMirror } from '../services/xlsxMirror';\n\n// Context 생성\nconst AppContext = createContext();\n\n// Custom Hook for using context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\n// localStorage 키 상수\nconst STORAGE_KEYS = {\n  COMPANY_INFO: 'constructionApp_companyInfo',\n  CLIENTS: 'constructionApp_clients',\n  WORK_ITEMS: 'constructionApp_workItems',\n  INVOICES: 'constructionApp_invoices',\n  ESTIMATES: 'constructionApp_estimates',\n  UNITS: 'constructionApp_units',\n  CATEGORIES: 'constructionApp_categories',\n  STAMP_IMAGE: 'constructionApp_stampImage'\n};\n\n// localStorage 유틸리티 함수\nconst loadFromStorage = (key, defaultValue) => storage.getItem(key, defaultValue);\nconst saveToStorage = (key, data) => storage.setItem(key, data);\n\n// Provider 컴포넌트\nexport const AppProvider = ({ children }) => {\n  // 기본 데이터 정의\n  const defaultCompanyInfo = {\n    name: '한국건설',\n    businessNumber: '123-45-67890',\n    address: '서울시 강남구 테헤란로 123',\n    phone: '02-1234-5678',\n    email: 'info@hangeonconstruction.com',\n    representative: '홍길동',\n    bankAccount: '신한은행 110-123-456789',\n    accountHolder: '한국건설(주)'\n  };\n\n  // 건축업체 정보\n  const [companyInfo, setCompanyInfo] = useState(() => \n    loadFromStorage(STORAGE_KEYS.COMPANY_INFO, defaultCompanyInfo)\n  );\n  const defaultClients = [\n    {\n      id: 1,\n      name: '김철수',\n      phone: '010-1234-5678',\n      email: 'kim@email.com',\n      address: '서울시 강남구 테헤란로 123',\n      workplaces: [\n        {\n          id: 1,\n          name: '신축 주택',\n          address: '서울시 강남구 역삼동 123-45',\n          description: '단독주택 신축 현장'\n        },\n        {\n          id: 2,\n          name: '차고 건설',\n          address: '서울시 강남구 역삼동 123-45',\n          description: '기존 주택 부지 내 차고 건설'\n        }\n      ],\n      projects: ['단독주택 신축'],\n      totalBilled: 12000000,\n      outstanding: 3500000,\n      notes: '성실한 고객, 추천 가능'\n    },\n    {\n      id: 2,\n      name: '박영희',\n      phone: '010-2345-6789',\n      email: 'park@email.com',\n      address: '서울시 서초구 서초동 456',\n      workplaces: [\n        {\n          id: 1,\n          name: '아파트 리모델링',\n          address: '서울시 서초구 반포동 아파트 101동 503호',\n          description: '아파트 내부 전체 리모델링'\n        }\n      ],\n      projects: ['아파트 리모델링'],\n      totalBilled: 5200000,\n      outstanding: 1200000,\n      notes: '디테일에 민감함'\n    },\n    {\n      id: 3,\n      name: '이민호',\n      phone: '010-3456-7890',\n      email: 'lee@email.com',\n      address: '서울시 마포구 홍대입구로 789',\n      workplaces: [\n        {\n          id: 1,\n          name: '상가 1층',\n          address: '서울시 마포구 홍대입구 상가 1층',\n          description: '카페 개업을 위한 내부 공사'\n        },\n        {\n          id: 2,\n          name: '상가 2층',\n          address: '서울시 마포구 홍대입구 상가 2층',\n          description: '사무실 인테리어 공사'\n        }\n      ],\n      projects: ['상가 내부공사'],\n      totalBilled: 7800000,\n      outstanding: 2600000,\n      notes: '빠른 진행 선호'\n    },\n    {\n      id: 4,\n      name: '정수진',\n      phone: '010-4567-8901',\n      email: 'jung@email.com',\n      address: '경기도 성남시 분당구 정자동 321',\n      workplaces: [\n        {\n          id: 1,\n          name: '화장실 리모델링',\n          address: '경기도 성남시 분당구 정자동 아파트 15동 702호',\n          description: '안방 화장실 전체 리모델링'\n        }\n      ],\n      projects: ['화장실 리모델링'],\n      totalBilled: 1500000,\n      outstanding: 0,\n      notes: '꼼꼼하고 신중함'\n    }\n  ];\n\n  // 건축주 데이터\n  const [clients, setClients] = useState(() => \n    loadFromStorage(STORAGE_KEYS.CLIENTS, defaultClients)\n  );\n\n  const defaultWorkItems = [\n    {\n      id: 1,\n      clientId: 1,\n      clientName: '김철수',\n      workplaceId: 1,\n      workplaceName: '신축 주택',\n      name: '기초공사',\n      category: '토목공사',\n      defaultPrice: 3000000,\n      quantity: 1,\n      unit: '식',\n      description: '건물 기초 및 지반 작업',\n      projectName: '단독주택 신축',\n      status: '완료',\n      date: '2024-09-01',\n      notes: '콘크리트 강도 확인 필요'\n    },\n    {\n      id: 2,\n      clientId: 1,\n      clientName: '김철수',\n      workplaceId: 1,\n      workplaceName: '신축 주택',\n      name: '골조공사',\n      category: '구조공사',\n      defaultPrice: 4000000,\n      quantity: 1,\n      unit: '식',\n      description: '철골 및 철근콘크리트 골조 작업',\n      projectName: '단독주택 신축',\n      status: '완료',\n      date: '2024-08-28',\n      notes: '철근 간격 적정성 검토 필요'\n    },\n    {\n      id: 3,\n      clientId: 2,\n      clientName: '박영희',\n      workplaceId: 1,\n      workplaceName: '아파트 리모델링',\n      name: '벽체 철거',\n      category: '철거공사',\n      defaultPrice: 50000,\n      quantity: 25,\n      unit: '㎡',\n      description: '기존 벽체 철거 및 폐기물 처리',\n      projectName: '아파트 리모델링',\n      status: '완료',\n      date: '2024-08-25',\n      notes: '소음 방지를 위해 오전 작업 권장'\n    },\n    {\n      id: 4,\n      clientId: 2,\n      clientName: '박영희',\n      workplaceId: 1,\n      workplaceName: '아파트 리모델링',\n      name: '바닥 시공',\n      category: '마감공사',\n      defaultPrice: 1200000,\n      quantity: 1,\n      unit: '식',\n      description: '바닥재 설치 및 마감 작업',\n      projectName: '아파트 리모델링',\n      status: '완료',\n      date: '2024-09-02',\n      notes: '학출 방지를 위한 단열 처리 필요'\n    },\n    {\n      id: 5,\n      clientId: 3,\n      clientName: '이민호',\n      workplaceId: 1,\n      workplaceName: '상가 1층',\n      name: '내부 칸막이',\n      category: '내부공사',\n      defaultPrice: 120000,\n      quantity: 30,\n      unit: '㎡',\n      description: '내부 칸막이벽 설치',\n      projectName: '상가 내부공사',\n      status: '진행중',\n      date: '2024-08-20',\n      notes: '소방 규정 준수 확인 필요'\n    },\n    {\n      id: 6,\n      clientId: 3,\n      clientName: '이민호',\n      workplaceId: 2,\n      workplaceName: '상가 2층',\n      name: '전기공사',\n      category: '설비공사',\n      defaultPrice: 1500000,\n      quantity: 1,\n      unit: '식',\n      description: '전기 배선 및 조명 설치',\n      projectName: '상가 내부공사',\n      status: '예정',\n      date: '2024-09-10',\n      notes: '전압 용량 사전 확인 필요'\n    },\n    {\n      id: 7,\n      clientId: 4,\n      clientName: '정수진',\n      workplaceId: 1,\n      workplaceName: '화장실 리모델링',\n      name: '화장실 철거',\n      category: '철거공사',\n      defaultPrice: 500000,\n      quantity: 1,\n      unit: '식',\n      description: '기존 화장실 철거',\n      projectName: '화장실 리모델링',\n      status: '완료',\n      date: '2024-08-15',\n      notes: '방수 처리 상태 확인 필요'\n    },\n    {\n      id: 8,\n      clientId: 4,\n      clientName: '정수진',\n      workplaceId: 1,\n      workplaceName: '화장실 리모델링',\n      name: '화장실 설치',\n      category: '설비공사',\n      defaultPrice: 1000000,\n      quantity: 1,\n      unit: '식',\n      description: '새로운 화장실 설치 및 배관',\n      projectName: '화장실 리모델링',\n      status: '완료',\n      date: '2024-08-22',\n      notes: '급수 압력 테스트 완료'\n    }\n  ];\n\n  // 작업 항목 데이터\n  const [workItems, setWorkItems] = useState(() => \n    loadFromStorage(STORAGE_KEYS.WORK_ITEMS, defaultWorkItems)\n  );\n\n  const defaultInvoices = [\n    {\n      id: 'INV-2024-001',\n      client: '김철수',\n      project: '단독주택 신축',\n      workplaceAddress: '서울시 강남구 역삼동 123-45',\n      amount: 8500000,\n      status: '발송됨',\n      date: '2024-09-01',\n      dueDate: '2024-09-15',\n      workItems: [\n        { name: '기초공사', quantity: 1, unitPrice: 3000000, total: 3000000, description: '건물 기초 및 지반 작업', category: '토목공사', notes: '콘크리트 강도 확인 필요' },\n        { name: '골조공사', quantity: 1, unitPrice: 4000000, total: 4000000, description: '철골 및 철근콘크리트 골조 작업', category: '구조공사', notes: '철근 간격 적정성 검토 필요' },\n        { name: '부대비용', quantity: 1, unitPrice: 1500000, total: 1500000, description: '자재운반 및 기타 부대비용', category: '기타', notes: '운반 차량 접근성 확인' }\n      ]\n    },\n    {\n      id: 'INV-2024-002',\n      client: '박영희',\n      project: '아파트 리모델링',\n      workplaceAddress: '서울시 서초구 반포동 아파트 101동 503호',\n      amount: 3200000,\n      status: '결제완료',\n      date: '2024-08-28',\n      dueDate: '2024-09-12',\n      workItems: [\n        { name: '벽체 철거', quantity: 25, unitPrice: 50000, total: 1250000, description: '기존 벽체 철거 및 폐기물 처리', category: '철거공사', notes: '소음 방지를 위해 오전 작업 권장' },\n        { name: '바닥 시공', quantity: 1, unitPrice: 1200000, total: 1200000, description: '바닥재 설치 및 마감 작업', category: '마감공사', notes: '학출 방지를 위한 단열 처리 필요' },\n        { name: '도배 작업', quantity: 1, unitPrice: 750000, total: 750000, description: '전체 벽면 도배', category: '마감공사', notes: '습도 조절 후 시공' }\n      ]\n    },\n    {\n      id: 'INV-2024-003',\n      client: '이민호',\n      project: '상가 내부공사',\n      workplaceAddress: '서울시 마포구 홍대입구 상가 1층',\n      amount: 5800000,\n      status: '미결제',\n      date: '2024-08-25',\n      dueDate: '2024-09-08',\n      workItems: [\n        { name: '내부 칸막이', quantity: 30, unitPrice: 120000, total: 3600000, description: '내부 칸막이벽 설치', category: '내부공사', notes: '소방 규정 준수 확인 필요' },\n        { name: '전기공사', quantity: 1, unitPrice: 1500000, total: 1500000, description: '전기 배선 및 조명 설치', category: '설비공사', notes: '전압 용량 사전 확인 필요' },\n        { name: '마감재 설치', quantity: 1, unitPrice: 700000, total: 700000, description: '천장 및 벽면 마감재 설치', category: '마감공사', notes: '방화 자재 사용 필수' }\n      ]\n    },\n    {\n      id: 'INV-2024-004',\n      client: '정수진',\n      project: '화장실 리모델링',\n      workplaceAddress: '경기도 성남시 분당구 정자동 아파트 15동 702호',\n      amount: 1500000,\n      status: '발송대기',\n      date: '2024-08-22',\n      dueDate: '2024-09-05',\n      workItems: [\n        { name: '화장실 철거', quantity: 1, unitPrice: 500000, total: 500000, description: '기존 화장실 철거', category: '철거공사', notes: '방수 처리 상태 확인 필요' },\n        { name: '화장실 설치', quantity: 1, unitPrice: 1000000, total: 1000000, description: '새로운 화장실 설치 및 배관', category: '설비공사', notes: '급수 압력 테스트 완료' }\n      ]\n    }\n  ];\n\n  // 청구서 데이터\n  const [invoices, setInvoices] = useState(() => \n    loadFromStorage(STORAGE_KEYS.INVOICES, defaultInvoices)\n  );\n\n  const defaultEstimates = [\n    {\n      id: 'EST-2024-001',\n      clientId: 1,\n      clientName: '김철수',\n      workplaceId: 1,\n      workplaceName: '신축 주택',\n      workplaceAddress: '서울시 강남구 역삼동 123-45',\n      projectName: '단독주택 신축',\n      title: '단독주택 신축 공사 견적서',\n      date: '2024-08-15',\n      validUntil: '2024-09-15',\n      status: '검토중',\n      totalAmount: 85000000,\n      items: [\n        {\n          id: 1,\n          category: '토목공사',\n          name: '기초공사',\n          description: '건물 기초 및 지반 작업',\n          quantity: 1,\n          unit: '식',\n          unitPrice: 30000000,\n          total: 30000000,\n          notes: '콘크리트 강도 확인 필요'\n        },\n        {\n          id: 2,\n          category: '구조공사',\n          name: '골조공사',\n          description: '철골 및 철근콘크리트 골조 작업',\n          quantity: 1,\n          unit: '식',\n          unitPrice: 40000000,\n          total: 40000000,\n          notes: '철근 간격 적정성 검토 필요'\n        },\n        {\n          id: 3,\n          category: '마감공사',\n          name: '내외부 마감',\n          description: '내부 및 외부 마감재 시공',\n          quantity: 1,\n          unit: '식',\n          unitPrice: 15000000,\n          total: 15000000,\n          notes: '고급 마감재 적용'\n        }\n      ],\n      notes: '부가세 별도, 설계 변경 시 추가 견적 필요'\n    },\n    {\n      id: 'EST-2024-002',\n      clientId: 2,\n      clientName: '박영희',\n      workplaceId: 1,\n      workplaceName: '아파트 리모델링',\n      workplaceAddress: '서울시 서초구 반포동 아파트 101동 503호',\n      projectName: '아파트 리모델링',\n      title: '아파트 전체 리모델링 견적서',\n      date: '2024-08-10',\n      validUntil: '2024-09-10',\n      status: '승인됨',\n      totalAmount: 32000000,\n      items: [\n        {\n          id: 1,\n          category: '철거공사',\n          name: '벽체 철거',\n          description: '기존 벽체 철거 및 폐기물 처리',\n          quantity: 25,\n          unit: '㎡',\n          unitPrice: 500000,\n          total: 12500000,\n          notes: '소음 방지를 위해 오전 작업 권장'\n        },\n        {\n          id: 2,\n          category: '마감공사',\n          name: '바닥 및 벽면 시공',\n          description: '바닥재 설치 및 벽면 마감 작업',\n          quantity: 1,\n          unit: '식',\n          unitPrice: 19500000,\n          total: 19500000,\n          notes: '습도 조절 후 시공'\n        }\n      ],\n      notes: '공사 기간 약 30일 예상'\n    }\n  ];\n\n  // 견적서 데이터\n  const [estimates, setEstimates] = useState(() => \n    loadFromStorage(STORAGE_KEYS.ESTIMATES, defaultEstimates)\n  );\n\n  // 기본 단위 및 카테고리 정의\n  const defaultUnits = ['식', '㎡', '개', '톤', 'm', 'kg', '회', '일'];\n  const defaultCategories = ['토목공사', '구조공사', '철거공사', '마감공사', '설비공사', '내부공사', '기타'];\n\n  // 단위 및 카테고리 데이터\n  const [units, setUnits] = useState(() => \n    loadFromStorage(STORAGE_KEYS.UNITS, defaultUnits)\n  );\n  const [categories, setCategories] = useState(() => \n    loadFromStorage(STORAGE_KEYS.CATEGORIES, defaultCategories)\n  );\n\n  // 도장 이미지 데이터\n  const [stampImage, setStampImage] = useState(() => \n    loadFromStorage(STORAGE_KEYS.STAMP_IMAGE, null)\n  );\n\n  // 완료된 작업 항목들을 가져오는 함수\n  const getCompletedWorkItems = () => {\n    return workItems.filter(item => item.status === '완료');\n  };\n\n  // 건축주별 완료된 작업 항목들을 가져오는 함수\n  const getCompletedWorkItemsByClient = (clientId) => {\n    return workItems.filter(item => item.clientId === clientId && item.status === '완료');\n  };\n\n  // 청구서 생성을 위한 작업 항목 추가 함수\n  const addWorkItemToInvoice = (workItem, quantity = null, unitPrice = null) => {\n    const finalQuantity = quantity !== null ? quantity : (workItem.quantity || 1);\n    const finalUnitPrice = unitPrice || workItem.defaultPrice;\n    const laborPersons = parseInt(workItem.laborPersons || 0, 10) || 0;\n    const laborUnitRate = parseInt(workItem.laborUnitRate || 0, 10) || 0;\n    const laborPersonsGeneral = parseInt(workItem.laborPersonsGeneral || 0, 10) || 0;\n    const laborUnitRateGeneral = parseInt(workItem.laborUnitRateGeneral || 0, 10) || 0;\n    const laborCost = (laborPersons * laborUnitRate) + (laborPersonsGeneral * laborUnitRateGeneral);\n    return {\n      name: workItem.name,\n      quantity: finalQuantity,\n      unit: workItem.unit,\n      unitPrice: finalUnitPrice,\n      total: (finalQuantity * finalUnitPrice) + laborCost,\n      laborPersons,\n      laborUnitRate,\n      laborPersonsGeneral,\n      laborUnitRateGeneral,\n      description: workItem.description,\n      category: workItem.category,\n      date: workItem.date || '',\n      notes: workItem.notes || ''\n    };\n  };\n\n  // 데이터 변경 시 localStorage에 저장\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.COMPANY_INFO, companyInfo);\n  }, [companyInfo]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.CLIENTS, clients);\n  }, [clients]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.WORK_ITEMS, workItems);\n  }, [workItems]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.INVOICES, invoices);\n  }, [invoices]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.ESTIMATES, estimates);\n  }, [estimates]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.UNITS, units);\n  }, [units]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.CATEGORIES, categories);\n  }, [categories]);\n\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.STAMP_IMAGE, stampImage);\n  }, [stampImage]);\n\n  // Auto XLSX mirror: debounce and write a read-only workbook for human readability\n  useEffect(() => {\n    const snapshot = {\n      companyInfo,\n      clients,\n      workItems,\n      invoices,\n      estimates,\n      units,\n      categories,\n    };\n    // Debounced mirror to minimize IO\n    scheduleMirror(snapshot, 1000);\n  }, [companyInfo, clients, workItems, invoices, estimates, units, categories]);\n\n  // 견적서를 작업 항목으로 변환하는 함수\n  const convertEstimateToWorkItems = (estimateId) => {\n    const estimate = estimates.find(est => est.id === estimateId);\n    if (!estimate) return [];\n\n    const newWorkItems = estimate.items.map((item, index) => ({\n      id: Math.max(...workItems.map(i => i.id)) + index + 1,\n      clientId: estimate.clientId,\n      clientName: estimate.clientName,\n      workplaceId: estimate.workplaceId,\n      workplaceName: estimate.workplaceName,\n      projectName: estimate.projectName,\n      name: item.name,\n      category: item.category,\n      defaultPrice: item.unitPrice,\n      quantity: item.quantity,\n      unit: item.unit,\n      description: item.description,\n      status: '예정',\n      date: new Date().toISOString().split('T')[0],\n      notes: item.notes || ''\n    }));\n\n    setWorkItems(prev => [...prev, ...newWorkItems]);\n    \n    // 견적서 상태를 '작업 전환됨'으로 변경\n    setEstimates(prev => prev.map(est => \n      est.id === estimateId \n        ? { ...est, status: '작업 전환됨' }\n        : est\n    ));\n\n    return newWorkItems;\n  };\n\n  const value = {\n    companyInfo,\n    setCompanyInfo,\n    clients,\n    setClients,\n    workItems,\n    setWorkItems,\n    invoices,\n    setInvoices,\n    estimates,\n    setEstimates,\n    units,\n    setUnits,\n    categories,\n    setCategories,\n    stampImage,\n    setStampImage,\n    getCompletedWorkItems,\n    getCompletedWorkItemsByClient,\n    addWorkItemToInvoice,\n    convertEstimateToWorkItems\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport const UserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const defaultUsers = [\n      { id: 1, username: 'admin', password: 'admin123', name: '관리자', role: 'admin' },\n      { id: 2, username: 'manager', password: 'manager123', name: '매니저', role: 'manager' },\n      { id: 3, username: 'user', password: 'user123', name: '사용자', role: 'user' }\n    ];\n    const users = localStorage.getItem('CMS_USERS');\n    if (!users) {\n      localStorage.setItem('CMS_USERS', JSON.stringify(defaultUsers));\n    }\n\n    const savedUser = sessionStorage.getItem('CURRENT_USER');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n      setIsLoggedIn(true);\n    } else {\n      // 과거 잔존 세션 제거\n      localStorage.removeItem('CURRENT_USER');\n    }\n  }, []);\n\n  const login = (username, password) => {\n    const users = JSON.parse(localStorage.getItem('CMS_USERS') || '[]');\n    const user = users.find(u => u.username === username && u.password === password);\n    \n    if (user) {\n      setCurrentUser(user);\n      setIsLoggedIn(true);\n      sessionStorage.setItem('CURRENT_USER', JSON.stringify(user));\n      return { success: true, user };\n    } else {\n      return { success: false, error: '아이디 또는 비밀번호가 올바르지 않습니다.' };\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    setIsLoggedIn(false);\n    try { sessionStorage.removeItem('CURRENT_USER'); } catch (e) {}\n    try { localStorage.removeItem('CURRENT_USER'); } catch (e) {}\n    // 다른 탭에도 로그아웃 브로드캐스트\n    try {\n      localStorage.setItem('CMS_LOGOUT', String(Date.now()));\n      localStorage.removeItem('CMS_LOGOUT');\n    } catch (e) {}\n  };\n\n  const getUserStorageKey = (username, key) => {\n    return `USER_${username}_${key}`;\n  };\n\n  const getAllUsers = () => {\n    return JSON.parse(localStorage.getItem('CMS_USERS') || '[]');\n  };\n\n  const addUser = (userData) => {\n    const users = getAllUsers();\n    const newUser = {\n      ...userData,\n      id: Math.max(0, ...users.map(u => u.id)) + 1\n    };\n    \n    if (users.find(u => u.username === userData.username)) {\n      return { success: false, error: '이미 존재하는 아이디입니다.' };\n    }\n\n    users.push(newUser);\n    localStorage.setItem('CMS_USERS', JSON.stringify(users));\n    return { success: true, user: newUser };\n  };\n\n  const updateUser = (userId, userData) => {\n    const users = getAllUsers();\n    const userIndex = users.findIndex(u => u.id === userId);\n    \n    if (userIndex === -1) {\n      return { success: false, error: '사용자를 찾을 수 없습니다.' };\n    }\n\n    const existingUser = users.find(u => u.username === userData.username && u.id !== userId);\n    if (existingUser) {\n      return { success: false, error: '이미 존재하는 아이디입니다.' };\n    }\n\n    users[userIndex] = { ...users[userIndex], ...userData };\n    localStorage.setItem('CMS_USERS', JSON.stringify(users));\n    \n    if (currentUser && currentUser.id === userId) {\n      const updatedUser = users[userIndex];\n      setCurrentUser(updatedUser);\n      localStorage.setItem('CURRENT_USER', JSON.stringify(updatedUser));\n    }\n\n    return { success: true, user: users[userIndex] };\n  };\n\n  const deleteUser = (userId) => {\n    const users = getAllUsers();\n    const filteredUsers = users.filter(u => u.id !== userId);\n    \n    if (users.length === filteredUsers.length) {\n      return { success: false, error: '사용자를 찾을 수 없습니다.' };\n    }\n\n    localStorage.setItem('CMS_USERS', JSON.stringify(filteredUsers));\n    \n    if (currentUser && currentUser.id === userId) {\n      logout();\n    }\n\n    return { success: true };\n  };\n\n  const isAdmin = () => {\n    return currentUser && currentUser.role === 'admin';\n  };\n\n  const value = {\n    currentUser,\n    isLoggedIn,\n    login,\n    logout,\n    getUserStorageKey,\n    getAllUsers,\n    addUser,\n    updateUser,\n    deleteUser,\n    isAdmin\n  };\n\n  // 1시간 무활동 자동 로그아웃\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    let timerId;\n    const TIMEOUT = 60 * 60 * 1000;\n    const reset = () => {\n      clearTimeout(timerId);\n      timerId = setTimeout(() => {\n        logout();\n      }, TIMEOUT);\n    };\n    const events = ['mousemove', 'mousedown', 'keydown', 'scroll', 'touchstart'];\n    events.forEach(ev => window.addEventListener(ev, reset, { passive: true }));\n    reset();\n    return () => {\n      clearTimeout(timerId);\n      events.forEach(ev => window.removeEventListener(ev, reset));\n    };\n  }, [isLoggedIn]);\n\n  // 새로고침 시에는 세션 유지, 탭/창을 완전히 닫으면 세션Storage가 자연 소멸됩니다.\n  // 따라서 beforeunload/pagehide 등에서 세션을 강제로 제거하지 않습니다.\n\n  // 다른 탭에서의 로그아웃 신호를 수신하여 즉시 로그아웃\n  useEffect(() => {\n    const onStorage = (e) => {\n      if (e.key === 'CMS_LOGOUT') {\n        setCurrentUser(null);\n        setIsLoggedIn(false);\n        try { sessionStorage.removeItem('CURRENT_USER'); } catch (err) {}\n        try { localStorage.removeItem('CURRENT_USER'); } catch (err) {}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// 자동 로그아웃: 브라우저 창/탭을 닫거나 새로고침 시 세션 제거\n// (로컬스토리지의 CURRENT_USER 키를 제거하여 다음 방문 시 로그인 화면으로 유도)\n// 전역 리스너는 컴포넌트 내부로 이동\n\nexport default UserProvider;\n","import React, { useState } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { login } = useUser();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    if (!username || !password) {\n      setError('아이디와 비밀번호를 입력해주세요.');\n      setLoading(false);\n      return;\n    }\n\n    const result = login(username, password);\n    \n    if (result.success) {\n      // 관리자인 경우 관리자 패널로 리다이렉트\n      if (result.user && result.user.role === 'admin') {\n        navigate('/admin');\n      }\n      // 일반 사용자는 자동으로 대시보드로 이동 (App.js에서 처리)\n    } else {\n      setError(result.error);\n    }\n\n    setLoading(false);\n  };\n\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">건설 관리 시스템</h1>\n          <p className=\"text-gray-600\">로그인하여 시작하세요</p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              아이디\n            </label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"아이디를 입력하세요\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              비밀번호\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"비밀번호를 입력하세요\"\n            />\n          </div>\n\n          {error && (\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n              <p className=\"text-red-700 text-sm\">{error}</p>\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {loading ? '로그인 중...' : '로그인'}\n          </button>\n        </form>\n\n\n        <div className=\"mt-6 text-xs text-gray-500 text-center\">\n          <p>건설 관리 시스템 v1.0</p>\n          <p>© 2025 Construction Management System</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useUser } from '../contexts/UserContext';\nimport { \n  HomeIcon, \n  DocumentTextIcon,\n  UsersIcon,\n  WrenchScrewdriverIcon,\n  CogIcon,\n  CalculatorIcon,\n  BuildingOffice2Icon,\n  UserIcon,\n  ShieldCheckIcon\n} from '@heroicons/react/24/outline';\n\nfunction Navbar() {\n  const location = useLocation();\n  const { currentUser, isAdmin, logout } = useUser();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const menuRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\n        setShowUserMenu(false);\n      }\n    };\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape') setShowUserMenu(false);\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const isActive = (path) => {\n    return location.pathname === path;\n  };\n\n  return (\n    <nav className=\"bg-blue-600 text-white shadow-lg\">\n      <div className=\"max-w-screen-2xl mx-auto pl-0.5 pr-0.5\">\n        <div className=\"flex items-center justify-between h-20\">\n          <div className=\"flex items-center ml-0.5\">\n            {isAdmin() ? (\n              <div className=\"text-xl font-bold flex items-center space-x-2 cursor-default select-none\">\n                <BuildingOffice2Icon className=\"h-8 w-8\" />\n                <span>건축 견적/청구 시스템</span>\n              </div>\n            ) : (\n              <Link to=\"/\" className=\"text-xl font-bold flex items-center space-x-2\">\n                <BuildingOffice2Icon className=\"h-8 w-8\" />\n                <span>건축 견적/청구 시스템</span>\n              </Link>\n            )}\n          </div>\n          \n          <div className=\"hidden md:block\">\n            {isAdmin() ? (\n              <div className=\"ml-6 md:ml-8 lg:ml-10\" />\n            ) : (\n              <div className=\"ml-2 md:ml-4 lg:ml-6 flex items-baseline space-x-3 md:space-x-4 lg:space-x-6\">\n                <Link\n                  to=\"/\"\n                  className={`px-2 md:px-3 py-2 rounded-md text-xs md:text-sm font-medium flex items-center space-x-1 ${\n                    isActive('/') \n                      ? 'bg-blue-700 text-white' \n                      : 'text-blue-100 hover:bg-blue-500 hover:text-white'\n                  }`}\n                >\n                  <HomeIcon className=\"h-5 w-5\" />\n                  <span>대시보드</span>\n                </Link>\n                <Link\n                  to=\"/estimates\"\n                  className={`px-2 md:px-3 py-2 rounded-md text-xs md:text-sm font-medium flex items-center space-x-1 ${\n                    isActive('/estimates') \n                      ? 'bg-blue-700 text-white' \n                      : 'text-blue-100 hover:bg-blue-500 hover:text-white'\n                  }`}\n                >\n                  <CalculatorIcon className=\"h-5 w-5\" />\n                  <span>견적서 관리</span>\n                </Link>\n                <Link\n                  to=\"/invoices\"\n                  className={`px-2 md:px-3 py-2 rounded-md text-xs md:text-sm font-medium flex items-center space-x-1 ${\n                    isActive('/invoices') \n                      ? 'bg-blue-700 text-white' \n                      : 'text-blue-100 hover:bg-blue-500 hover:text-white'\n                  }`}\n                >\n                  <DocumentTextIcon className=\"h-5 w-5\" />\n                  <span>청구서 관리</span>\n                </Link>\n                <Link\n                  to=\"/clients\"\n                  className={`px-2 md:px-3 py-2 rounded-md text-xs md:text-sm font-medium flex items-center space-x-1 ${\n                    isActive('/clients') \n                      ? 'bg-blue-700 text-white' \n                      : 'text-blue-100 hover:bg-blue-500 hover:text-white'\n                  }`}\n                >\n                  <UsersIcon className=\"h-5 w-5\" />\n                  <span>건축주 관리</span>\n                </Link>\n                <Link\n                  to=\"/work-items\"\n                  className={`px-2 md:px-3 py-2 rounded-md text-xs md:text-sm font-medium flex items-center space-x-1 ${\n                    isActive('/work-items') \n                      ? 'bg-blue-700 text-white' \n                      : 'text-blue-100 hover:bg-blue-500 hover:text-white'\n                  }`}\n                >\n                  <WrenchScrewdriverIcon className=\"h-5 w-5\" />\n                  <span>작업 항목 관리</span>\n                </Link>\n                <Link\n                  to=\"/company-info\"\n                className={`px-2 md:px-3 py-2 rounded-md text-xs md:text-sm font-medium flex items-center space-x-1 ${\n                  isActive('/company-info') \n                    ? 'bg-blue-700 text-white' \n                    : 'text-blue-100 hover:bg-blue-500 hover:text-white'\n                }`}\n                >\n                  <CogIcon className=\"h-5 w-5\" />\n                  <span>환경설정</span>\n                </Link>\n              </div>\n            )}\n          </div>\n\n          <div className=\"relative mr-0.5\" ref={menuRef}>\n            <button\n              onClick={() => setShowUserMenu(!showUserMenu)}\n              className=\"flex items-center space-x-2 px-3 py-2 rounded-md text-blue-100 hover:bg-blue-500 hover:text-white\"\n            >\n              {isAdmin() ? (\n                <>\n                  <ShieldCheckIcon className=\"h-5 w-5\" aria-label=\"관리자\" />\n                  <span>관리자</span>\n                </>\n              ) : (\n                <>\n                  <UserIcon className=\"h-5 w-5\" aria-label=\"사용자\" />\n                  <span>{currentUser?.name || currentUser?.username}</span>\n                </>\n              )}\n            </button>\n\n            {showUserMenu && (\n              <div className=\"absolute right-0 mt-2 w-56 bg-white rounded-md shadow-lg z-50 border border-gray-200\">\n                <div className=\"py-2\">\n                  <div className=\"px-4 pb-2 text-sm text-gray-700 border-b border-gray-100\">\n                    <p className=\"font-medium\">{currentUser?.name}</p>\n                    <p className=\"text-gray-500\">{currentUser?.username}</p>\n                    <p className=\"text-xs text-gray-400 mt-1\">역할: {currentUser?.role === 'admin' ? '관리자' : currentUser?.role === 'manager' ? '매니저' : '사용자'}</p>\n                  </div>\n                  <button\n                    onClick={() => {\n                      setShowUserMenu(false);\n                      logout();\n                    }}\n                    className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-50\"\n                  >\n                    로그아웃\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { useMemo, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useApp } from '../contexts/AppContext';\n\nfunction Dashboard() {\n  const {\n    invoices, clients,\n    companyInfo, workItems, estimates, units, categories, stampImage,\n    setCompanyInfo, setClients, setWorkItems, setInvoices, setEstimates, setUnits, setCategories, setStampImage\n  } = useApp();\n  const restoreInputRef = useRef(null);\n  const formatCurrency = (n) => `₩${(n || 0).toLocaleString()}`;\n\n  const recentInvoices = useMemo(() => {\n    const list = (invoices || []).slice().sort((a, b) => (b.date || '').localeCompare(a.date || ''));\n    return list.slice(0, 5);\n  }, [invoices]);\n\n  const total = useMemo(() => (invoices || []).reduce((s, i) => s + (i.amount || 0), 0), [invoices]);\n  const paid = useMemo(() => (invoices || []).filter(i => i.status === '결제완료').reduce((s, i) => s + (i.amount || 0), 0), [invoices]);\n  const pending = total - paid;\n\n  const stats = [\n    { title: '전체 청구액', value: formatCurrency(total), color: 'bg-blue-500', icon: '📄' },\n    { title: '미수금(요약)', value: formatCurrency(pending), color: 'bg-orange-500', icon: '💰' },\n    { title: '결제완료', value: formatCurrency(paid), color: 'bg-green-500', icon: '✅' },\n    { title: '등록된 건축주', value: String((clients || []).length), color: 'bg-purple-500', icon: '👥', href: '/clients' }\n  ];\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8 flex items-start justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">대시보드</h1>\n          <p className=\"text-gray-600\">청구서 발행 현황을 한눈에 확인하세요</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={() => {\n              const payload = {\n                meta: { exportedAt: new Date().toISOString(), app: 'Construction Management System' },\n                companyInfo, clients, workItems, invoices, estimates, units, categories, stampImage,\n              };\n              const blob = new Blob([JSON.stringify(payload, null, 2)], { type: 'application/json;charset=utf-8' });\n              const url = URL.createObjectURL(blob);\n              const a = document.createElement('a');\n              const stampStr = new Date().toISOString().replace(/[:.]/g, '-');\n              a.href = url;\n              a.download = `cms-backup-${stampStr}.json`;\n              a.click();\n              URL.revokeObjectURL(url);\n            }}\n            className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium px-4 py-2 rounded-md\"\n            title=\"모든 데이터를 JSON으로 저장\"\n          >\n            💾 백업\n          </button>\n          <input\n            ref={restoreInputRef}\n            type=\"file\"\n            accept=\"application/json\"\n            onChange={async (e) => {\n              const file = e.target.files?.[0];\n              if (!file) return;\n              try {\n                const text = await file.text();\n                const data = JSON.parse(text);\n                if (data.companyInfo) setCompanyInfo(data.companyInfo);\n                if (Array.isArray(data.clients)) setClients(data.clients);\n                if (Array.isArray(data.workItems)) setWorkItems(data.workItems);\n                if (Array.isArray(data.invoices)) setInvoices(data.invoices);\n                if (Array.isArray(data.estimates)) setEstimates(data.estimates);\n                if (Array.isArray(data.units)) setUnits(data.units);\n                if (Array.isArray(data.categories)) setCategories(data.categories);\n                if (data.stampImage !== undefined) setStampImage(data.stampImage);\n                alert('데이터 복원이 완료되었습니다.');\n              } catch (err) {\n                console.error('복원 오류:', err);\n                alert('복원 중 오류가 발생했습니다. 올바른 백업 파일인지 확인하세요.');\n              } finally {\n                if (restoreInputRef.current) restoreInputRef.current.value = '';\n              }\n            }}\n            className=\"hidden\"\n          />\n          <button\n            onClick={() => restoreInputRef.current?.click()}\n            className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium px-4 py-2 rounded-md\"\n            title=\"백업 JSON에서 복원\"\n          >\n            ♻️ 복원\n          </button>\n        </div>\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        {stats.map((stat, index) => {\n          const valueSize = (\n            stat.title === '전체 청구액' ||\n            stat.title === '결제완료' ||\n            stat.title === '미수금(요약)' ||\n            stat.title === '등록된 건축주'\n          ) ? 'text-xl' : 'text-3xl';\n          const Card = (\n            <div className=\"bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600 mb-1\">{stat.title}</p>\n                  <p className={`${valueSize} font-bold text-gray-900`}>{stat.value}</p>\n                </div>\n                <div className={`${stat.color} rounded-full p-3 text-white text-2xl`}>\n                  {stat.icon}\n                </div>\n              </div>\n            </div>\n          );\n          return (\n            <div key={index} className=\"rounded-lg\">\n              {stat.href ? (\n                <Link to={stat.href} aria-label={`${stat.title} 자세히 보기`} className=\"block focus:outline-none focus:ring-2 focus:ring-primary-500 rounded-lg\">\n                  {Card}\n                </Link>\n              ) : (\n                Card\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* 안내 문구 */}\n      <div className=\"mt-6 bg-yellow-50 border border-yellow-200 text-yellow-800 rounded-md px-4 py-3\">\n        작업 종료 시 상단의 ‘백업’ 버튼을 눌러 데이터를 보관하세요. 복원이 필요한 경우 ‘복원’ 버튼을 통해 백업 파일을 선택하면 됩니다.\n      </div>\n\n      {/* 최근 청구서 */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">최근 청구서</h2>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full\">\n              <thead>\n                <tr className=\"border-b border-gray-200\">\n                  <th className=\"text-left py-2 text-sm font-medium text-gray-600\">건축주</th>\n                  <th className=\"text-left py-2 text-sm font-medium text-gray-600\">프로젝트</th>\n                  <th className=\"text-left py-2 text-sm font-medium text-gray-600\">금액</th>\n                  <th className=\"text-left py-2 text-sm font-medium text-gray-600\">상태</th>\n                  <th className=\"text-left py-2 text-sm font-medium text-gray-600\">날짜</th>\n                </tr>\n              </thead>\n              <tbody>\n                {recentInvoices.map((invoice) => (\n                  <tr key={invoice.id} className=\"border-b border-gray-100 hover:bg-gray-50\">\n                    <td className=\"py-3 text-sm text-gray-900\">{invoice.client}</td>\n                    <td className=\"py-3 text-sm text-gray-900\">{invoice.project}</td>\n                    <td className=\"py-3 text-sm font-medium text-gray-900\">\n                      {formatCurrency(invoice.amount)}\n                    </td>\n                    <td className=\"py-3\">\n                      <span className={`px-2 py-1 text-xs font-semibold rounded-full ${\n                        invoice.status === '결제완료' ? 'bg-green-100 text-green-800' :\n                        invoice.status === '발송됨' ? 'bg-blue-100 text-blue-800' :\n                        invoice.status === '미결제' ? 'bg-orange-100 text-orange-800' :\n                        'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        {invoice.status}\n                      </span>\n                    </td>\n                    <td className=\"py-3 text-sm text-gray-600\">{invoice.date}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","// 숫자를 한글로 변환하는 함수\nexport const numberToKorean = (number) => {\n  if (number === 0) return '영';\n\n  const units = ['', '일', '이', '삼', '사', '오', '육', '칠', '팔', '구'];\n  const tens = ['', '십', '백', '천'];\n  const bigUnits = ['', '만', '억', '조'];\n\n  const convertGroup = (num) => {\n    let result = '';\n    const digits = num.toString().split('').map(Number);\n    \n    for (let i = 0; i < digits.length; i++) {\n      const digit = digits[i];\n      const position = digits.length - 1 - i;\n      \n      if (digit === 0) continue;\n      \n      // 1의 경우 십의 자리에서는 생략\n      if (digit === 1 && position === 1 && digits.length > 1) {\n        result += tens[position];\n      } else {\n        result += units[digit] + tens[position];\n      }\n    }\n    \n    return result;\n  };\n\n  let result = '';\n  let groups = [];\n  let tempNumber = Math.abs(number);\n  \n  // 4자리씩 그룹으로 나누기\n  while (tempNumber > 0) {\n    groups.unshift(tempNumber % 10000);\n    tempNumber = Math.floor(tempNumber / 10000);\n  }\n  \n  // 각 그룹을 한글로 변환\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (group === 0) continue;\n    \n    const groupText = convertGroup(group);\n    const unitIndex = groups.length - 1 - i;\n    \n    result += groupText + bigUnits[unitIndex];\n  }\n  \n  return (number < 0 ? '마이너스 ' : '') + result;\n};","import * as XLSX from 'xlsx';\n\n// 엑셀 파일 내보내기 함수들\nexport const exportToExcel = {\n  // 건축주 데이터 내보내기\n  clients: (clients) => {\n    const data = clients.map(client => ({\n      'ID': client.id,\n      '이름': client.name,\n      '전화번호': client.phone,\n      '이메일': client.email,\n      '주소': client.address,\n      '프로젝트': client.projects.join(', '),\n      '총 청구금액': client.totalBilled,\n      '미수금': client.outstanding,\n      '비고': client.notes\n    }));\n\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '건축주 목록');\n    \n    // 컬럼 너비 설정\n    worksheet['!cols'] = [\n      { width: 8 },   // ID\n      { width: 15 },  // 이름\n      { width: 15 },  // 전화번호\n      { width: 25 },  // 이메일\n      { width: 30 },  // 주소\n      { width: 20 },  // 프로젝트\n      { width: 15 },  // 총 청구금액\n      { width: 15 },  // 미수금\n      { width: 30 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, '건축주_목록.xlsx');\n  },\n\n  // 작업 항목 데이터 내보내기\n  workItems: (workItems) => {\n    const data = workItems.map(item => ({\n      'ID': item.id,\n      '건축주': item.clientName,\n      '작업장': item.workplaceName,\n      '프로젝트': item.projectName,\n      '내용': item.name,\n      '카테고리': item.category,\n      '기본단가': item.defaultPrice,\n      '수량': item.quantity || 1,\n      '단위': item.unit,\n      '총금액': (item.defaultPrice || 0) * (item.quantity || 1),\n      '인부인원': item.laborPersons || '',\n      '인부단가': item.laborUnitRate || '',\n      '인부비': ((parseInt(item.laborPersons || 0, 10) || 0) * (parseInt(item.laborUnitRate || 0, 10) || 0)),\n      '총금액(인부포함)': ((item.defaultPrice || 0) * (item.quantity || 1)) + ((parseInt(item.laborPersons || 0, 10) || 0) * (parseInt(item.laborUnitRate || 0, 10) || 0)),\n      '세부작업': item.description,\n      '상태': item.status,\n      '날짜': item.date,\n      '비고': item.notes\n    }));\n\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '작업 항목');\n    \n    worksheet['!cols'] = [\n      { width: 8 },   // ID\n      { width: 12 },  // 건축주\n      { width: 20 },  // 작업장\n      { width: 15 },  // 프로젝트\n      { width: 15 },  // 내용\n      { width: 12 },  // 카테고리\n      { width: 15 },  // 기본단가\n      { width: 8 },   // 수량\n      { width: 8 },   // 단위\n      { width: 15 },  // 총금액\n      { width: 10 },  // 인부인원\n      { width: 15 },  // 인부단가\n      { width: 15 },  // 인부비\n      { width: 18 },  // 총금액(인부포함)\n      { width: 30 },  // 세부작업\n      { width: 10 },  // 상태\n      { width: 12 },  // 날짜\n      { width: 25 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, '작업_항목.xlsx');\n  },\n\n  // 청구서 데이터 내보내기\n  invoices: (invoices) => {\n    const data = invoices.map(invoice => ({\n      '청구서번호': invoice.id,\n      '건축주': invoice.client,\n      '프로젝트': invoice.project,\n      '작업장주소': invoice.workplaceAddress,\n      '청구금액': invoice.amount,\n      '상태': invoice.status,\n      '발행일': invoice.date,\n      '지불기한': invoice.dueDate,\n      '작업항목수': invoice.workItems.length\n    }));\n\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '청구서 목록');\n    \n    worksheet['!cols'] = [\n      { width: 15 },  // 청구서번호\n      { width: 12 },  // 건축주\n      { width: 15 },  // 프로젝트\n      { width: 35 },  // 작업장주소\n      { width: 15 },  // 청구금액\n      { width: 12 },  // 상태\n      { width: 12 },  // 발행일\n      { width: 12 },  // 지불기한\n      { width: 12 }   // 작업항목수\n    ];\n    \n    XLSX.writeFile(workbook, '청구서_목록.xlsx');\n  },\n\n  // 견적서 데이터 내보내기\n  estimates: (estimates) => {\n    const data = estimates.map(estimate => ({\n      '견적서번호': estimate.id,\n      '건축주': estimate.clientName,\n      '프로젝트': estimate.projectName,\n      '작업장주소': estimate.workplaceAddress,\n      '견적금액': estimate.totalAmount,\n      '상태': estimate.status,\n      '발행일': estimate.date,\n      '유효기한': estimate.validUntil,\n      '작업항목수': estimate.items ? estimate.items.length : 0\n    }));\n\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '견적서 목록');\n    \n    worksheet['!cols'] = [\n      { width: 15 },  // 견적서번호\n      { width: 12 },  // 건축주\n      { width: 15 },  // 프로젝트\n      { width: 35 },  // 작업장주소\n      { width: 15 },  // 견적금액\n      { width: 12 },  // 상태\n      { width: 12 },  // 발행일\n      { width: 12 },  // 유효기한\n      { width: 12 }   // 작업항목수\n    ];\n    \n    XLSX.writeFile(workbook, '견적서_목록.xlsx');\n  },\n\n  // 상세 견적서 내보내기\n  estimateDetail: (estimate) => {\n    const headerData = [\n      ['견적서 번호', estimate.id],\n      ['건축주', estimate.clientName],\n      ['프로젝트', estimate.projectName],\n      ['작업장 주소', estimate.workplaceAddress],\n      ['발행일', estimate.date],\n      ['유효 기한', estimate.validUntil],\n      ['상태', estimate.status],\n      ['총 금액', estimate.totalAmount],\n      []\n    ];\n\n    const workItemData = estimate.items.map((item, index) => ({\n      '순번': index + 1,\n      '내용': item.name,\n      '수량': item.quantity,\n      '단가': item.unitPrice,\n      '합계': item.total,\n      '카테고리': item.category,\n      '설명': item.description,\n      '비고': item.notes\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 헤더 시트\n    const headerSheet = XLSX.utils.aoa_to_sheet(headerData);\n    XLSX.utils.book_append_sheet(workbook, headerSheet, '견적서 정보');\n    \n    // 작업 항목 시트\n    const workItemSheet = XLSX.utils.json_to_sheet(workItemData);\n    XLSX.utils.book_append_sheet(workbook, workItemSheet, '작업 내역');\n    \n    workItemSheet['!cols'] = [\n      { width: 8 },   // 순번\n      { width: 20 },  // 내용\n      { width: 10 },  // 수량\n      { width: 15 },  // 단가\n      { width: 15 },  // 합계\n      { width: 12 },  // 카테고리\n      { width: 30 },  // 설명\n      { width: 25 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, `견적서_${estimate.id}.xlsx`);\n  },\n\n  // 상세 청구서 내보내기\n  invoiceDetail: (invoice) => {\n    const headerData = [\n      ['청구서 번호', invoice.id],\n      ['건축주', invoice.client],\n      ['프로젝트', invoice.project],\n      ['작업장 주소', invoice.workplaceAddress],\n      ['발행일', invoice.date],\n      ['지불 기한', invoice.dueDate],\n      ['상태', invoice.status],\n      ['총 금액', invoice.amount],\n      []\n    ];\n\n    const workItemData = invoice.workItems.map((item, index) => ({\n      '순번': index + 1,\n      '내용': item.name,\n      '수량': item.quantity,\n      '단가': item.unitPrice,\n      '합계': item.total,\n      '카테고리': item.category,\n      '설명': item.description,\n      '비고': item.notes\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 헤더 시트\n    const headerSheet = XLSX.utils.aoa_to_sheet(headerData);\n    XLSX.utils.book_append_sheet(workbook, headerSheet, '청구서 정보');\n    \n    // 작업 항목 시트\n    const workItemSheet = XLSX.utils.json_to_sheet(workItemData);\n    XLSX.utils.book_append_sheet(workbook, workItemSheet, '작업 내역');\n    \n    workItemSheet['!cols'] = [\n      { width: 8 },   // 순번\n      { width: 20 },  // 내용\n      { width: 10 },  // 수량\n      { width: 15 },  // 단가\n      { width: 15 },  // 합계\n      { width: 12 },  // 카테고리\n      { width: 30 },  // 설명\n      { width: 25 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, `청구서_${invoice.id}.xlsx`);\n  }\n};\n\n// 엑셀 파일 가져오기 함수들\nexport const importFromExcel = {\n  // 건축주 데이터 가져오기\n  clients: (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\n          \n          const clients = jsonData.map((row, index) => ({\n            id: row['ID'] || index + 1,\n            name: row['이름'] || '',\n            phone: row['전화번호'] || '',\n            email: row['이메일'] || '',\n            address: row['주소'] || '',\n            projects: row['프로젝트'] ? row['프로젝트'].split(', ') : [],\n            totalBilled: row['총 청구금액'] || 0,\n            outstanding: row['미수금'] || 0,\n            notes: row['비고'] || '',\n            workplaces: [] // 기본값\n          }));\n          \n          resolve(clients);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  },\n\n  // 작업 항목 데이터 가져오기\n  workItems: (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\n          \n          const workItems = jsonData.map((row, index) => ({\n            id: row['ID'] || index + 1,\n            clientId: row['건축주ID'] || 1,\n            clientName: row['건축주'] || '',\n            workplaceId: row['작업장ID'] || 1,\n            workplaceName: row['작업장'] || '',\n            projectName: row['프로젝트'] || '',\n            name: row['내용'] || '',\n            category: row['카테고리'] || '',\n            defaultPrice: row['기본단가'] || 0,\n            quantity: row['수량'] || 1,\n            unit: row['단위'] || '',\n            description: row['세부작업'] || '',\n            status: row['상태'] || '예정',\n            date: row['날짜'] || new Date().toISOString().split('T')[0],\n            notes: row['비고'] || '',\n            // 인부 필드: 한국어/영문 키 모두 허용\n            laborPersons: row['인부인원'] ?? row['LaborPersons'] ?? '',\n            laborUnitRate: row['인부단가'] ?? row['LaborUnitRate'] ?? ''\n          }));\n          \n          resolve(workItems);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  },\n\n  // 견적서 데이터 가져오기\n  estimates: (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\n          \n          const estimates = jsonData.map((row, index) => ({\n            id: row['견적서번호'] || `EST-${Date.now()}-${index + 1}`,\n            clientName: row['건축주'] || '',\n            projectName: row['프로젝트'] || '',\n            workplaceAddress: row['작업장주소'] || '',\n            totalAmount: row['견적금액'] || 0,\n            status: row['상태'] || '작성중',\n            date: row['발행일'] || new Date().toISOString().split('T')[0],\n            validUntil: row['유효기한'] || '',\n            items: [], // 기본값\n            notes: row['비고'] || ''\n          }));\n          \n          resolve(estimates);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }\n};\n\n// 엑셀 템플릿 생성 함수들\nexport const createTemplate = {\n  // 건축주 템플릿\n  clients: () => {\n    const templateData = [\n      {\n        'ID': 1,\n        '이름': '예시건축주',\n        '전화번호': '010-1234-5678',\n        '이메일': 'example@email.com',\n        '주소': '서울시 강남구 테헤란로 123',\n        '프로젝트': '주택 신축, 리모델링',\n        '총 청구금액': 15000000,\n        '미수금': 5000000,\n        '비고': '우수 고객'\n      }\n    ];\n\n    const worksheet = XLSX.utils.json_to_sheet(templateData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '건축주 템플릿');\n    \n    worksheet['!cols'] = [\n      { width: 8 },   // ID\n      { width: 15 },  // 이름\n      { width: 15 },  // 전화번호\n      { width: 25 },  // 이메일\n      { width: 30 },  // 주소\n      { width: 20 },  // 프로젝트\n      { width: 15 },  // 총 청구금액\n      { width: 15 },  // 미수금\n      { width: 30 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, '건축주_템플릿.xlsx');\n  },\n\n  // 작업 항목 템플릿\n  workItems: () => {\n    const templateData = [\n      {\n        'ID': 1,\n        '건축주ID': 1,\n        '건축주': '예시건축주',\n        '작업장ID': 1,\n        '작업장': '신축 현장',\n        '프로젝트': '주택 신축',\n        '내용': '기초공사',\n        '카테고리': '토목공사',\n        '기본단가': 3000000,\n        '수량': 1,\n        '단위': '식',\n        '총금액': 3000000,\n        '인부인원': 2,\n        '인부단가': 200000,\n        '인부비': 400000, // (참고) 계산용, 가져오기시 무시됨\n        '총금액(인부포함)': 3400000, // (참고)\n        '세부작업': '건물 기초 및 지반 작업',\n        '상태': '완료',\n        '날짜': '2024-09-01',\n        '비고': '콘크리트 강도 확인 필요'\n      }\n    ];\n\n    const worksheet = XLSX.utils.json_to_sheet(templateData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '작업항목 템플릿');\n    \n    worksheet['!cols'] = [\n      { width: 8 },   // ID\n      { width: 10 },  // 건축주ID\n      { width: 12 },  // 건축주\n      { width: 10 },  // 작업장ID\n      { width: 20 },  // 작업장\n      { width: 15 },  // 프로젝트\n      { width: 15 },  // 내용\n      { width: 12 },  // 카테고리\n      { width: 15 },  // 기본단가\n      { width: 8 },   // 수량\n      { width: 8 },   // 단위\n      { width: 15 },  // 총금액\n      { width: 10 },  // 인부인원\n      { width: 15 },  // 인부단가\n      { width: 15 },  // 인부비\n      { width: 18 },  // 총금액(인부포함)\n      { width: 30 },  // 세부작업\n      { width: 10 },  // 상태\n      { width: 12 },  // 날짜\n      { width: 25 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, '작업항목_템플릿.xlsx');\n  },\n\n  // 견적서 템플릿\n  estimates: () => {\n    const templateData = [\n      {\n        '견적서번호': 'EST-2024-001',\n        '건축주': '예시건축주',\n        '프로젝트': '주택 신축',\n        '작업장주소': '서울시 강남구 테헤란로 123',\n        '견적금액': 50000000,\n        '상태': '작성중',\n        '발행일': '2024-09-01',\n        '유효기한': '2024-10-01',\n        '작업항목수': 5,\n        '비고': '초기 견적서'\n      }\n    ];\n\n    const worksheet = XLSX.utils.json_to_sheet(templateData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '견적서 템플릿');\n    \n    worksheet['!cols'] = [\n      { width: 15 },  // 견적서번호\n      { width: 12 },  // 건축주\n      { width: 15 },  // 프로젝트\n      { width: 35 },  // 작업장주소\n      { width: 15 },  // 견적금액\n      { width: 12 },  // 상태\n      { width: 12 },  // 발행일\n      { width: 12 },  // 유효기한\n      { width: 12 },  // 작업항목수\n      { width: 25 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, '견적서_템플릿.xlsx');\n  },\n\n  // 청구서 템플릿\n  invoices: () => {\n    const templateData = [\n      {\n        '청구서번호': 'INV-2024-001',\n        '건축주': '예시건축주',\n        '프로젝트': '주택 신축',\n        '작업장주소': '서울시 강남구 테헤란로 123',\n        '청구금액': 10000000,\n        '상태': '발송됨',\n        '발행일': '2024-09-01',\n        '납기일': '2024-09-15',\n        '작업항목수': 3,\n        '비고': '1차 청구서'\n      }\n    ];\n\n    const worksheet = XLSX.utils.json_to_sheet(templateData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, '청구서 템플릿');\n    \n    worksheet['!cols'] = [\n      { width: 15 },  // 청구서번호\n      { width: 12 },  // 건축주\n      { width: 15 },  // 프로젝트\n      { width: 35 },  // 작업장주소\n      { width: 15 },  // 청구금액\n      { width: 12 },  // 상태\n      { width: 12 },  // 발행일\n      { width: 12 },  // 납기일\n      { width: 12 },  // 작업항목수\n      { width: 25 }   // 비고\n    ];\n    \n    XLSX.writeFile(workbook, '청구서_템플릿.xlsx');\n  }\n};\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { numberToKorean } from '../utils/numberToKorean';\nimport { exportToExcel, importFromExcel, createTemplate } from '../utils/excelUtils';\n\nfunction Invoices() {\n  // eslint-disable-next-line no-unused-vars\n  const { clients, invoices, setInvoices, companyInfo, workItems, stampImage, units } = useApp();\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [showConfirmDelete, setShowConfirmDelete] = useState(false);\n\n  const [selectedClientFilter, setSelectedClientFilter] = useState('');\n  const [selectedStatusFilter, setSelectedStatusFilter] = useState('');\n  const filteredInvoices = useMemo(() => {\n    const base = (() => {\n      if (!selectedClientFilter) return invoices;\n      const cid = parseInt(selectedClientFilter);\n      const clientName = clients.find(c => c.id === cid)?.name;\n      return invoices.filter(inv => {\n        if (inv.clientId && inv.clientId === cid) return true;\n        if (clientName && inv.client === clientName) return true;\n        return false;\n      });\n    })();\n    if (!selectedStatusFilter) return base;\n    return base.filter(inv => inv.status === selectedStatusFilter);\n  }, [invoices, selectedClientFilter, selectedStatusFilter, clients]);\n\n  const allVisibleIds = filteredInvoices.map(inv => inv.id);\n  const allSelected = selectedIds.length > 0 && selectedIds.length === allVisibleIds.length;\n  const toggleSelectAll = (checked) => setSelectedIds(checked ? allVisibleIds : []);\n  const toggleSelectOne = (id, checked) => setSelectedIds(prev => checked ? Array.from(new Set([...prev, id])) : prev.filter(x => x !== id));\n  const handleBulkDelete = () => {\n    if (selectedIds.length === 0) return;\n    setInvoices(prev => prev.filter(inv => !selectedIds.includes(inv.id)));\n    setSelectedIds([]);\n    setShowConfirmDelete(false);\n  };\n\n  const handleChangeStatus = (id, next) => {\n    setInvoices(prev => prev.map(inv => inv.id === id ? { ...inv, status: next } : inv));\n  };\n\n  // 숫자에 콤마 포맷팅 함수\n  const formatNumberWithCommas = (number) => {\n    if (!number && number !== 0) return '';\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n\n  // 작업 항목 템플릿 데이터 (WorkItems.js와 동일한 데이터)\n  const [workItemTemplates] = useState([\n    {\n      id: 1,\n      name: '기초공사',\n      category: '토목공사',\n      defaultPrice: 3000000,\n      unit: '식',\n      description: '건물 기초 및 지반 작업'\n    },\n    {\n      id: 2,\n      name: '골조공사',\n      category: '구조공사',\n      defaultPrice: 4000000,\n      unit: '식',\n      description: '철골 및 철근콘크리트 골조 작업'\n    },\n    {\n      id: 3,\n      name: '벽체 철거',\n      category: '철거공사',\n      defaultPrice: 800000,\n      unit: '㎡',\n      description: '기존 벽체 철거 및 폐기물 처리'\n    },\n    {\n      id: 4,\n      name: '바닥 시공',\n      category: '마감공사',\n      defaultPrice: 1200000,\n      unit: '㎡',\n      description: '바닥재 설치 및 마감 작업'\n    },\n    {\n      id: 5,\n      name: '내부 칸막이',\n      category: '내부공사',\n      defaultPrice: 2000000,\n      unit: '㎡',\n      description: '내부 칸막이벽 설치'\n    },\n    {\n      id: 6,\n      name: '전기공사',\n      category: '설비공사',\n      defaultPrice: 1500000,\n      unit: '식',\n      description: '전기 배선 및 조명 설치'\n    },\n    {\n      id: 7,\n      name: '화장실 철거',\n      category: '철거공사',\n      defaultPrice: 500000,\n      unit: '식',\n      description: '기존 화장실 철거'\n    },\n    {\n      id: 8,\n      name: '화장실 설치',\n      category: '설비공사',\n      defaultPrice: 1000000,\n      unit: '식',\n      description: '새로운 화장실 설치 및 배관'\n    },\n    {\n      id: 9,\n      name: '도배 및 페인트',\n      category: '마감공사',\n      defaultPrice: 800000,\n      unit: '㎡',\n      description: '벽면 도배 및 페인트 작업'\n    },\n    {\n      id: 10,\n      name: '타일 시공',\n      category: '마감공사',\n      defaultPrice: 1000000,\n      unit: '㎡',\n      description: '바닥 및 벽면 타일 시공'\n    }\n  ]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [selectedInvoice, setSelectedInvoice] = useState(null);\n  const [printInvoice, setPrintInvoice] = useState(null);\n  const [newInvoice, setNewInvoice] = useState({\n    clientId: '',\n    client: '',\n    workplaceId: '',\n    project: '',\n    workplaceAddress: '',\n    workItems: [{ name: '', quantity: 1, unit: '', unitPrice: 0, total: 0, templateId: '', date: '', notes: '' }]\n  });\n\n  const componentRef = useRef();\n\n  // Excel 관련 함수들\n  const handleExportToExcel = () => {\n    exportToExcel.invoices(invoices);\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const handleExportInvoiceDetail = (invoice) => {\n    exportToExcel.invoiceDetail(invoice);\n  };\n\n  const handleImportFromExcel = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    try {\n      const importedInvoices = await importFromExcel.invoices(file);\n      setInvoices(prev => [...prev, ...importedInvoices]);\n      alert(`${importedInvoices.length}개의 청구서를 가져왔습니다.`);\n      e.target.value = ''; // Reset file input\n    } catch (error) {\n      console.error('Excel 가져오기 오류:', error);\n      alert('Excel 파일 가져오기에 실패했습니다.');\n    }\n  };\n\n  const handleDownloadTemplate = () => {\n    createTemplate.invoices();\n  };\n\n  // Auto-reset printInvoice state to prevent UI issues\n  useEffect(() => {\n    if (printInvoice) {\n      const timer = setTimeout(() => {\n        setPrintInvoice(null);\n        console.log('Auto-reset printInvoice state');\n      }, 3000); // Reset after 3 seconds\n      \n      return () => clearTimeout(timer);\n    }\n  }, [printInvoice]);\n\n  // 선택된 건축주의 작업장 목록 가져오기\n  const getClientWorkplaces = (clientId) => {\n    const client = clients.find(c => c.id === parseInt(clientId));\n    return client?.workplaces || [];\n  };\n\n  // 폼 입력 핸들러\n  const handleFormInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    setNewInvoice(prev => {\n      const updated = { ...prev, [name]: value };\n      \n      // 건축주 변경 시 관련 정보 업데이트\n      if (name === 'clientId') {\n        const selectedClient = clients.find(c => c.id === parseInt(value));\n        updated.client = selectedClient?.name || '';\n        updated.workplaceId = '';\n        updated.workplaceAddress = '';\n      }\n      \n      // 작업장 변경 시 주소 업데이트\n      if (name === 'workplaceId') {\n        const selectedClient = clients.find(c => c.id === parseInt(prev.clientId));\n        const selectedWorkplace = selectedClient?.workplaces.find(w => w.id === parseInt(value));\n        updated.workplaceAddress = selectedWorkplace?.address || '';\n        if (!updated.project && selectedWorkplace?.description) {\n          updated.project = selectedWorkplace.description;\n        }\n      }\n      \n      return updated;\n    });\n  };\n\n  const addWorkItem = () => {\n    setNewInvoice(prev => ({\n      ...prev,\n      workItems: [...prev.workItems, { name: '', quantity: 1, unit: '', unitPrice: 0, total: 0, templateId: '', date: '', notes: '' }]\n    }));\n  };\n\n  const updateWorkItem = (index, field, value) => {\n    const updatedItems = [...newInvoice.workItems];\n    \n    // 작업 항목 템플릿 선택 시 내용과 비고 설정\n    if (field === 'templateId' && value) {\n      const template = workItemTemplates.find(t => t.id === parseInt(value));\n      if (template) {\n        updatedItems[index].name = template.name;\n        updatedItems[index].templateId = parseInt(value);\n        updatedItems[index].unit = template.unit || updatedItems[index].unit || '';\n        // 단가는 자동 설정하지 않음 - 사용자가 직접 입력\n        \n        // 실제 workItems에서 해당 내용과 일치하는 항목의 notes 찾기\n        const matchingWorkItem = workItems.find(wi => wi.name === template.name);\n        if (matchingWorkItem && matchingWorkItem.notes) {\n          updatedItems[index].notes = matchingWorkItem.notes;\n        }\n      }\n    } else if (field === 'name' && value === '') {\n      // 직접 입력 선택 시 템플릿 초기화\n      updatedItems[index].templateId = '';\n    } else if (field === 'quantity' || field === 'unitPrice') {\n      // 수량이나 단가 필드의 경우 숫자만 추출\n      const numbersOnly = value.toString().replace(/[^\\d]/g, '');\n      const numericValue = parseInt(numbersOnly) || 0;\n      updatedItems[index][field] = numericValue;\n    } else {\n      updatedItems[index][field] = value;\n    }\n    \n    // 수량이나 단가 변경 시 합계 재계산\n    if (field === 'quantity' || field === 'unitPrice') {\n      updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].unitPrice;\n    }\n    \n    setNewInvoice(prev => ({\n      ...prev,\n      workItems: updatedItems\n    }));\n  };\n\n  const getTotalAmount = (workItems) => {\n    return workItems.reduce((sum, item) => sum + item.total, 0);\n  };\n\n  const handleCreateInvoice = (e) => {\n    e.preventDefault();\n    const totalAmount = getTotalAmount(newInvoice.workItems);\n    const newInv = {\n      ...newInvoice,\n      id: `INV-2024-${String(invoices.length + 1).padStart(3, '0')}`,\n      amount: totalAmount,\n      status: '발송대기',\n      date: new Date().toISOString().split('T')[0],\n      dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    };\n    \n    setInvoices(prev => [...prev, newInv]);\n    setNewInvoice({\n      clientId: '',\n      client: '',\n      workplaceId: '',\n      project: '',\n      workplaceAddress: '',\n      workItems: [{ name: '', quantity: 1, unit: '', unitPrice: 0, total: 0, templateId: '', notes: '' }]\n    });\n    setShowModal(false);\n  };\n\n  const viewInvoiceDetails = (invoice) => {\n    setSelectedInvoice(invoice);\n  };\n\n  const handleDeleteInvoice = (invoiceId) => {\n    if (window.confirm('Are you sure you want to delete this invoice?')) {\n      setInvoices(prev => prev.filter(invoice => invoice.id !== invoiceId));\n    }\n  };\n\n  const generatePDF = (invoice) => {\n    console.log('청구서 PDF 새 탭에서 열기 시작:', invoice.id);\n    \n    try {\n      // Create new window first\n      const printWindow = window.open('', '_blank', 'width=1200,height=900,scrollbars=yes,resizable=yes');\n      \n      // Check if window opened successfully\n      if (!printWindow) {\n        console.error('팝업이 차단되었습니다');\n        alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n        return;\n      }\n\n      // Resolve client details (supports legacy invoices without clientId)\n      const resolvedClient = (() => {\n        const byId = clients.find(c => String(c.id) === String(invoice.clientId || ''));\n        if (byId) return byId;\n        return clients.find(c => c.name === invoice.client) || null;\n      })();\n\n      const clientInfoHTML = (() => {\n        if (!resolvedClient) {\n          return `\n            <p><strong>건축주명:</strong> ${invoice.client}</p>\n            <p><strong>프로젝트명:</strong> ${invoice.project}</p>\n            <p><strong>작업장 주소:</strong> ${invoice.workplaceAddress}</p>\n          `;\n        }\n        if (resolvedClient.type === 'BUSINESS') {\n          const b = resolvedClient.business || {};\n          return `\n            <p><strong>상호:</strong> ${b.businessName || resolvedClient.name || '-'}</p>\n            <p><strong>대표자:</strong> ${b.representative || '-'}</p>\n            <p><strong>사업자등록번호:</strong> ${b.businessNumber || '-'}</p>\n            <p><strong>발행 이메일:</strong> ${b.taxEmail || resolvedClient.email || '-'}</p>\n            <p><strong>사업장 주소:</strong> ${b.businessAddress || resolvedClient.address || '-'}</p>\n            <p><strong>프로젝트명:</strong> ${invoice.project}</p>\n            <p><strong>작업장 주소:</strong> ${invoice.workplaceAddress}</p>\n          `;\n        }\n        // PERSON\n        return `\n          <p><strong>성명:</strong> ${resolvedClient.name}</p>\n          ${resolvedClient.phone ? `<p><strong>연락처:</strong> ${resolvedClient.phone}</p>` : ''}\n          ${resolvedClient.email ? `<p><strong>이메일:</strong> ${resolvedClient.email}</p>` : ''}\n          <p><strong>주소:</strong> ${resolvedClient.address || '-'}</p>\n          <p><strong>프로젝트명:</strong> ${invoice.project}</p>\n          <p><strong>작업장 주소:</strong> ${invoice.workplaceAddress}</p>\n        `;\n      })();\n\n      // Labor total (general + skilled)\n      const laborTotal = (invoice.workItems || []).reduce((sum, item) => {\n        const gen = (Number(item.laborPersonsGeneral) || 0) * (Number(item.laborUnitRateGeneral) || 0);\n        const sk = (Number(item.laborPersons) || 0) * (Number(item.laborUnitRate) || 0);\n        return sum + gen + sk;\n      }, 0);\n\n      // Create comprehensive HTML content directly\n      const htmlContent = `\n        <!DOCTYPE html>\n        <html lang=\"ko\">\n          <head>\n            <title>청구서 ${invoice.id} - 건설업 청구서 관리 시스템</title>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <style>\n              @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&display=swap');\n              \n              * {\n                box-sizing: border-box;\n                margin: 0;\n                padding: 0;\n              }\n              \n              body { \n                font-family: 'Noto Sans KR', sans-serif; \n                margin: 0; \n                padding: 0;\n                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                min-height: 100vh;\n                color: #374151;\n                line-height: 1.5;\n              }\n              \n              .container {\n                max-width: 1000px;\n                margin: 20px auto;\n                background-color: #ffffff;\n                border-radius: 16px;\n                box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n                overflow: hidden;\n              }\n              \n              .header {\n                background: linear-gradient(135deg, #1e40af 0%, #3730a3 100%);\n                color: white;\n                padding: 30px;\n                text-align: center;\n              }\n              \n              .header h1 {\n                font-size: 36px;\n                font-weight: 700;\n                margin-bottom: 10px;\n                letter-spacing: 8px;\n              }\n              \n              .invoice-meta {\n                display: flex;\n                justify-content: space-between;\n                margin-top: 20px;\n                font-size: 14px;\n              }\n              \n              .content {\n                padding: 40px;\n              }\n              \n              .section {\n                margin-bottom: 40px;\n              }\n              \n              .section-title {\n                font-size: 18px;\n                font-weight: 700;\n                color: #1f2937;\n                border-left: 4px solid #3b82f6;\n                padding-left: 12px;\n                margin-bottom: 20px;\n              }\n              \n              .grid {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                gap: 30px;\n                margin-bottom: 30px;\n              }\n              \n              .info-box {\n                background-color: #f8fafc;\n                padding: 20px;\n                border-radius: 12px;\n                border: 1px solid #e2e8f0;\n              }\n              \n              .info-box h4 {\n                font-size: 16px;\n                font-weight: 600;\n                color: #1e40af;\n                margin-bottom: 15px;\n              }\n              \n              .info-box p {\n                margin: 8px 0;\n                font-size: 14px;\n              }\n              \n              .amount-highlight {\n                background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);\n                padding: 20px;\n                border-radius: 12px;\n                border-left: 4px solid #3b82f6;\n                text-align: left;\n                margin: 30px 0;\n              }\n              \n              .amount-highlight p {\n                margin: 0;\n                font-size: 20px;\n                font-weight: 700;\n                color: #1e3a8a;\n              }\n              \n              .work-table {\n                width: 100%;\n                border-collapse: collapse;\n                background-color: white;\n                border-radius: 12px;\n                overflow: hidden;\n                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n              }\n              \n              .work-table th {\n                background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n                padding: 15px 12px;\n                text-align: center;\n                font-weight: 700;\n                font-size: 13px;\n                color: #1f2937;\n                border-bottom: 2px solid #e2e8f0;\n              }\n              \n              .work-table td {\n                padding: 12px;\n                border-bottom: 1px solid #f1f5f9;\n                font-size: 13px;\n                vertical-align: top;\n              }\n              \n              .work-table tr:hover {\n                background-color: #f8fafc;\n              }\n              \n              .work-table tfoot {\n                background: linear-gradient(135deg, #f0f0f0 0%, #e5e5e5 100%);\n                font-weight: 700;\n              }\n              \n              .work-table tfoot td {\n                padding: 15px 12px;\n                border-top: 2px solid #cbd5e1;\n                font-size: 14px;\n              }\n              \n              .signature-section {\n                margin-top: 40px;\n                text-align: right;\n              }\n              \n              .signature-box {\n                display: inline-block;\n                background-color: #f8fafc;\n                border: 1px solid #e2e8f0;\n                border-radius: 12px;\n                padding: 20px;\n                margin-top: 20px;\n              }\n              \n              .signature-company {\n                font-size: 16px;\n                font-weight: 700;\n                margin-bottom: 15px;\n              }\n              \n              .signature-representative {\n                display: flex;\n                align-items: center;\n                justify-content: flex-end;\n                gap: 8px;\n              }\n              \n              .signature-representative span {\n                font-size: 16px;\n                font-weight: 700;\n              }\n              \n              .stamp-container {\n                position: relative;\n                display: inline-block;\n              }\n              \n              .stamp-container img {\n                width: 60px;\n                height: 60px;\n                object-fit: contain;\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n              }\n              \n              .footer-message {\n                text-align: center;\n                margin-top: 40px;\n                padding-top: 20px;\n                border-top: 1px solid #e2e8f0;\n                font-size: 12px;\n                color: #6b7280;\n              }\n              \n              .controls {\n                position: fixed;\n                top: 20px;\n                right: 20px;\n                z-index: 1000;\n                display: flex;\n                gap: 10px;\n              }\n              \n              .btn {\n                padding: 12px 20px;\n                border: none;\n                border-radius: 8px;\n                cursor: pointer;\n                font-weight: 600;\n                font-size: 14px;\n                transition: all 0.3s ease;\n                display: flex;\n                align-items: center;\n                gap: 8px;\n              }\n              \n              .btn-print {\n                background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n                color: white;\n              }\n              \n              .btn-print:hover {\n                transform: translateY(-2px);\n                box-shadow: 0 8px 15px rgba(16, 185, 129, 0.4);\n              }\n              \n              .btn-close {\n                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n                color: white;\n              }\n              \n              .btn-close:hover {\n                transform: translateY(-2px);\n                box-shadow: 0 8px 15px rgba(239, 68, 68, 0.4);\n              }\n              \n              .loading {\n                display: none;\n                text-align: center;\n                padding: 20px;\n                font-style: italic;\n                color: #6b7280;\n              }\n              \n              @media print {\n                body {\n                  background: white !important;\n                }\n                .container {\n                  box-shadow: none !important;\n                  border-radius: 0 !important;\n                  margin: 0 !important;\n                }\n                .controls, .no-print {\n                  display: none !important;\n                }\n                .header {\n                  background: #1e40af !important;\n                  -webkit-print-color-adjust: exact !important;\n                  print-color-adjust: exact !important;\n                }\n              }\n              \n              @media (max-width: 768px) {\n                .container {\n                  margin: 10px;\n                  border-radius: 12px;\n                }\n                .content {\n                  padding: 20px;\n                }\n                .grid {\n                  grid-template-columns: 1fr;\n                  gap: 20px;\n                }\n                .controls {\n                  position: static;\n                  justify-content: center;\n                  margin: 20px;\n                }\n              }\n            </style>\n          </head>\n          <body>\n            <div class=\"controls no-print\">\n              <button class=\"btn btn-print\" onclick=\"handlePrint()\">\n                🖨️ 인쇄하기\n              </button>\n              <button class=\"btn btn-close\" onclick=\"window.close()\">\n                ✕ 창 닫기\n              </button>\n            </div>\n            \n            <div class=\"container\">\n              <div class=\"header\">\n                <h1>청 구 서</h1>\n                <div class=\"invoice-meta\">\n                  <div>청구서 번호: <strong>${invoice.id}</strong></div>\n                  <div>작성일: <strong>${invoice.date}</strong></div>\n                </div>\n              </div>\n              \n              <div class=\"content\">\n                <div class=\"grid\">\n                  <div class=\"info-box\">\n                    <h4>🏢 발주자 정보</h4>\n                    ${clientInfoHTML}\n                  </div>\n                  \n                  <div class=\"info-box\">\n                    <h4>🏗️ 시공업체 정보</h4>\n                    <p><strong>상호:</strong> ${companyInfo.name}</p>\n                    <p><strong>사업자등록번호:</strong> ${companyInfo.businessNumber}</p>\n                    <p><strong>대표자:</strong> ${companyInfo.representative}</p>\n                    <p><strong>주소:</strong> ${companyInfo.address}</p>\n                    <p><strong>연락처:</strong> ${companyInfo.phone}</p>\n                    ${companyInfo.email ? `<p><strong>이메일:</strong> ${companyInfo.email}</p>` : ''}\n                  </div>\n                </div>\n                \n                <div class=\"amount-highlight\">\n                  <p>총 청구금액 : 금 ${numberToKorean(invoice.amount)} 원정</p>\n                </div>\n                \n                <div class=\"section\">\n                  <div class=\"info-box\">\n                    <p><strong>인부임:</strong> ${laborTotal.toLocaleString()}원</p>\n                  </div>\n                </div>\n                \n                <div class=\"section\">\n                  <h3 class=\"section-title\">📋 세부 작업 내역</h3>\n                  <table class=\"work-table\">\n                    <thead>\n                      <tr>\n                        <th style=\"width: 50px;\">연번</th>\n                        <th style=\"width: 110px;\">작업일자</th>\n                        <th>내용</th>\n                        <th style=\"width: 100px;\">규격</th>\n                        <th style=\"width: 80px;\">수량</th>\n                        <th style=\"width: 60px;\">단위</th>\n                        <th style=\"width: 120px;\">단가</th>\n                        <th style=\"width: 120px;\">공급가액</th>\n                        <th style=\"width: 120px;\">비고</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      ${invoice.workItems.map((item, index) => `\n                        <tr>\n                          <td style=\"text-align: center;\">${index + 1}</td>\n                          <td style=\"text-align: center;\">${item.date || '-'}</td>\n                          <td style=\"text-align: left;\">\n                            <strong>${item.name}</strong>\n                            ${item.description ? `<div style=\"font-size: 12px; color: #6b7280; margin-top: 4px;\">${item.description}</div>` : ''}\n                          </td>\n                          <td style=\"text-align: center;\">${item.category || '-'}</td>\n                          <td style=\"text-align: center;\">${item.quantity}</td>\n                          <td style=\"text-align: center;\">${item.unit || '-'}</td>\n                          <td style=\"text-align: right;\">${item.unitPrice.toLocaleString()}원</td>\n                          <td style=\"text-align: right;\">${item.total.toLocaleString()}원</td>\n                          <td style=\"text-align: left;\">${item.notes || '-'}</td>\n                        </tr>\n                      `).join('')}\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td colspan=\"8\" style=\"text-align: right; font-size: 16px;\">합계:</td>\n                        <td style=\"text-align: center; font-size: 16px; font-weight: 700;\">\n                          ${invoice.amount.toLocaleString()}원\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n                \n                ${companyInfo.bankAccount ? `\n                <div class=\"section\">\n                  <h3 class=\"section-title\">💳 결제 정보</h3>\n                  <div class=\"info-box\">\n                    <p><strong>계좌정보:</strong> ${companyInfo.bankAccount}</p>\n                    <p><strong>예금주:</strong> ${companyInfo.accountHolder}</p>\n                  </div>\n                </div>\n                ` : ''}\n                \n                <div class=\"signature-section\">\n                  <p style=\"margin-bottom: 20px; font-size: 16px;\">위와 같이 청구합니다.</p>\n                  \n                  <div class=\"signature-box\">\n                    <div class=\"signature-company\">\n                      ${companyInfo.name}\n                    </div>\n                    <div class=\"signature-representative\">\n                      <span>대표 : ${companyInfo.representative.split('').join(' ')}</span>\n                      <div class=\"stamp-container\">\n                        <span>(인)</span>\n                        ${stampImage ? `<img src=\"${stampImage}\" alt=\"도장\" />` : ''}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"footer-message\">\n                  <p>이 청구서에 대한 문의사항이 있으시면 연락 주시기 바랍니다.</p>\n                  <p style=\"font-weight: 700; margin-top: 8px;\">감사합니다.</p>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"loading\" id=\"loadingMessage\">\n              🖨️ 인쇄 준비 중...\n            </div>\n            \n            <script>\n              function handlePrint() {\n                const loading = document.getElementById('loadingMessage');\n                loading.style.display = 'block';\n                \n                // Hide loading after a short delay\n                setTimeout(() => {\n                  loading.style.display = 'none';\n                }, 2000);\n                \n                // Trigger print\n                window.print();\n              }\n              \n              // Keyboard shortcuts\n              document.addEventListener('keydown', function(e) {\n                // Ctrl+P or Cmd+P for print\n                if ((e.ctrlKey || e.metaKey) && e.key === 'p') {\n                  e.preventDefault();\n                  handlePrint();\n                }\n                \n                // Escape to close\n                if (e.key === 'Escape') {\n                  if (confirm('창을 닫으시겠습니까?')) {\n                    window.close();\n                  }\n                }\n              });\n              \n              // Auto-focus for better keyboard navigation\n              window.onload = function() {\n                document.body.focus();\n                console.log('청구서 PDF가 새 탭에서 성공적으로 열렸습니다.');\n                console.log('키보드 단축키: Ctrl+P (인쇄), Esc (창 닫기)');\n              };\n            </script>\n          </body>\n        </html>\n      `;\n\n      // Write content to new window\n      printWindow.document.write(htmlContent);\n      printWindow.document.close();\n      printWindow.focus();\n\n      console.log('청구서 PDF가 새 탭에서 성공적으로 열렸습니다:', invoice.id);\n\n    } catch (error) {\n      console.error('청구서 PDF 생성 중 오류 발생:', error);\n      alert('청구서 PDF 생성 중 오류가 발생했습니다: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">청구서 관리</h1>\n          <p className=\"text-gray-600\">작업 완료 후 청구서를 생성하고 관리하세요</p>\n        </div>\n        <div className=\"flex space-x-2\">\n          {selectedIds.length > 0 && (\n            <button\n              onClick={() => setShowConfirmDelete(true)}\n              className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n              title=\"선택된 청구서 일괄 삭제\"\n            >\n              🗑️ 선택 삭제({selectedIds.length})\n            </button>\n          )}\n          <button\n            onClick={handleDownloadTemplate}\n            className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            📁 템플릿 다운로드\n          </button>\n          \n          <label className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded cursor-pointer\">\n            📤 Excel 가져오기\n            <input\n              type=\"file\"\n              accept=\".xlsx,.xls\"\n              onChange={handleImportFromExcel}\n              className=\"hidden\"\n            />\n          </label>\n          \n          <button\n            onClick={handleExportToExcel}\n            className=\"bg-orange-600 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n          >\n            📥 Excel 내보내기\n          </button>\n          \n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            + 새 청구서\n          </button>\n        </div>\n      </div>\n\n      {/* 필터 */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <label className=\"text-sm font-medium text-gray-700\">건축주</label>\n          <select\n            value={selectedClientFilter}\n            onChange={(e) => setSelectedClientFilter(e.target.value)}\n            className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            style={{ fontSize: '15px' }}\n          >\n            <option value=\"\">전체 건축주</option>\n            {clients.map(c => (\n              <option key={c.id} value={c.id}>{c.name}</option>\n            ))}\n          </select>\n          <label className=\"text-sm font-medium text-gray-700 ml-4\">상태</label>\n          <select\n            value={selectedStatusFilter}\n            onChange={(e) => setSelectedStatusFilter(e.target.value)}\n            className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            style={{ fontSize: '15px' }}\n            disabled={!selectedClientFilter}\n          >\n            <option value=\"\">전체 상태</option>\n            <option value=\"발송대기\">발송대기</option>\n            <option value=\"발송됨\">발송됨</option>\n            <option value=\"미결제\">미결제</option>\n            <option value=\"결제완료\">결제완료</option>\n          </select>\n          {(selectedClientFilter || selectedStatusFilter) && (\n            <button\n              onClick={() => { setSelectedClientFilter(''); setSelectedStatusFilter(''); }}\n              className=\"text-xs text-blue-600 hover:text-blue-800\"\n            >\n              필터 초기화\n            </button>\n          )}\n          <div className=\"text-sm text-gray-500 ml-auto\">\n            {filteredInvoices.length}개 청구서\n          </div>\n        </div>\n      </div>\n\n      {/* 청구서 목록 */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <input\n                  type=\"checkbox\"\n                  className=\"rounded border-gray-300\"\n                  checked={allSelected}\n                  onChange={(e) => toggleSelectAll(e.target.checked)}\n                  title=\"전체 선택\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                청구서 번호\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                건축주\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                프로젝트\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                금액\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                발행일\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {filteredInvoices.map((invoice) => (\n              <tr key={invoice.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"rounded border-gray-300\"\n                    checked={selectedIds.includes(invoice.id)}\n                    onChange={(e) => toggleSelectOne(invoice.id, e.target.checked)}\n                    title=\"항목 선택\"\n                  />\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{invoice.client}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{invoice.project}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    {invoice.amount.toLocaleString()}원\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <select\n                    className={`px-2 py-1 text-xs font-semibold rounded-full ${\n                      invoice.status === '결제완료' ? 'bg-green-100 text-green-800' :\n                      invoice.status === '발송됨' ? 'bg-blue-100 text-blue-800' :\n                      invoice.status === '미결제' ? 'bg-orange-100 text-orange-800' :\n                      'bg-yellow-100 text-yellow-800'\n                    } focus:outline-none focus:ring-2 focus:ring-primary-500`}\n                    value={invoice.status}\n                    onChange={(e) => handleChangeStatus(invoice.id, e.target.value)}\n                    title=\"청구서 상태 변경\"\n                  >\n                    <option value=\"발송대기\">발송대기</option>\n                    <option value=\"발송됨\">발송됨</option>\n                    <option value=\"미결제\">미결제</option>\n                    <option value=\"결제완료\">결제완료</option>\n                  </select>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{invoice.date}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                  <button \n                    onClick={() => viewInvoiceDetails(invoice)}\n                    className=\"text-blue-600 hover:text-blue-900 mr-2\"\n                  >\n                    상세보기\n                  </button>\n                  <button \n                    onClick={() => generatePDF(invoice)}\n                    className=\"text-green-600 hover:text-green-900 mr-2\"\n                  >\n                    🖨️ 출력\n                  </button>\n                  <button \n                    onClick={() => handleDeleteInvoice(invoice.id)}\n                    className=\"text-red-600 hover:text-red-900\"\n                  >\n                    삭제\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* 선택 삭제 확인 모달 */}\n      {showConfirmDelete && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">선택 삭제</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">선택된 {selectedIds.length}개의 청구서를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.</p>\n            <div className=\"flex justify-end gap-2\">\n              <button className=\"btn-secondary\" onClick={() => setShowConfirmDelete(false)}>취소</button>\n              <button className=\"btn-primary bg-red-600 hover:bg-red-700\" onClick={handleBulkDelete}>삭제</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 새 청구서 모달 */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-10 mx-auto p-5 border w-4/5 max-w-4xl shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">새 청구서 생성</h3>\n              <form onSubmit={handleCreateInvoice} className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">건축주 *</label>\n                    <select\n                      name=\"clientId\"\n                      value={newInvoice.clientId}\n                      onChange={handleFormInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    >\n                      <option value=\"\">건축주를 선택하세요</option>\n                      {clients.map(client => (\n                        <option key={client.id} value={client.id}>\n                          {client.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">프로젝트명 *</label>\n                    <input\n                      type=\"text\"\n                      name=\"project\"\n                      value={newInvoice.project}\n                      onChange={handleFormInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter project name\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">작업장 *</label>\n                  <select\n                    name=\"workplaceId\"\n                    value={newInvoice.workplaceId}\n                    onChange={handleFormInputChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    disabled={!newInvoice.clientId}\n                  >\n                    <option value=\"\">\n                      {newInvoice.clientId ? '작업장을 선택하세요' : '먼저 건축주를 선택하세요'}\n                    </option>\n                    {newInvoice.clientId && getClientWorkplaces(newInvoice.clientId).map(workplace => (\n                      <option key={workplace.id} value={workplace.id}>\n                        {workplace.name} - {workplace.address}\n                      </option>\n                    ))}\n                  </select>\n                  {newInvoice.workplaceAddress && (\n                    <div className=\"mt-2 p-2 bg-gray-50 rounded text-sm text-gray-600\">\n                      <strong>작업장 주소:</strong> {newInvoice.workplaceAddress}\n                    </div>\n                  )}\n                </div>\n\n                {/* 작업 항목 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <label className=\"block text-sm font-medium text-gray-700\">작업 항목</label>\n                    <button\n                      type=\"button\"\n                      onClick={addWorkItem}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                    >\n                      + 항목 추가\n                    </button>\n                  </div>\n                  \n                  <div className=\"space-y-3\">\n                    {newInvoice.workItems.map((item, index) => (\n                      <div key={index} className=\"border border-gray-200 rounded-lg p-3 bg-gray-50\">\n                        <div className=\"grid grid-cols-3 gap-3 mb-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">작업 템플릿 선택</label>\n                            <select\n                              value={item.templateId || ''}\n                              onChange={(e) => updateWorkItem(index, 'templateId', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                            >\n                              <option value=\"\">템플릿 선택 또는 직접 입력</option>\n                              {workItemTemplates.map(template => (\n                                <option key={template.id} value={template.id}>\n                                  {template.name} ({template.category})\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">내용 (직접입력)</label>\n                            <input\n                              type=\"text\"\n                              placeholder=\"Or enter manually\"\n                              value={item.templateId ? '' : item.name}\n                              onChange={(e) => updateWorkItem(index, 'name', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                              disabled={!!item.templateId}\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">작업일자</label>\n                            <input\n                              type=\"date\"\n                              placeholder=\"YYYY-MM-DD\"\n                              value={item.date || ''}\n                              onChange={(e) => updateWorkItem(index, 'date', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-4 gap-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">수량</label>\n                            <input\n                              type=\"text\"\n                              placeholder=\"예: 1,000\"\n                              value={item.quantity ? formatNumberWithCommas(item.quantity) : ''}\n                              onChange={(e) => updateWorkItem(index, 'quantity', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">단위</label>\n                            <select\n                              value={item.unit || ''}\n                              onChange={(e) => updateWorkItem(index, 'unit', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                              required\n                            >\n                              <option value=\"\">단위 선택</option>\n                              {(units || []).map(u => (\n                                <option key={u} value={u}>{u}</option>\n                              ))}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">단가 (직접입력)</label>\n                            <input\n                              type=\"text\"\n                              placeholder=\"예: 1,000,000\"\n                              value={item.unitPrice ? formatNumberWithCommas(item.unitPrice) : ''}\n                              onChange={(e) => updateWorkItem(index, 'unitPrice', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">합계</label>\n                            <input\n                              type=\"text\"\n                              value={item.total.toLocaleString() + '원'}\n                              readOnly\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm bg-gray-100 text-gray-700 font-medium\"\n                            />\n                          </div>\n                        </div>\n                        \n                        <div className=\"mt-3\">\n                          <label className=\"block text-xs font-medium text-gray-600 mb-1\">비고</label>\n                          <textarea\n                            value={item.notes || ''}\n                            onChange={(e) => updateWorkItem(index, 'notes', e.target.value)}\n                            rows=\"2\"\n                            className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                            placeholder=\"추가 메모나 특이사항을 입력하세요\"\n                          />\n                        </div>\n                        {item.templateId && (\n                          <div className=\"mt-2 text-xs text-gray-500 bg-blue-50 p-2 rounded\">\n                            <strong>선택된 작업:</strong> {workItemTemplates.find(t => t.id === item.templateId)?.description}\n                          </div>\n                        )}\n                        {newInvoice.workItems.length > 1 && (\n                          <div className=\"mt-2 text-right\">\n                            <button\n                              type=\"button\"\n                              onClick={() => {\n                                const updatedItems = newInvoice.workItems.filter((_, i) => i !== index);\n                                setNewInvoice(prev => ({ ...prev, workItems: updatedItems }));\n                              }}\n                              className=\"text-red-600 hover:text-red-800 text-xs\"\n                            >\n                              항목 삭제\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"text-right mt-2\">\n                    <span className=\"text-lg font-bold\">\n                      총합: {getTotalAmount(newInvoice.workItems).toLocaleString()}원\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-end space-x-2 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                    className=\"px-4 py-2 text-gray-500 hover:text-gray-700\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded\"\n                  >\n                    청구서 생성\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 청구서 상세보기 모달 */}\n      {selectedInvoice && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-10 mx-auto p-5 border w-4/5 max-w-3xl shadow-lg rounded-md bg-white\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">청구서 상세 - {selectedInvoice.id}</h3>\n              <button\n                onClick={() => setSelectedInvoice(null)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"border rounded-lg p-6 bg-gray-50\">\n              <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                <div>\n                  <p><strong>건축주:</strong> {selectedInvoice.client}</p>\n                  <p><strong>프로젝트:</strong> {selectedInvoice.project}</p>\n                  <p><strong>작업장 주소:</strong> {selectedInvoice.workplaceAddress}</p>\n                </div>\n                <div>\n                  <p><strong>발행일:</strong> {selectedInvoice.date}</p>\n                  <p><strong>지불 기한:</strong> {selectedInvoice.dueDate}</p>\n                </div>\n              </div>\n              \n              <div className=\"mb-4\">\n                <h4 className=\"font-medium mb-2\">작업 내역</h4>\n                <table className=\"w-full border\">\n                  <thead className=\"bg-white\">\n                    <tr>\n                      <th className=\"border px-3 py-2 text-left\">내용</th>\n                      <th className=\"border px-3 py-2 text-center\">수량</th>\n                      <th className=\"border px-3 py-2 text-center\">단위</th>\n                      <th className=\"border px-3 py-2 text-right\">단가</th>\n                      <th className=\"border px-3 py-2 text-right\">합계</th>\n                      <th className=\"border px-3 py-2 text-left\">비고</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {selectedInvoice.workItems.map((item, index) => (\n                      <tr key={index}>\n                        <td className=\"border px-3 py-2\">\n                          <div>\n                            <div className=\"flex items-center justify-between mb-1\">\n                              <span className=\"font-medium text-gray-900\">\n                                {item.name}\n                              </span>\n                              {item.category && (\n                                <span className=\"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded-full ml-2\">\n                                  {item.category}\n                                </span>\n                              )}\n                            </div>\n                            {item.description && (\n                              <div className=\"text-sm text-gray-600 leading-relaxed\">\n                                {item.description.split('\\n')[0]}\n                              </div>\n                            )}\n                          </div>\n                        </td>\n                        <td className=\"border px-3 py-2 text-center\">{item.quantity}</td>\n                        <td className=\"border px-3 py-2 text-center\">{item.unit || '-'}</td>\n                        <td className=\"border px-3 py-2 text-right\">{item.unitPrice.toLocaleString()}원</td>\n                        <td className=\"border px-3 py-2 text-right font-medium\">{item.total.toLocaleString()}원</td>\n                        <td className=\"border px-3 py-2 text-left text-sm align-top\">\n                          {item.notes || '-'}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                  <tfoot>\n                    {(() => {\n                      const laborTotal = (selectedInvoice.workItems || []).reduce((sum, item) => {\n                        const gen = (Number(item.laborPersonsGeneral) || 0) * (Number(item.laborUnitRateGeneral) || 0);\n                        const sk = (Number(item.laborPersons) || 0) * (Number(item.laborUnitRate) || 0);\n                        return sum + gen + sk;\n                      }, 0);\n                      \n                      if (laborTotal > 0) {\n                        return (\n                          <tr className=\"bg-blue-50\">\n                            <td colSpan=\"5\" className=\"border px-3 py-2 text-right font-medium text-blue-800\">인부임 소계:</td>\n                            <td className=\"border px-3 py-2 text-right font-medium text-blue-800\">\n                              {laborTotal.toLocaleString()}원\n                            </td>\n                          </tr>\n                        );\n                      }\n                      return null;\n                    })()}\n                    <tr className=\"bg-gray-100\">\n                      <td colSpan=\"5\" className=\"border px-3 py-2 text-right font-bold\">총 금액:</td>\n                      <td className=\"border px-3 py-2 text-right font-bold text-lg\">\n                        {selectedInvoice.amount.toLocaleString()}원\n                      </td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* PDF 인쇄용 숨겨진 컴포넌트 */}\n      <div style={{ display: 'none' }}>\n        <div ref={componentRef} style={{ padding: '40px', fontFamily: \"'Noto Sans KR', sans-serif\", fontSize: '12px', lineHeight: '1.4', maxWidth: '800px', margin: 'auto', backgroundColor: '#ffffff', color: '#374151' }}>\n          {printInvoice && (\n            <>\n              {/* 청구서 번호 및 제목 */}\n              <div style={{ marginBottom: '24px', backgroundColor: '#f3f4f6', padding: '12px', borderRadius: '8px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\n                  <div style={{ fontSize: '14px', color: '#374151' }}>\n                    <strong>청구서 번호:</strong> {printInvoice.id}\n                  </div>\n                  <div style={{ fontSize: '14px', color: '#374151' }}>\n                    <strong>작성일:</strong> {printInvoice.date}\n                  </div>\n                </div>\n                <div style={{ textAlign: 'center', borderBottom: '2px solid #9ca3af', paddingBottom: '8px' }}>\n                  <h1 style={{ fontSize: '36px', margin: '0', fontWeight: 'bold', color: '#1f2937', letterSpacing: '8px' }}>청   구   서</h1>\n                </div>\n              </div>\n\n              {/* 수신자 및 발신자 정보 */}\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '24px', marginBottom: '24px' }}>\n                {/* 건축주 정보 (왼쪽) */}\n                <div>\n                  <h3 style={{ margin: '0 0 15px 0', fontSize: '18px', fontWeight: 'bold', color: '#1f2937', borderLeft: '4px solid #4f46e5', paddingLeft: '12px' }}>\n                    발주자 정보\n                  </h3>\n                  <div style={{ backgroundColor: '#f3f4f6', padding: '12px', borderRadius: '8px' }}>\n                    {(() => {\n                      const c = clients.find(c => String(c.id) === String(printInvoice.clientId || '')) || clients.find(c => c.name === printInvoice.client);\n                      if (!c) {\n                        return (\n                          <>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>건축주명:</strong> {printInvoice.client}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>프로젝트명:</strong> {printInvoice.project}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>작업장 주소:</strong> {printInvoice.workplaceAddress}</p>\n                          </>\n                        );\n                      }\n                      if (c.type === 'BUSINESS') {\n                        const b = c.business || {};\n                        return (\n                          <>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>상호:</strong> {b.businessName || c.name || '-'}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>대표자:</strong> {b.representative || '-'}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>사업자등록번호:</strong> {b.businessNumber || '-'}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>발행 이메일:</strong> {b.taxEmail || c.email || '-'}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>사업장 주소:</strong> {b.businessAddress || c.address || '-'}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>프로젝트명:</strong> {printInvoice.project}</p>\n                            <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>작업장 주소:</strong> {printInvoice.workplaceAddress}</p>\n                          </>\n                        );\n                      }\n                      return (\n                        <>\n                          <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>성명:</strong> {c.name}</p>\n                          {c.phone && <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>연락처:</strong> {c.phone}</p>}\n                          {c.email && <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>이메일:</strong> {c.email}</p>}\n                          <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>주소:</strong> {c.address || '-'}</p>\n                          <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>프로젝트명:</strong> {printInvoice.project}</p>\n                          <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>작업장 주소:</strong> {printInvoice.workplaceAddress}</p>\n                        </>\n                      );\n                    })()}\n                  </div>\n                </div>\n                \n                {/* 업체 정보 (오른쪽) */}\n                <div>\n                  <h3 style={{ margin: '0 0 15px 0', fontSize: '18px', fontWeight: 'bold', color: '#1f2937', borderLeft: '4px solid #4f46e5', paddingLeft: '12px' }}>\n                    시공업체 정보\n                  </h3>\n                  <div style={{ backgroundColor: '#f3f4f6', padding: '12px', borderRadius: '8px' }}>\n                    <p style={{ margin: '8px 0', fontSize: '12px' }}><strong>상호:</strong> {companyInfo.name}</p>\n                    <p style={{ margin: '8px 0', fontSize: '12px' }}><strong>사업자등록번호:</strong> {companyInfo.businessNumber}</p>\n                    <p style={{ margin: '8px 0', fontSize: '12px' }}><strong>대표자:</strong> {companyInfo.representative}</p>\n                    <p style={{ margin: '8px 0', fontSize: '12px' }}><strong>주소:</strong> {companyInfo.address}</p>\n                    <p style={{ margin: '8px 0', fontSize: '12px' }}><strong>연락처:</strong> {companyInfo.phone}</p>\n                    {companyInfo.email && <p style={{ margin: '8px 0', fontSize: '12px' }}><strong>이메일:</strong> {companyInfo.email}</p>}\n                  </div>\n                </div>\n              </div>\n\n\n              {/* 총 청구 금액 */}\n              <div style={{ marginBottom: '30px', padding: '15px', backgroundColor: '#dbeafe', borderRadius: '8px', borderLeft: '4px solid #3b82f6', textAlign: 'left' }}>\n                <p style={{ margin: '0', fontSize: '18px', fontWeight: 'bold', color: '#1e3a8a' }}>\n                  총 청구금액 : 금 {numberToKorean(printInvoice.amount)} 원정\n                </p>\n              </div>\n\n              {/* 세부 작업 내역 */}\n              <div style={{ marginBottom: '40px' }}>\n                <h3 style={{ margin: '0 0 20px 0', fontSize: '18px', fontWeight: 'bold', color: '#1f2937', borderLeft: '4px solid #4f46e5', paddingLeft: '12px' }}>\n                  세부 작업 내역\n                </h3>\n                <div style={{ overflowX: 'auto' }}>\n                  <table style={{ width: '100%', minWidth: '600px', borderCollapse: 'collapse', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)' }}>\n                    <thead>\n                      <tr style={{ backgroundColor: '#f9fafb' }}>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', width: '40px', fontSize: '14px' }}>연번</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', width: '110px', fontSize: '14px' }}>작업일자</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          내용\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          규격\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          수량\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          단위\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          단가\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          공급가액\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontWeight: 'bold', color: '#1f2937', fontSize: '14px' }}>\n                          비고\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {printInvoice.workItems.map((item, index) => (\n                        <tr key={index} style={{ ':hover': { backgroundColor: '#f1f5f9' } }}>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '14px' }}>{index + 1}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '14px' }}>{item.date || '-'}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'left', fontSize: '15px' }}>\n                            <div>\n                              <strong>{item.name}</strong>\n                              {item.description && (\n                                <div style={{ fontSize: '14px', color: '#6b7280', marginTop: '4px' }}>\n                                  {item.description}\n                                </div>\n                              )}\n                            </div>\n                          </td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '14px' }}>{item.category || '-'}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '14px' }}>{item.quantity}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '14px' }}>{item.unit || '-'}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'right', fontSize: '14px' }}>{item.unitPrice.toLocaleString()}원</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'right', fontSize: '14px' }}>{item.total.toLocaleString()}원</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'left', fontSize: '14px', verticalAlign: 'top' }}>\n                            {item.notes || '-'}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot>\n                      {(() => {\n                        const laborTotal = (printInvoice.workItems || []).reduce((sum, item) => {\n                          const gen = (Number(item.laborPersonsGeneral) || 0) * (Number(item.laborUnitRateGeneral) || 0);\n                          const sk = (Number(item.laborPersons) || 0) * (Number(item.laborUnitRate) || 0);\n                          return sum + gen + sk;\n                        }, 0);\n                        \n                        if (laborTotal > 0) {\n                          return (\n                            <tr style={{ backgroundColor: '#dbeafe', color: '#1e3a8a' }}>\n                              <td colSpan=\"8\" style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'right', fontSize: '16px', fontWeight: '600' }}>\n                                인부임 소계:\n                              </td>\n                              <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '16px', fontWeight: '600' }}>\n                                {laborTotal.toLocaleString()}원\n                              </td>\n                            </tr>\n                          );\n                        }\n                        return null;\n                      })()}\n                      <tr style={{ backgroundColor: '#f0f0f0', fontWeight: 'bold', color: '#1f2937' }}>\n                        <td colSpan=\"8\" style={{ padding: '15px 16px', border: '1px solid #e5e7eb', textAlign: 'right', fontSize: '17px' }}>\n                          합계:\n                        </td>\n                        <td style={{ padding: '15px 16px', border: '1px solid #e5e7eb', textAlign: 'center', fontSize: '17px', fontWeight: 'bold' }}>\n                          {printInvoice.amount.toLocaleString()}원\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </div>\n\n              {/* 결제 정보 */}\n              <div style={{ marginTop: '20px', marginBottom: '20px' }}>\n                <h3 style={{ margin: '0 0 10px 0', fontSize: '18px', fontWeight: 'bold', color: '#1f2937', borderLeft: '4px solid #4f46e5', paddingLeft: '12px' }}>\n                  결제 정보\n                </h3>\n                <div style={{ backgroundColor: '#f9fafb', padding: '12px', borderRadius: '8px' }}>\n                  {companyInfo.bankAccount && (\n                    <>\n                      <p style={{ margin: '5px 0', fontSize: '14px' }}><strong>계좌정보:</strong></p>\n                      <p style={{ margin: '3px 0', fontSize: '14px' }}>{companyInfo.bankAccount}</p>\n                      <p style={{ margin: '3px 0', fontSize: '14px' }}>예금주: {companyInfo.accountHolder}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              {/* 서명 영역 */}\n              <div style={{ textAlign: 'right', marginBottom: '20px' }}>\n                <p style={{ margin: '0 0 15px 0', fontSize: '16px', lineHeight: '1.6' }}>위와 같이 청구합니다.</p>\n                <div style={{ marginTop: '20px', textAlign: 'right', border: '1px solid #e5e7eb', padding: '15px', borderRadius: '8px', backgroundColor: '#f9fafb' }}>\n                  <div style={{ textAlign: 'right', marginBottom: '10px' }}>\n                    <p style={{ margin: '0', fontSize: '16px', fontWeight: 'bold' }}>\n                      {companyInfo.name}\n                    </p>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end', gap: '8px' }}>\n                    <span style={{ fontSize: '16px', fontWeight: 'bold' }}>대표 : {companyInfo.representative.split('').join(' ')}</span>\n                    <div style={{ position: 'relative', display: 'inline-block' }}>\n                      <span style={{ fontSize: '16px', fontWeight: 'bold' }}>(인)</span>\n                      {stampImage && (\n                        <img \n                          src={stampImage} \n                          alt=\"도장\" \n                          style={{ \n                            width: '60px', \n                            height: '60px', \n                            objectFit: 'contain',\n                            border: 'none',\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)'\n                          }} \n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 페이지 하단 - 문의사항 및 감사 인사 */}\n              <div style={{ position: 'relative', marginTop: '30px', paddingTop: '15px', borderTop: '1px solid #e5e7eb' }}>\n                <div style={{ textAlign: 'center', fontSize: '12px', color: '#6b7280', marginBottom: '8px' }}>\n                  <p style={{ margin: '0 0 5px 0', lineHeight: '1.5' }}>이 청구서에 대한 문의사항이 있으시면 연락 주시기 바랍니다.</p>\n                  <p style={{ margin: '0', fontWeight: 'bold', fontSize: '13px' }}>감사합니다.</p>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Invoices;\n","import React, { useState, useRef, useMemo } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { exportToExcel, importFromExcel, createTemplate } from '../utils/excelUtils';\n\n// 한국 전화번호 자동 하이픈 포매터\nfunction formatPhoneKR(input) {\n  const digits = String(input || '').replace(/\\D/g, '');\n  if (digits.startsWith('02')) {\n    if (digits.length <= 2) return digits;\n    if (digits.length <= 5) return `${digits.slice(0, 2)}-${digits.slice(2)}`;\n    if (digits.length <= 9) return `${digits.slice(0, 2)}-${digits.slice(2, digits.length - 4)}-${digits.slice(digits.length - 4)}`;\n    return `${digits.slice(0, 2)}-${digits.slice(2, 6)}-${digits.slice(6, 10)}`; // 02-xxxx-xxxx\n  }\n  // 모바일(010 등) 및 기타 지역번호(3자리)\n  if (digits.length <= 3) return digits;\n  if (digits.length <= 7) return `${digits.slice(0, 3)}-${digits.slice(3)}`;\n  if (digits.length <= 11) return `${digits.slice(0, 3)}-${digits.slice(3, digits.length - 4)}-${digits.slice(digits.length - 4)}`;\n  return `${digits.slice(0, 3)}-${digits.slice(3, 7)}-${digits.slice(7, 11)}`; // 최대 11자리\n}\n\nfunction Clients() {\n  const { clients, setClients, invoices, workItems } = useApp();\n  const [selectedIds, setSelectedIds] = useState([]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingClientId, setEditingClientId] = useState(null);\n  const [newClient, setNewClient] = useState({\n    type: 'PERSON', // 'PERSON' | 'BUSINESS'\n    name: '',\n    phone: '',\n    mobile: '',\n    email: '',\n    address: '',\n    notes: '',\n    business: {\n      businessName: '', // 상호\n      representative: '', // 대표자\n      businessNumber: '', // 10자리\n      businessType: '', // 업태\n      businessItem: '', // 업종\n      businessAddress: '',\n      taxEmail: ''\n    },\n    workplaces: [{ name: '', address: '', description: '' }]\n  });\n\n  const fileInputRef = useRef(null);\n  const [showConfirmDelete, setShowConfirmDelete] = useState(false);\n\n  // 일괄 선택/삭제 상태 및 핸들러\n  const allVisibleIds = clients.map(c => c.id);\n  const allSelected = selectedIds.length > 0 && selectedIds.length === allVisibleIds.length;\n  const toggleSelectAll = (checked) => setSelectedIds(checked ? allVisibleIds : []);\n  const toggleSelectOne = (id, checked) => setSelectedIds(prev => checked ? Array.from(new Set([...prev, id])) : prev.filter(x => x !== id));\n  const handleBulkDelete = () => {\n    if (selectedIds.length === 0) return;\n    setClients(prev => prev.filter(c => !selectedIds.includes(c.id)));\n    setSelectedIds([]);\n    setShowConfirmDelete(false);\n  };\n\n  // Excel 관련 함수들\n  const handleExportToExcel = () => {\n    exportToExcel.clients(clients);\n  };\n\n  const handleImportFromExcel = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const importedClients = await importFromExcel.clients(file);\n        setClients(prev => [...prev, ...importedClients]);\n        alert(`${importedClients.length}개의 건축주 정보를 가져왔습니다.`);\n      } catch (error) {\n        alert('Excel 파일을 가져오는 중 오류가 발생했습니다: ' + error.message);\n      }\n      // 파일 입력 초기화\n      e.target.value = '';\n    }\n  };\n\n  const handleDownloadTemplate = () => {\n    createTemplate.clients();\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    const next = (name === 'phone' || name === 'mobile') ? formatPhoneKR(value) : value;\n    setNewClient(prev => ({\n      ...prev,\n      [name]: next\n    }));\n  };\n\n  const formatBizNo = (val) => {\n    const d = String(val || '').replace(/\\D/g, '').slice(0, 10);\n    if (d.length <= 3) return d;\n    if (d.length <= 5) return `${d.slice(0,3)}-${d.slice(3)}`;\n    return `${d.slice(0,3)}-${d.slice(3,5)}-${d.slice(5)}`;\n  };\n\n  const handleBusinessChange = (e) => {\n    const { name, value } = e.target;\n    const v = name === 'businessNumber' ? formatBizNo(value) : value;\n    setNewClient(prev => ({\n      ...prev,\n      business: {\n        ...prev.business,\n        [name]: v\n      }\n    }));\n  };\n\n  const handleWorkplaceChange = (index, field, value) => {\n    const updatedWorkplaces = [...newClient.workplaces];\n    updatedWorkplaces[index][field] = value;\n    setNewClient(prev => ({\n      ...prev,\n      workplaces: updatedWorkplaces\n    }));\n  };\n\n  const addWorkplace = () => {\n    setNewClient(prev => ({\n      ...prev,\n      workplaces: [...prev.workplaces, { name: '', address: '', description: '' }]\n    }));\n  };\n\n  const removeWorkplace = (index) => {\n    if (newClient.workplaces.length > 1) {\n      const updatedWorkplaces = newClient.workplaces.filter((_, i) => i !== index);\n      setNewClient(prev => ({\n        ...prev,\n        workplaces: updatedWorkplaces\n      }));\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const payload = { ...newClient };\n    if (payload.type === 'BUSINESS') {\n      // 기본 표시 이름 보정: 상호를 이름으로 사용\n      if (!payload.name && payload.business?.businessName) {\n        payload.name = payload.business.businessName;\n      }\n      // 간단한 사업자번호 길이 검증(선택): 10자리 숫자\n      const digits = String(payload.business?.businessNumber || '').replace(/\\D/g, '');\n      if (digits.length > 0 && digits.length !== 10) {\n        alert('사업자등록번호는 숫자 10자리여야 합니다.');\n        return;\n      }\n    }\n    \n    if (isEditing) {\n      // 편집 모드\n      const updatedClient = {\n        ...payload,\n        id: editingClientId,\n        workplaces: newClient.workplaces.map((wp, index) => ({\n          ...wp,\n          id: wp.id || index + 1\n        })),\n        projects: Array.from(new Set((newClient.workplaces || [])\n          .map(wp => (wp.description || '').trim())\n          .filter(Boolean)))\n      };\n      setClients(prev => prev.map(client => \n        client.id === editingClientId \n          ? { ...client, ...updatedClient, totalBilled: client.totalBilled, outstanding: client.outstanding }\n          : client\n      ));\n    } else {\n      // 새로 추가 모드\n      const client = {\n        ...payload,\n        id: clients.length + 1,\n        workplaces: newClient.workplaces.map((wp, index) => ({\n          ...wp,\n          id: index + 1\n        })),\n        projects: Array.from(new Set((newClient.workplaces || [])\n          .map(wp => (wp.description || '').trim())\n          .filter(Boolean))),\n        totalBilled: 0,\n        outstanding: 0\n      };\n      setClients(prev => [...prev, client]);\n    }\n    \n    // 상태 초기화\n    setNewClient({\n      type: 'PERSON',\n      name: '',\n      phone: '',\n      mobile: '',\n      email: '',\n      address: '',\n      notes: '',\n      business: {\n        businessName: '',\n        representative: '',\n        businessNumber: '',\n        businessType: '',\n        businessItem: '',\n        businessAddress: '',\n        taxEmail: ''\n      },\n      workplaces: [{ name: '', address: '', description: '' }]\n    });\n    setShowModal(false);\n    setIsEditing(false);\n    setEditingClientId(null);\n  };\n\n  const viewClientDetails = (client) => {\n    setSelectedClient(client);\n  };\n\n  const handleEditClient = (client) => {\n    setIsEditing(true);\n    setEditingClientId(client.id);\n    setNewClient({\n      type: client.type || 'PERSON',\n      name: client.name,\n      phone: client.phone,\n      mobile: client.mobile || '',\n      email: client.email,\n      address: client.address,\n      notes: client.notes,\n      business: client.business || {\n        businessName: '',\n        representative: '',\n        businessNumber: '',\n        businessType: '',\n        businessItem: '',\n        businessAddress: '',\n        taxEmail: ''\n      },\n      workplaces: client.workplaces || [{ name: '', address: '', description: '' }]\n    });\n    setShowModal(true);\n  };\n\n  // 계산: 청구액/미수금 (invoices 기반, clientId 우선/이름 보조)\n  const totalsByClientId = useMemo(() => {\n    const map = new Map();\n    clients.forEach(c => map.set(c.id, { total: 0, outstanding: 0 }));\n    (invoices || []).forEach(inv => {\n      const amount = Number(inv.amount) || 0;\n      let cid = inv.clientId != null && inv.clientId !== '' ? parseInt(inv.clientId) : null;\n      if (!cid) {\n        const match = clients.find(c => c.name === inv.client);\n        cid = match ? match.id : null;\n      }\n      if (!cid) return;\n      const agg = map.get(cid) || { total: 0, outstanding: 0 };\n      agg.total += amount;\n      if (inv.status !== '결제완료') agg.outstanding += amount;\n      map.set(cid, agg);\n    });\n    return map;\n  }, [clients, invoices]);\n\n  const grandTotals = useMemo(() => {\n    let total = 0;\n    let outstanding = 0;\n    (invoices || []).forEach(inv => {\n      const amount = Number(inv.amount) || 0;\n      total += amount;\n      if (inv.status !== '결제완료') outstanding += amount;\n    });\n    return { total, outstanding };\n  }, [invoices]);\n\n  // 프로젝트 수: clients.projects + workItems.projectName + invoices.project에서 고유값 집계\n  const projectCountsByClientId = useMemo(() => {\n    const sets = new Map();\n    const ensureSet = (id) => {\n      if (!sets.has(id)) sets.set(id, new Set());\n      return sets.get(id);\n    };\n\n    // 기존 client.projects 반영\n    clients.forEach(c => {\n      const s = ensureSet(c.id);\n      (c.projects || []).forEach(p => {\n        const v = (p || '').trim();\n        if (v) s.add(v);\n      });\n    });\n\n    // workItems.projectName 반영\n    (workItems || []).forEach(wi => {\n      if (!wi) return;\n      const cid = wi.clientId;\n      if (!cid) return;\n      const v = (wi.projectName || '').trim();\n      if (!v) return;\n      ensureSet(cid).add(v);\n    });\n\n    // invoices.project 반영 (clientId 우선, 없으면 이름 매칭)\n    (invoices || []).forEach(inv => {\n      const v = (inv.project || '').trim();\n      if (!v) return;\n      let cid = inv.clientId != null && inv.clientId !== '' ? parseInt(inv.clientId) : null;\n      if (!cid) {\n        const match = clients.find(c => c.name === inv.client);\n        cid = match ? match.id : null;\n      }\n      if (!cid) return;\n      ensureSet(cid).add(v);\n    });\n\n    // 크기 맵으로 변환\n    const counts = new Map();\n    for (const [id, set] of sets.entries()) counts.set(id, set.size);\n    return counts;\n  }, [clients, workItems, invoices]);\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">건축주 관리</h1>\n          <p className=\"text-gray-600\">건축주 정보를 관리하고 프로젝트 이력을 추적하세요</p>\n        </div>\n        <div className=\"flex space-x-2\">\n          {selectedIds.length > 0 && (\n            <button\n              onClick={() => setShowConfirmDelete(true)}\n              className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n              title=\"선택된 건축주 일괄 삭제\"\n            >\n              🗑️ 선택 삭제({selectedIds.length})\n            </button>\n          )}\n          <button\n            onClick={handleDownloadTemplate}\n            className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n          >\n            📁 템플릿 다운로드\n          </button>\n          <button\n            onClick={() => fileInputRef.current?.click()}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n          >\n            📤 Excel 가져오기\n          </button>\n          <button\n            onClick={handleExportToExcel}\n            className=\"bg-orange-600 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n          >\n            📥 Excel 내보내기\n          </button>\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            + 새 건축주\n          </button>\n        </div>\n      </div>\n\n      {/* 숨겨진 파일 입력 */}\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        onChange={handleImportFromExcel}\n        accept=\".xlsx,.xls\"\n        style={{ display: 'none' }}\n      />\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">총 건축주</p>\n              <p className=\"text-xl font-bold text-gray-900\">{clients.length}</p>\n            </div>\n            <div className=\"bg-blue-500 rounded-full p-3 text-white text-2xl\">\n              👥\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">총 청구금액 :</p>\n              <p className=\"text-xl font-bold text-green-600\">\n                {grandTotals.total.toLocaleString()}원\n              </p>\n            </div>\n            <div className=\"bg-green-500 rounded-full p-3 text-white text-2xl\">\n              💰\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">미수금</p>\n              <p className=\"text-xl font-bold text-red-600\">\n                {grandTotals.outstanding.toLocaleString()}원\n              </p>\n            </div>\n            <div className=\"bg-red-500 rounded-full p-3 text-white text-2xl\">\n              ⚠️\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">미수금 건수</p>\n              <p className=\"text-xl font-bold text-orange-600\">\n                {clients.filter(c => (totalsByClientId.get(c.id)?.outstanding || 0) > 0).length}\n              </p>\n            </div>\n            <div className=\"bg-orange-500 rounded-full p-3 text-white text-2xl\">\n              📋\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 건축주 목록 */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <input\n                  type=\"checkbox\"\n                  className=\"rounded border-gray-300\"\n                  checked={allSelected}\n                  onChange={(e) => toggleSelectAll(e.target.checked)}\n                  title=\"전체 선택\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                이름\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                연락처\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                주소\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                프로젝트 수\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                총 청구액\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                미수금\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {clients.map((client) => (\n              <tr key={client.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"rounded border-gray-300\"\n                    checked={selectedIds.includes(client.id)}\n                    onChange={(e) => toggleSelectOne(client.id, e.target.checked)}\n                    title=\"항목 선택\"\n                  />\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"h-10 w-10 bg-gray-300 rounded-full flex items-center justify-center\">\n                      <span className=\"text-sm font-medium text-gray-700\">\n                        {client.name.charAt(0)}\n                      </span>\n                    </div>\n                    <div className=\"ml-4\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {client.name}\n                        {client.type === 'BUSINESS' && (\n                          <span className=\"ml-2 text-xs px-2 py-0.5 rounded bg-yellow-100 text-yellow-800\">사업자</span>\n                        )}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {client.email}\n                        {client.type === 'BUSINESS' && client.business?.businessNumber && (\n                          <span className=\"ml-2\">사업자등록번호: {client.business.businessNumber}</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">\n                    {client.phone && <div>전화: {client.phone}</div>}\n                    {client.mobile && <div>휴대폰: {client.mobile}</div>}\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{client.address}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{(projectCountsByClientId.get(client.id) || 0)}개</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    {(totalsByClientId.get(client.id)?.total || 0).toLocaleString()}원\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className={`text-sm font-medium ${\n                    (totalsByClientId.get(client.id)?.outstanding || 0) > 0 ? 'text-red-600' : 'text-green-600'\n                  }`}>\n                    {(totalsByClientId.get(client.id)?.outstanding || 0).toLocaleString()}원\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                  <button \n                    onClick={() => viewClientDetails(client)}\n                    className=\"text-blue-600 hover:text-blue-900 mr-2\"\n                  >\n                    상세보기\n                  </button>\n                  <button \n                    className=\"text-green-600 hover:text-green-900 mr-2\"\n                    onClick={() => handleEditClient(client)}\n                  >\n                    편집\n                  </button>\n                  <button className=\"text-red-600 hover:text-red-900\">삭제</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* 선택 삭제 확인 모달 */}\n      {showConfirmDelete && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">선택 삭제</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">선택된 {selectedIds.length}명의 건축주를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.</p>\n            <div className=\"flex justify-end gap-2\">\n              <button className=\"btn-secondary\" onClick={() => setShowConfirmDelete(false)}>취소</button>\n              <button className=\"btn-primary bg-red-600 hover:bg-red-700\" onClick={handleBulkDelete}>삭제</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 새 건축주 모달 */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-10 mx-auto p-5 border w-4/5 max-w-2xl shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {isEditing ? '건축주 정보 수정' : '새 건축주 추가'}\n              </h3>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                {/* 유형 선택 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">유형</label>\n                  <div className=\"flex items-center gap-6\">\n                    <label className=\"inline-flex items-center gap-2 text-sm\">\n                      <input\n                        type=\"radio\"\n                        name=\"type\"\n                        value=\"PERSON\"\n                        checked={newClient.type === 'PERSON'}\n                        onChange={() => setNewClient(prev => ({ ...prev, type: 'PERSON' }))}\n                      />\n                      개인\n                    </label>\n                    <label className=\"inline-flex items-center gap-2 text-sm\">\n                      <input\n                        type=\"radio\"\n                        name=\"type\"\n                        value=\"BUSINESS\"\n                        checked={newClient.type === 'BUSINESS'}\n                        onChange={() => setNewClient(prev => ({ ...prev, type: 'BUSINESS' }))}\n                      />\n                      사업자\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">이름</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={newClient.name}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                    required\n                  />\n                </div>\n                {/* 사업자 정보 */}\n                {newClient.type === 'BUSINESS' && (\n                  <div className=\"border rounded-md p-3 bg-yellow-50\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">상호</label>\n                        <input\n                          type=\"text\"\n                          name=\"businessName\"\n                          value={newClient.business.businessName}\n                          onChange={handleBusinessChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                          required={newClient.type === 'BUSINESS'}\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">대표자</label>\n                        <input\n                          type=\"text\"\n                          name=\"representative\"\n                          value={newClient.business.representative}\n                          onChange={handleBusinessChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                          required={newClient.type === 'BUSINESS'}\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">사업자등록번호</label>\n                        <input\n                          type=\"text\"\n                          name=\"businessNumber\"\n                          value={newClient.business.businessNumber}\n                          onChange={handleBusinessChange}\n                          placeholder=\"000-00-00000\"\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                          required={newClient.type === 'BUSINESS'}\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">발행 이메일</label>\n                        <input\n                          type=\"email\"\n                          name=\"taxEmail\"\n                          value={newClient.business.taxEmail}\n                          onChange={handleBusinessChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                          required={newClient.type === 'BUSINESS'}\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">업태</label>\n                        <input\n                          type=\"text\"\n                          name=\"businessType\"\n                          value={newClient.business.businessType}\n                          onChange={handleBusinessChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">업종</label>\n                        <input\n                          type=\"text\"\n                          name=\"businessItem\"\n                          value={newClient.business.businessItem}\n                          onChange={handleBusinessChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        />\n                      </div>\n                      <div className=\"md:col-span-2\">\n                        <label className=\"block text-sm font-medium text-gray-700\">사업장 주소</label>\n                        <input\n                          type=\"text\"\n                          name=\"businessAddress\"\n                          value={newClient.business.businessAddress}\n                          onChange={handleBusinessChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">전화번호</label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={newClient.phone}\n                    onChange={handleInputChange}\n                    placeholder=\"02-1234-5678\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">휴대전화</label>\n                  <input\n                    type=\"tel\"\n                    name=\"mobile\"\n                    value={newClient.mobile}\n                    onChange={handleInputChange}\n                    placeholder=\"010-1234-5678\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={newClient.email}\n                    onChange={handleInputChange}\n                    placeholder=\"선택사항\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">주소</label>\n                  <textarea\n                    name=\"address\"\n                    value={newClient.address}\n                    onChange={handleInputChange}\n                    rows=\"2\"\n                    placeholder=\"선택사항\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">메모</label>\n                  <textarea\n                    name=\"notes\"\n                    value={newClient.notes}\n                    onChange={handleInputChange}\n                    rows=\"3\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                  />\n                </div>\n                \n                {/* 작업장 정보 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <label className=\"block text-sm font-medium text-gray-700\">작업장 정보</label>\n                    <button\n                      type=\"button\"\n                      onClick={addWorkplace}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                    >\n                      + 작업장 추가\n                    </button>\n                  </div>\n                  \n                  {newClient.workplaces.map((workplace, index) => (\n                    <div key={index} className=\"border rounded-md p-3 mb-3 bg-gray-50\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-sm font-medium text-gray-700\">작업장 {index + 1}</span>\n                        {newClient.workplaces.length > 1 && (\n                          <button\n                            type=\"button\"\n                            onClick={() => removeWorkplace(index)}\n                            className=\"text-red-600 hover:text-red-800 text-sm\"\n                          >\n                            삭제\n                          </button>\n                        )}\n                      </div>\n                      \n                      <div className=\"space-y-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"작업장명 (예: 신축 주택, 카페 인테리어 등)\"\n                          value={workplace.name}\n                          onChange={(e) => handleWorkplaceChange(index, 'name', e.target.value)}\n                          className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                          required\n                        />\n                        <input\n                          type=\"text\"\n                          placeholder=\"작업장 주소\"\n                          value={workplace.address}\n                          onChange={(e) => handleWorkplaceChange(index, 'address', e.target.value)}\n                          className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                          required\n                        />\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">프로젝트</label>\n                        <textarea\n                          placeholder=\"프로젝트 (필수사항)\"\n                          value={workplace.description}\n                          onChange={(e) => handleWorkplaceChange(index, 'description', e.target.value)}\n                          className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                          rows=\"2\"\n                          required\n                        />\n                        <p className=\"mt-1 text-xs text-red-600\">필수사항: 프로젝트명을 입력해주세요.</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"flex justify-end space-x-2 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowModal(false);\n                      setIsEditing(false);\n                      setEditingClientId(null);\n                      setNewClient({\n                        name: '',\n                        phone: '',\n                        mobile: '',\n                        email: '',\n                        address: '',\n                        notes: '',\n                        workplaces: [{ name: '', address: '', description: '' }]\n                      });\n                    }}\n                    className=\"px-4 py-2 text-gray-500 hover:text-gray-700\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded\"\n                  >\n                    {isEditing ? '수정' : '추가'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 건축주 상세보기 모달 */}\n      {selectedClient && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-10 mx-auto p-5 border w-4/5 max-w-3xl shadow-lg rounded-md bg-white\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">건축주 상세 정보 - {selectedClient.name}</h3>\n              <button\n                onClick={() => setSelectedClient(null)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"border rounded-lg p-6 bg-gray-50\">\n              <div className=\"grid grid-cols-2 gap-6 mb-6\">\n                <div>\n                  <h4 className=\"font-medium mb-3\">기본 정보</h4>\n                  <p className=\"mb-2\"><strong>이름:</strong> {selectedClient.name}</p>\n                  {selectedClient.phone && <p className=\"mb-2\"><strong>전화번호:</strong> {selectedClient.phone}</p>}\n                  {selectedClient.mobile && <p className=\"mb-2\"><strong>휴대전화:</strong> {selectedClient.mobile}</p>}\n                  {selectedClient.email && <p className=\"mb-2\"><strong>이메일:</strong> {selectedClient.email}</p>}\n                  <p><strong>주소:</strong> {selectedClient.address}</p>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-3\">재무 정보</h4>\n                  <p className=\"mb-2\"><strong>총 청구액:</strong> {selectedClient.totalBilled.toLocaleString()}원</p>\n                  <p className=\"mb-2\"><strong>미수금:</strong> \n                    <span className={selectedClient.outstanding > 0 ? 'text-red-600 font-medium' : 'text-green-600'}>\n                      {selectedClient.outstanding.toLocaleString()}원\n                    </span>\n                  </p>\n                  <p><strong>완료 프로젝트:</strong> {selectedClient.projects.length}개</p>\n                </div>\n              </div>\n\n              {selectedClient.type === 'BUSINESS' && (\n                <div className=\"border rounded-md p-4 bg-yellow-50 mb-6\">\n                  <h4 className=\"font-medium mb-3\">사업자 정보</h4>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <p><strong>상호:</strong> {selectedClient.business?.businessName || '-'}</p>\n                    <p><strong>대표자:</strong> {selectedClient.business?.representative || '-'}</p>\n                    <p><strong>사업자등록번호:</strong> {selectedClient.business?.businessNumber || '-'}</p>\n                    <p><strong>발행 이메일:</strong> {selectedClient.business?.taxEmail || '-'}</p>\n                    <p><strong>업태:</strong> {selectedClient.business?.businessType || '-'}</p>\n                    <p><strong>업종:</strong> {selectedClient.business?.businessItem || '-'}</p>\n                    <p className=\"col-span-2\"><strong>사업장 주소:</strong> {selectedClient.business?.businessAddress || '-'}</p>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"mb-4\">\n                <h4 className=\"font-medium mb-2\">작업장 정보</h4>\n                {selectedClient.workplaces && selectedClient.workplaces.length > 0 ? (\n                  <div className=\"space-y-3\">\n                    {selectedClient.workplaces.map((workplace, index) => (\n                      <div key={index} className=\"bg-white rounded border p-3\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <h5 className=\"font-medium text-gray-900\">{workplace.name}</h5>\n                          <span className=\"text-xs bg-blue-100 text-blue-600 px-2 py-1 rounded\">\n                            작업장 {index + 1}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-1\">\n                          <strong>주소:</strong> {workplace.address}\n                        </p>\n                        {workplace.description && (\n                          <p className=\"text-sm text-gray-600\">\n                            <strong>프로젝트:</strong> {workplace.description}\n                          </p>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 italic\">등록된 작업장이 없습니다.</p>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <h4 className=\"font-medium mb-2\">프로젝트 이력</h4>\n                {selectedClient.projects.length > 0 ? (\n                  <ul className=\"bg-white rounded border p-3\">\n                    {selectedClient.projects.map((project, index) => (\n                      <li key={index} className=\"py-1 border-b last:border-b-0\">\n                        • {project}\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p className=\"text-gray-500 italic\">진행된 프로젝트가 없습니다.</p>\n                )}\n              </div>\n              \n              {selectedClient.notes && (\n                <div>\n                  <h4 className=\"font-medium mb-2\">메모</h4>\n                  <p className=\"bg-white rounded border p-3\">{selectedClient.notes}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Clients;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport { exportToExcel, importFromExcel, createTemplate } from '../utils/excelUtils';\n\nfunction WorkItems() {\n  const { clients, setClients, workItems, setWorkItems, invoices, setInvoices, getCompletedWorkItemsByClient, addWorkItemToInvoice, units, categories } = useApp();\n  const navigate = useNavigate();\n  \n\n  const [selectedClient, setSelectedClient] = useState('');\n  const [selectedProject, setSelectedProject] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const fileInputRef = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showBulkModal, setShowBulkModal] = useState(false);\n  const [editingItem, setEditingItem] = useState(null);\n  const [newItem, setNewItem] = useState({\n    clientId: '',\n    workplaceId: '',\n    name: '',\n    category: '',\n    defaultPrice: 0,\n    quantity: 1,\n    unit: '',\n    description: '',\n    projectName: '',\n    status: '예정',\n    notes: '',\n    date: new Date().toISOString().split('T')[0],\n    // 간단 인부: 인원 × 단가 (선택)\n    laborPersons: '',\n    laborUnitRate: ''\n  });\n\n  const [showCustomProject, setShowCustomProject] = useState(false);\n\n  // 일괄 입력용 상태\n  const [bulkItems, setBulkItems] = useState([\n    {\n      name: '',\n      category: '',\n      defaultPrice: 0,\n      quantity: 1,\n      unit: '',\n      description: '',\n      status: '예정',\n      notes: '',\n      laborPersons: '',\n      laborUnitRate: ''\n    }\n  ]);\n\n  const [bulkBaseInfo, setBulkBaseInfo] = useState({\n    clientId: '',\n    workplaceId: '',\n    projectName: '',\n    date: new Date().toISOString().split('T')[0],\n    // 공통 인부(선택)\n    bulkLaborPersons: '',\n    bulkLaborUnitRate: ''\n  });\n\n  const [showBulkCustomProject, setShowBulkCustomProject] = useState(false);\n\n  const statuses = ['예정', '진행중', '완료', '보류'];\n  const [bulkStatus, setBulkStatus] = useState('');\n\n  // Calendar (single new item)\n  const calContainerRefSingle = useRef(null);\n  const calendarRefSingle = useRef(null);\n  const [calendarOpenSingle, setCalendarOpenSingle] = useState(false);\n  const [calendarMonthSingle, setCalendarMonthSingle] = useState(() => new Date());\n\n  useEffect(() => {\n    // Initialize month to selected date\n    if (newItem.date) {\n      const [y, m] = newItem.date.split('-').map(Number);\n      if (y && m) setCalendarMonthSingle(new Date(y, m - 1, 1));\n    }\n  }, [newItem.date]);\n\n  // Close single calendar when clicking outside\n  useEffect(() => {\n    const onDocClick = (e) => {\n      if (calContainerRefSingle.current && !calContainerRefSingle.current.contains(e.target)) {\n        setCalendarOpenSingle(false);\n      }\n    };\n    document.addEventListener('mousedown', onDocClick);\n    return () => document.removeEventListener('mousedown', onDocClick);\n  }, []);\n\n  const prevMonthSingle = () => setCalendarMonthSingle((d) => new Date(d.getFullYear(), d.getMonth() - 1, 1));\n  const nextMonthSingle = () => setCalendarMonthSingle((d) => new Date(d.getFullYear(), d.getMonth() + 1, 1));\n  const pad2 = (n) => String(n).padStart(2, '0');\n  const pickDateSingle = (day) => {\n    if (!day) return;\n    const y = calendarMonthSingle.getFullYear();\n    const m = calendarMonthSingle.getMonth() + 1;\n    const value = `${y}-${pad2(m)}-${pad2(day)}`;\n    setNewItem((prev) => ({ ...prev, date: value }));\n    setCalendarOpenSingle(false);\n  };\n  const renderCalendarRowsSingle = () => {\n    const first = new Date(calendarMonthSingle.getFullYear(), calendarMonthSingle.getMonth(), 1);\n    const startDay = first.getDay();\n    const days = new Date(calendarMonthSingle.getFullYear(), calendarMonthSingle.getMonth() + 1, 0).getDate();\n    const cells = [];\n    for (let i = 0; i < startDay; i++) cells.push(null);\n    for (let d = 1; d <= days; d++) cells.push(d);\n    const rows = [];\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\n    return rows.map((row, idx) => (\n      <tr key={idx} className=\"text-center\">\n        {row.map((d, i2) => {\n          const color = i2 === 0 ? 'text-red-600' : i2 === 6 ? 'text-blue-600' : '';\n          return (\n            <td\n              key={i2}\n              className={`px-2 py-1 ${color} ${d ? 'cursor-pointer hover:bg-gray-100 rounded' : ''}`}\n              onClick={() => pickDateSingle(d)}\n            >\n              {d || ''}\n            </td>\n          );\n        })}\n      </tr>\n    ));\n  };\n\n  // Calendar (bulk base info)\n  const calContainerRefBulk = useRef(null);\n  const calendarRefBulk = useRef(null);\n  const [calendarOpenBulk, setCalendarOpenBulk] = useState(false);\n  const [calendarMonthBulk, setCalendarMonthBulk] = useState(() => new Date());\n\n  useEffect(() => {\n    if (bulkBaseInfo.date) {\n      const [y, m] = bulkBaseInfo.date.split('-').map(Number);\n      if (y && m) setCalendarMonthBulk(new Date(y, m - 1, 1));\n    }\n  }, [bulkBaseInfo.date]);\n\n  useEffect(() => {\n    const onDocClick = (e) => {\n      if (calContainerRefBulk.current && !calContainerRefBulk.current.contains(e.target)) {\n        setCalendarOpenBulk(false);\n      }\n    };\n    document.addEventListener('mousedown', onDocClick);\n    return () => document.removeEventListener('mousedown', onDocClick);\n  }, []);\n\n  const prevMonthBulk = () => setCalendarMonthBulk((d) => new Date(d.getFullYear(), d.getMonth() - 1, 1));\n  const nextMonthBulk = () => setCalendarMonthBulk((d) => new Date(d.getFullYear(), d.getMonth() + 1, 1));\n  const pickDateBulk = (day) => {\n    if (!day) return;\n    const y = calendarMonthBulk.getFullYear();\n    const m = calendarMonthBulk.getMonth() + 1;\n    const value = `${y}-${pad2(m)}-${pad2(day)}`;\n    setBulkBaseInfo((prev) => ({ ...prev, date: value }));\n    setCalendarOpenBulk(false);\n  };\n  const renderCalendarRowsBulk = () => {\n    const first = new Date(calendarMonthBulk.getFullYear(), calendarMonthBulk.getMonth(), 1);\n    const startDay = first.getDay();\n    const days = new Date(calendarMonthBulk.getFullYear(), calendarMonthBulk.getMonth() + 1, 0).getDate();\n    const cells = [];\n    for (let i = 0; i < startDay; i++) cells.push(null);\n    for (let d = 1; d <= days; d++) cells.push(d);\n    const rows = [];\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\n    return rows.map((row, idx) => (\n      <tr key={idx} className=\"text-center\">\n        {row.map((d, i2) => {\n          const color = i2 === 0 ? 'text-red-600' : i2 === 6 ? 'text-blue-600' : '';\n          return (\n            <td\n              key={i2}\n              className={`px-2 py-1 ${color} ${d ? 'cursor-pointer hover:bg-gray-100 rounded' : ''}`}\n              onClick={() => pickDateBulk(d)}\n            >\n              {d || ''}\n            </td>\n          );\n        })}\n      </tr>\n    ));\n  };\n\n  // 선택된 건축주의 프로젝트 목록 가져오기 (작업항목 + 건축주.projects + 작업장 설명 기반)\n  const getClientProjects = (clientId) => {\n    if (!clientId) return [];\n    const cid = parseInt(clientId);\n    const fromWorkItems = workItems\n      .filter(item => item.clientId === cid)\n      .map(item => item.projectName)\n      .filter(Boolean);\n    const client = clients.find(c => c.id === cid);\n    const fromClientProjects = (client?.projects || []).filter(Boolean);\n    const fromWorkplaces = (client?.workplaces || [])\n      .map(wp => wp.description)\n      .filter(Boolean);\n    return Array.from(new Set([\n      ...fromWorkItems,\n      ...fromClientProjects,\n      ...fromWorkplaces\n    ]));\n  };\n\n  // 모든 프로젝트 목록 가져오기\n  const getAllProjects = () => {\n    const allProjects = [...new Set(workItems.map(item => item.projectName).filter(p => p))];\n    return allProjects.sort();\n  };\n\n  // 필터링된 작업 항목\n  const filteredWorkItems = workItems.filter(item => {\n    if (selectedClient && item.clientId !== parseInt(selectedClient)) return false;\n    if (selectedProject && item.projectName !== selectedProject) return false;\n    return true;\n  });\n\n  // 선택된 건축주의 작업장 목록\n  const getClientWorkplaces = (clientId) => {\n    const client = clients.find(c => c.id === parseInt(clientId));\n    return client?.workplaces || [];\n  };\n\n  // 숫자에 콤마 포맷팅 함수\n  const formatNumberWithCommas = (number) => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  // 인부비 계산: (기술자 + 일반) 각각 인원 × 단가 합산\n  const getLaborCost = (item) => {\n    const skilledPersons = parseInt(item?.laborPersons ?? 0, 10) || 0;\n    const skilledRate = parseInt(item?.laborUnitRate ?? 0, 10) || 0;\n    const generalPersons = parseInt(item?.laborPersonsGeneral ?? 0, 10) || 0;\n    const generalRate = parseInt(item?.laborUnitRateGeneral ?? 0, 10) || 0;\n    return (skilledPersons * skilledRate) + (generalPersons * generalRate);\n  };\n\n  // 콤마 제거하고 숫자만 추출\n  // eslint-disable-next-line no-unused-vars\n  const removeCommas = (str) => {\n    return str.replace(/,/g, '');\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'defaultPrice' || name === 'quantity' || name === 'laborPersons' || name === 'laborUnitRate') {\n      // 숫자만 추출하고 포맷팅\n      const numbersOnly = value.replace(/[^\\d]/g, '');\n       // 입력값이 비어있으면 상태도 비워줍니다.\n         if (numbersOnly === '') {\n           setNewItem(prev => ({\n            ...prev,\n            [name]: '' // 빈 문자열로 설정하여 placeholder가 보이도록 함\n          }));\n        } else {\n           // 입력값이 있으면 숫자로 변환하여 상태를 업데이트합니다.\n          const numericValue = parseInt(numbersOnly, 10);\n          setNewItem(prev => ({\n            ...prev,\n            [name]: numericValue\n          }));\n        }\n    } else {\n      const newValue = name === 'clientId' || name === 'workplaceId' \n        ? parseInt(value) || 0 \n        : value;\n      \n      setNewItem(prev => {\n        const updated = {\n          ...prev,\n          [name]: newValue\n        };\n    \n        // 건축주가 변경되면 작업장/프로젝트 초기화\n        if (name === 'clientId') {\n          updated.workplaceId = '';\n          updated.projectName = '';\n          setShowCustomProject(false);\n        }\n\n        // 프로젝트명이 \"custom\"이면 커스텀 입력 모드로 변경\n        if (name === 'projectName') {\n          if (value === 'custom') {\n            setShowCustomProject(true);\n            updated.projectName = '';\n          } else {\n            setShowCustomProject(false);\n          }\n        }\n\n        // 작업장 선택 시, 작업장 설명을 프로젝트명으로 자동 채움(있을 경우)\n        if (name === 'workplaceId') {\n          const wp = getClientWorkplaces(updated.clientId).find(w => w.id === parseInt(value));\n          const suggested = (wp?.description || '').trim();\n          if (suggested) {\n            updated.projectName = suggested;\n          }\n        }\n        \n        return updated;\n      });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const selectedClientData = clients.find(c => c.id === newItem.clientId);\n    \n    if (editingItem) {\n      // 수정\n      const selectedWorkplaceData = getClientWorkplaces(newItem.clientId).find(wp => wp.id === newItem.workplaceId);\n      setWorkItems(prev => prev.map(item => \n        item.id === editingItem.id \n          ? { \n              ...item, \n              ...newItem,\n              clientName: selectedClientData?.name || item.clientName,\n              workplaceName: selectedWorkplaceData?.name || item.workplaceName\n            }\n          : item\n      ));\n      // 클라이언트의 프로젝트 목록에 반영\n      if (newItem.projectName) {\n        setClients(prev => prev.map(c => c.id === newItem.clientId\n          ? { ...c, projects: Array.from(new Set([...(c.projects || []), newItem.projectName])) }\n          : c\n        ));\n      }\n    } else {\n      // 새 항목 추가\n      const selectedWorkplaceData = getClientWorkplaces(newItem.clientId).find(wp => wp.id === newItem.workplaceId);\n      const item = {\n        ...newItem,\n        id: Math.max(...workItems.map(i => i.id)) + 1,\n        clientName: selectedClientData?.name || '',\n        workplaceName: selectedWorkplaceData?.name || '',\n        date: newItem.date || new Date().toISOString().split('T')[0]\n      };\n      setWorkItems(prev => [...prev, item]);\n      // 클라이언트의 프로젝트 목록에 반영\n      if (newItem.projectName) {\n        setClients(prev => prev.map(c => c.id === newItem.clientId\n          ? { ...c, projects: Array.from(new Set([...(c.projects || []), newItem.projectName])) }\n          : c\n        ));\n      }\n    }\n    \n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNewItem({\n      clientId: '',\n      workplaceId: '',\n      name: '',\n      category: '',\n      defaultPrice: 0,\n      quantity: 1,\n      unit: '',\n      description: '',\n      projectName: '',\n      status: '예정',\n      notes: '',\n      date: new Date().toISOString().split('T')[0],\n      laborPersons: '',\n      laborUnitRate: ''\n    });\n    setEditingItem(null);\n    setShowModal(false);\n    setShowCustomProject(false);\n  };\n\n  // 일괄 입력 관련 함수들\n  const handleBulkBaseInfoChange = (e) => {\n    const { name, value } = e.target;\n    setBulkBaseInfo(prev => ({\n      ...prev,\n      [name]: (name === 'clientId' || name === 'workplaceId')\n        ? (parseInt(value) || '')\n        : (name === 'bulkLaborPersons' || name === 'bulkLaborUnitRate')\n          ? (value.replace(/[^\\d]/g, '') === '' ? '' : parseInt(value.replace(/[^\\d]/g, ''), 10))\n          : value\n    }));\n    \n    if (name === 'clientId') {\n      setBulkBaseInfo(prev => ({ ...prev, workplaceId: '' }));\n    }\n\n    // 프로젝트명이 \"custom\"이면 커스텀 입력 모드로 변경\n    if (name === 'projectName') {\n      if (value === 'custom') {\n        setShowBulkCustomProject(true);\n        setBulkBaseInfo(prev => ({ ...prev, projectName: '' }));\n      } else {\n        setShowBulkCustomProject(false);\n      }\n    }\n  };\n\n  const handleBulkItemChange = (index, field, value) => {\n     const updatedItems = [...bulkItems];\n   \n     // 숫자 필드 처리\n     if (field === 'defaultPrice' || field === 'quantity' || field === 'laborPersons' || field === 'laborUnitRate') {\n       const numbersOnly = String(value).replace(/[^\\d]/g,'');\n      \n       // 입력값이 비어있으면 상태도 비워줍니다.\n        if (numbersOnly === '') {\n         updatedItems[index][field] = '';\n        } else {\n          // 숫자가 있다면 숫자로 변환하여 설정합니다.\n          updatedItems[index][field] = parseInt(numbersOnly,10);\n        }\n      } else {\n        // 다른 필드는 값을 그대로 반영합니다.\n        updatedItems[index][field] = value;\n      }\n    \n      setBulkItems(updatedItems);\n    };\n\n\n  const removeBulkItem = (index) => {\n    if (bulkItems.length > 1) {\n      setBulkItems(prev => prev.filter((_, i) => i !== index));\n    }\n  };\nconst addBulkItem = () => {\n        setBulkItems(prev => [...prev, {\n          name: '',\n          category: '',\n          defaultPrice: 0,\n         quantity: 1,\n          unit: '',\n          description: '',\n          status: '예정',\n          notes: '',\n          laborPersons: '',\n          laborUnitRate: ''\n        }]);\n      };\n\n  const handleBulkSubmit = (e) => {\n    e.preventDefault();\n    \n    const selectedClientData = clients.find(c => c.id === bulkBaseInfo.clientId);\n    const selectedWorkplaceData = getClientWorkplaces(bulkBaseInfo.clientId).find(wp => wp.id === bulkBaseInfo.workplaceId);\n    \n    const newItems = bulkItems.map((item, index) => ({\n      ...item,\n      id: Math.max(...workItems.map(i => i.id)) + index + 1,\n      clientId: bulkBaseInfo.clientId,\n      clientName: selectedClientData?.name || '',\n      workplaceId: bulkBaseInfo.workplaceId,\n      workplaceName: selectedWorkplaceData?.name || '',\n      projectName: bulkBaseInfo.projectName,\n      date: bulkBaseInfo.date || new Date().toISOString().split('T')[0],\n      // 공통 인부(일반)는 별도 필드로 저장하여 합산\n      laborPersonsGeneral: (bulkBaseInfo.bulkLaborPersons !== '' && bulkBaseInfo.bulkLaborPersons != null) ? bulkBaseInfo.bulkLaborPersons : '',\n      laborUnitRateGeneral: (bulkBaseInfo.bulkLaborUnitRate !== '' && bulkBaseInfo.bulkLaborUnitRate != null) ? bulkBaseInfo.bulkLaborUnitRate : '',\n      // 항목별 인부(기술자)는 기존 필드 유지\n      laborPersons: (item.laborPersons !== '' && item.laborPersons != null) ? item.laborPersons : '',\n      laborUnitRate: (item.laborUnitRate !== '' && item.laborUnitRate != null) ? item.laborUnitRate : ''\n    }));\n    \n    setWorkItems(prev => [...prev, ...newItems]);\n    // 클라이언트의 프로젝트 목록에 반영\n    if (bulkBaseInfo.projectName) {\n      setClients(prev => prev.map(c => c.id === bulkBaseInfo.clientId\n        ? { ...c, projects: Array.from(new Set([...(c.projects || []), bulkBaseInfo.projectName])) }\n        : c\n      ));\n    }\n    \n    // 폼 초기화\n    setBulkItems([{\n      name: '',\n      category: '',\n      defaultPrice: 0,\n      quantity: 1,\n      unit: '',\n      description: '',\n      status: '예정',\n      notes: '',\n      laborPersons: '',\n      laborUnitRate: ''\n    }]);\n    setBulkBaseInfo({\n      clientId: '',\n      workplaceId: '',\n      projectName: '',\n      date: new Date().toISOString().split('T')[0],\n      bulkLaborPersons: '',\n      bulkLaborUnitRate: ''\n    });\n    setShowBulkModal(false);\n    setShowBulkCustomProject(false);\n    \n    alert(`${newItems.length}개의 작업 항목이 추가되었습니다.`);\n  };\n\n  const handleEdit = (item) => {\n    const allProjects = getAllProjects();\n    const isExistingProject = allProjects.includes(item.projectName);\n    \n    setNewItem({\n      clientId: item.clientId,\n      workplaceId: item.workplaceId || '',\n      name: item.name,\n      category: item.category,\n      defaultPrice: item.defaultPrice,\n      quantity: item.quantity || 1,\n      unit: item.unit,\n      description: item.description,\n      projectName: item.projectName,\n      status: item.status,\n      notes: item.notes || '',\n      date: item.date || new Date().toISOString().split('T')[0],\n      laborPersons: item.laborPersons || '',\n      laborUnitRate: item.laborUnitRate || ''\n    });\n    setEditingItem(item);\n    setShowCustomProject(!isExistingProject);\n    setShowModal(true);\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      setWorkItems(prev => prev.filter(item => item.id !== id));\n    }\n  };\n\n  // 체크박스 선택 관리 (통합)\n  const handleItemSelect = (itemId, checked) => {\n    if (checked) {\n      setSelectedItems(prev => [...prev, itemId]);\n    } else {\n      setSelectedItems(prev => prev.filter(id => id !== itemId));\n    }\n  };\n\n  const handleSelectAll = (checked) => {\n    if (checked) {\n      setSelectedItems(filteredWorkItems.map(item => item.id));\n    } else {\n      setSelectedItems([]);\n    }\n  };\n\n  // 선택된 항목들 일괄 삭제\n  const handleBulkDelete = () => {\n    if (selectedItems.length === 0) {\n      alert('삭제할 작업 항목을 선택해주세요.');\n      return;\n    }\n\n    if (window.confirm(`선택된 ${selectedItems.length}개의 작업 항목을 정말 삭제하시겠습니까?`)) {\n      setWorkItems(prev => prev.filter(item => !selectedItems.includes(item.id)));\n      setSelectedItems([]);\n      alert(`${selectedItems.length}개의 작업 항목이 삭제되었습니다.`);\n    }\n  };\n\n  // 선택된 항목들로 청구서 생성\n  const handleCreateBulkInvoice = () => {\n    if (selectedItems.length === 0) {\n      alert('청구서에 포함할 작업 항목을 선택해주세요.');\n      return;\n    }\n\n    // 선택된 작업 항목들 가져오기\n    const selectedWorkItems = workItems.filter(item => selectedItems.includes(item.id));\n    \n    // 완료된 항목만 필터링\n    const completedSelectedItems = selectedWorkItems.filter(item => item.status === '완료');\n    \n    if (completedSelectedItems.length === 0) {\n      alert('선택된 항목 중 완료된 작업 항목이 없습니다. 완료된 작업 항목만 청구서에 포함할 수 있습니다.');\n      return;\n    }\n\n    if (completedSelectedItems.length < selectedItems.length) {\n      const incompleteCount = selectedItems.length - completedSelectedItems.length;\n      if (!window.confirm(`선택된 항목 중 ${incompleteCount}개는 완료되지 않아 청구서에 포함되지 않습니다. 완료된 ${completedSelectedItems.length}개 항목으로 청구서를 생성하시겠습니까?`)) {\n        return;\n      }\n    }\n\n    // 같은 건축주인지 확인\n    const firstClientId = completedSelectedItems[0].clientId;\n    const sameClient = completedSelectedItems.every(item => item.clientId === firstClientId);\n    \n    if (!sameClient) {\n      alert('같은 건축주의 작업 항목만 하나의 청구서로 생성할 수 있습니다.');\n      return;\n    }\n\n    // 이미 청구서에 포함된 항목 확인\n    const unbilledItems = completedSelectedItems.filter(item => {\n      return !invoices.some(invoice => \n        invoice.workItems.some(workItemInInvoice => \n          workItemInInvoice.name === item.name && \n          invoice.client === item.clientName\n        )\n      );\n    });\n\n    if (unbilledItems.length === 0) {\n      alert('선택된 항목들이 이미 청구서에 포함되어 있습니다.');\n      return;\n    }\n\n    // 작업장 정보 가져오기 (첫 번째 항목 기준)\n    const firstItem = unbilledItems[0];\n    const client = clients.find(c => c.id === firstItem.clientId);\n    const workplace = client?.workplaces.find(w => w.id === firstItem.workplaceId);\n\n    // 새로운 청구서 생성\n    const newInvoiceId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n    const workItemsForInvoice = unbilledItems.map(item => addWorkItemToInvoice(item));\n    const totalAmount = workItemsForInvoice.reduce((sum, item) => sum + item.total, 0);\n\n    const newInvoice = {\n      id: newInvoiceId,\n      client: firstItem.clientName,\n      project: firstItem.projectName,\n      workplaceAddress: workplace?.address || '',\n      amount: totalAmount,\n      status: '발송대기',\n      date: new Date().toISOString().split('T')[0],\n      dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      workItems: workItemsForInvoice\n    };\n\n    // 청구서 추가\n    setInvoices(prev => [...prev, newInvoice]);\n    \n    // 선택 항목 초기화\n    setSelectedItems([]);\n\n    // 성공 메시지와 함께 청구서 관리 페이지로 이동\n    alert(`청구서 ${newInvoiceId}가 생성되었습니다! (${unbilledItems.length}개 항목 포함)`);\n    navigate('/invoices');\n  };\n\n  // 개별 청구서 생성 함수 (기존 유지)\n  const handleCreateInvoice = (workItem) => {\n    // 해당 건축주의 완료된 작업 항목들을 가져옴\n    const completedItems = getCompletedWorkItemsByClient(workItem.clientId);\n    \n    // 아직 청구서에 포함되지 않은 완료된 작업 항목들만 필터링\n    const unbilledItems = completedItems.filter(item => {\n      // 기존 청구서들을 확인해서 이미 청구된 작업인지 체크\n      return !invoices.some(invoice => \n        invoice.workItems.some(workItemInInvoice => \n          workItemInInvoice.name === item.name && \n          invoice.client === item.clientName\n        )\n      );\n    });\n\n    if (unbilledItems.length === 0) {\n      alert('청구 가능한 완료된 작업 항목이 없습니다.');\n      return;\n    }\n\n    // 작업장 정보 가져오기\n    const client = clients.find(c => c.id === workItem.clientId);\n    const workplace = client?.workplaces.find(w => w.id === workItem.workplaceId);\n\n    // 새로운 청구서 생성\n    const newInvoiceId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n    const workItemsForInvoice = unbilledItems.map(item => addWorkItemToInvoice(item));\n    const totalAmount = workItemsForInvoice.reduce((sum, item) => sum + item.total, 0);\n\n    const newInvoice = {\n      id: newInvoiceId,\n      client: workItem.clientName,\n      project: workItem.projectName,\n      workplaceAddress: workplace?.address || '',\n      amount: totalAmount,\n      status: '발송대기',\n      date: new Date().toISOString().split('T')[0],\n      dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 14일 후\n      workItems: workItemsForInvoice\n    };\n\n    // 청구서 추가\n    setInvoices(prev => [...prev, newInvoice]);\n\n    // 성공 메시지와 함께 청구서 관리 페이지로 이동\n    alert(`청구서 ${newInvoiceId}가 생성되었습니다! 청구서 관리 페이지로 이동합니다.`);\n    navigate('/invoices');\n  };\n\n  // Excel 관련 함수들\n  const handleExportToExcel = () => {\n    exportToExcel.workItems(filteredWorkItems);\n  };\n\n  const handleImportFromExcel = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const importedWorkItems = await importFromExcel.workItems(file);\n        setWorkItems(prev => [...prev, ...importedWorkItems]);\n        alert(`${importedWorkItems.length}개의 작업 항목을 가져왔습니다.`);\n      } catch (error) {\n        alert('Excel 파일을 가져오는 중 오류가 발생했습니다: ' + error.message);\n      }\n      e.target.value = '';\n    }\n  };\n\n  const handleDownloadTemplate = () => {\n    createTemplate.workItems();\n  };\n\n  const getCategoryColor = (category) => {\n    const colors = {\n      '토목공사': 'bg-brown-100 text-brown-800',\n      '구조공사': 'bg-gray-100 text-gray-800',\n      '철거공사': 'bg-red-100 text-red-800',\n      '마감공사': 'bg-blue-100 text-blue-800',\n      '설비공사': 'bg-yellow-100 text-yellow-800',\n      '내부공사': 'bg-green-100 text-green-800',\n      '기타': 'bg-purple-100 text-purple-800'\n    };\n    return colors[category] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">작업 항목 관리</h1>\n            <p className=\"text-gray-600\">건축주별 작업 항목을 관리하고 진행 상황을 추적하세요</p>\n          </div>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={handleDownloadTemplate}\n              className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n            >\n              📁 템플릿 다운로드\n            </button>\n            <button\n              onClick={() => fileInputRef.current?.click()}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n            >\n              📤 Excel 가져오기\n            </button>\n            <button\n              onClick={handleExportToExcel}\n              className=\"bg-orange-600 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n            >\n              📥 Excel 내보내기\n            </button>\n            <button\n              onClick={() => setShowBulkModal(true)}\n              className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              + 일괄 작업 항목 추가\n            </button>\n            <button\n              onClick={() => setShowModal(true)}\n              className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              + 새 작업 항목\n            </button>\n          </div>\n        </div>\n        \n        {/* 건축주 및 프로젝트 필터 */}\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4 flex-wrap\">\n              <label className=\"text-sm font-medium text-gray-700\">필터:</label>\n              <select\n                value={selectedClient}\n                onChange={(e) => {\n                  setSelectedClient(e.target.value);\n                  setSelectedProject(''); // 건축주 변경시 프로젝트 필터 초기화\n                }}\n                className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                style={{ fontSize: '15px' }}\n              >\n                <option value=\"\" style={{ fontSize: '15px' }}>전체 건축주</option>\n                {clients.map(client => (\n                  <option key={client.id} value={client.id}>{client.name}</option>\n                ))}\n              </select>\n              \n              <select\n                value={selectedProject}\n                onChange={(e) => setSelectedProject(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                style={{ fontSize: '15px' }}\n                disabled={!selectedClient}\n              >\n                <option value=\"\" style={{ fontSize: '15px' }}>\n                  {selectedClient ? '전체 프로젝트' : '먼저 건축주를 선택하세요'}\n                </option>\n                {selectedClient && getClientProjects(selectedClient).map(project => (\n                  <option key={project} value={project}>{project}</option>\n                ))}\n              </select>\n              \n              <div className=\"text-sm text-gray-500\">\n                {(selectedClient || selectedProject) ? \n                  `${filteredWorkItems.length}개 항목` : \n                  `총 ${workItems.length}개 항목`\n                }\n              </div>\n              \n              {(selectedClient || selectedProject) && (\n                <button\n                  onClick={() => {\n                    setSelectedClient('');\n                    setSelectedProject('');\n                  }}\n                  className=\"text-xs text-purple-600 hover:text-purple-800\"\n                >\n                  필터 초기화\n                </button>\n              )}\n            </div>\n\n            {/* 일괄 작업 버튼들 */}\n            <div className=\"flex items-center space-x-2\">\n              {selectedItems.length > 0 && (\n                <>\n                  <div className=\"flex items-center space-x-2 mr-2\">\n                    <label className=\"text-xs text-gray-600\">상태 일괄 변경</label>\n                    <select\n                      value={bulkStatus}\n                      onChange={(e) => setBulkStatus(e.target.value)}\n                      className=\"border border-gray-300 rounded-md px-2 py-1 text-xs focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                    >\n                      <option value=\"\">상태 선택</option>\n                      {statuses.map(s => (\n                        <option key={s} value={s}>{s}</option>\n                      ))}\n                    </select>\n                    <button\n                      onClick={() => {\n                        if (!bulkStatus) {\n                          alert('변경할 상태를 선택하세요.');\n                          return;\n                        }\n                        setWorkItems(prev => prev.map(item =>\n                          selectedItems.includes(item.id) ? { ...item, status: bulkStatus } : item\n                        ));\n                        setBulkStatus('');\n                      }}\n                      className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-3 rounded flex items-center text-xs\"\n                    >\n                      적용\n                    </button>\n                  </div>\n                  <button\n                    onClick={handleCreateBulkInvoice}\n                    className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-3 rounded flex items-center text-sm\"\n                  >\n                    📈 청구서 생성 ({selectedItems.length})\n                  </button>\n                  <button\n                    onClick={handleBulkDelete}\n                    className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-3 rounded flex items-center text-sm\"\n                  >\n                    🗑️ 삭제 ({selectedItems.length})\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* 숨겨진 파일 입력 */}\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleImportFromExcel}\n          accept=\".xlsx,.xls\"\n          style={{ display: 'none' }}\n        />\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">\n                {(selectedClient || selectedProject) ? '필터된 작업' : '총 작업 항목'}\n              </p>\n              <p className=\"text-xl font-bold text-gray-900\">{filteredWorkItems.length}</p>\n            </div>\n            <div className=\"bg-blue-500 rounded-full p-3 text-white text-2xl\">\n              🔧\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">완료된 작업</p>\n              <p className=\"text-xl font-bold text-green-600\">\n                {filteredWorkItems.filter(item => item.status === '완료').length}\n              </p>\n            </div>\n            <div className=\"bg-green-500 rounded-full p-3 text-white text-2xl\">\n              ✅\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">진행 중인 작업</p>\n              <p className=\"text-xl font-bold text-purple-600\">\n                {filteredWorkItems.filter(item => item.status === '진행중').length}\n              </p>\n            </div>\n            <div className=\"bg-purple-500 rounded-full p-3 text-white text-2xl\">\n              🚧\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">총 작업 금액</p>\n              <p className=\"text-xl font-bold text-orange-600\">\n                {filteredWorkItems.reduce((sum, item) => sum + ((item.defaultPrice || 0) * (item.quantity || 1)) + getLaborCost(item), 0).toLocaleString()}원\n              </p>\n            </div>\n            <div className=\"bg-orange-500 rounded-full p-3 text-white text-2xl\">\n              💰\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 작업 항목 목록 */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => handleSelectAll(e.target.checked)}\n                  checked={selectedItems.length > 0 && selectedItems.length === filteredWorkItems.length}\n                  className=\"rounded border-gray-300\"\n                  title=\"전체 선택\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                건축주\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                내용\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                작업장\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                프로젝트\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                카테고리\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                단가/수량\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                날짜\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {filteredWorkItems.map((item) => (\n              <tr key={item.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedItems.includes(item.id)}\n                    onChange={(e) => handleItemSelect(item.id, e.target.checked)}\n                    className=\"rounded border-gray-300\"\n                    title=\"항목 선택\"\n                  />\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"h-8 w-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                      <span className=\"text-xs font-medium text-gray-700\">\n                        {item.clientName.charAt(0)}\n                      </span>\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-sm font-medium text-gray-900\">{item.clientName}</div>\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900\">{item.name}</div>\n                    <div className=\"text-sm text-gray-500\">{item.description}</div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{item.workplaceName}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{item.projectName}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getCategoryColor(item.category)}`}>\n                    {item.category}\n                  </span>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    {item.defaultPrice.toLocaleString()}원 × {item.quantity || 1}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    = {((item.defaultPrice || 0) * (item.quantity || 1)).toLocaleString()}원 / {item.unit}\n                  </div>\n                  {getLaborCost(item) > 0 && (\n                    <div className=\"text-xs text-gray-500\">\n                      + 인부 {getLaborCost(item).toLocaleString()}원\n                    </div>\n                  )}\n                  <div className=\"text-xs text-gray-700 font-medium\">\n                    합계(인부포함): {(((item.defaultPrice || 0) * (item.quantity || 1)) + getLaborCost(item)).toLocaleString()}원\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                    item.status === '완료' ? 'bg-green-100 text-green-800' :\n                    item.status === '진행중' ? 'bg-blue-100 text-blue-800' :\n                    item.status === '보류' ? 'bg-red-100 text-red-800' :\n                    'bg-yellow-100 text-yellow-800'\n                  }`}>\n                    {item.status}\n                  </span>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{item.date}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                  <button \n                    onClick={() => handleEdit(item)}\n                    className=\"text-blue-600 hover:text-blue-900 mr-2\"\n                  >\n                    편집\n                  </button>\n                  <button \n                    onClick={() => handleDelete(item.id)}\n                    className=\"text-red-600 hover:text-red-900 mr-2\"\n                  >\n                    삭제\n                  </button>\n                  {item.status === '완료' && (\n                    <button \n                      onClick={() => handleCreateInvoice(item)}\n                      className=\"text-green-600 hover:text-green-900\"\n                    >\n                      청구서 생성\n                    </button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* 작업 항목 추가/편집 모달 */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-4/5 max-w-4xl shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {editingItem ? '작업 항목 편집' : '새 작업 항목 추가'}\n              </h3>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">건축주</label>\n                    <select\n                      name=\"clientId\"\n                      value={newItem.clientId}\n                      onChange={handleInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                    >\n                      <option value=\"\">건축주 선택</option>\n                      {clients.map(client => (\n                        <option key={client.id} value={client.id}>{client.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">작업장</label>\n                    <select\n                      name=\"workplaceId\"\n                      value={newItem.workplaceId}\n                      onChange={handleInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                      disabled={!newItem.clientId}\n                    >\n                      <option value=\"\">작업장 선택</option>\n                      {newItem.clientId && getClientWorkplaces(newItem.clientId).map(workplace => (\n                        <option key={workplace.id} value={workplace.id}>\n                          {workplace.name} - {workplace.address}\n                        </option>\n                      ))}\n                    </select>\n                    {!newItem.clientId && (\n                      <p className=\"text-xs text-gray-500 mt-1\">먼저 건축주를 선택하세요</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">프로젝트명</label>\n                    {!showCustomProject ? (\n                      <select\n                        name=\"projectName\"\n                        value={newItem.projectName}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                        disabled={!newItem.clientId}\n                      >\n                        <option value=\"\">프로젝트 선택</option>\n                        {newItem.clientId && getClientProjects(newItem.clientId).map(project => (\n                          <option key={project} value={project}>{project}</option>\n                        ))}\n                        <option value=\"custom\">+ 새 프로젝트 입력</option>\n                      </select>\n                    ) : (\n                      <div className=\"flex space-x-2\">\n                        <input\n                          type=\"text\"\n                          name=\"projectName\"\n                          value={newItem.projectName}\n                          onChange={handleInputChange}\n                          placeholder=\"새 프로젝트명 입력\"\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                          required\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={() => {\n                            setShowCustomProject(false);\n                            setNewItem(prev => ({ ...prev, projectName: '' }));\n                          }}\n                          className=\"mt-1 px-2 py-2 text-gray-400 hover:text-gray-600\"\n                          title=\"기존 프로젝트 선택으로 돌아가기\"\n                        >\n                          ↩\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">카테고리</label>\n                    <select\n                      name=\"category\"\n                      value={newItem.category}\n                      onChange={handleInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                    >\n                      <option value=\"\">카테고리 선택</option>\n                      {categories.map(cat => (\n                        <option key={cat} value={cat}>{cat}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                {/* 작업일자 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">작업일자</label>\n                  <div className=\"mt-1 relative inline-block\" ref={calContainerRefSingle}>\n                    <div className=\"flex items-center gap-2\">\n                      <input\n                        type=\"text\"\n                        name=\"date\"\n                        value={newItem.date || ''}\n                        onChange={handleInputChange}\n                        placeholder=\"YYYY-MM-DD\"\n                        inputMode=\"numeric\"\n                        className=\"block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        onFocus={() => setCalendarOpenSingle(true)}\n                        required\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"px-2 py-2 text-gray-600 hover:text-gray-800\"\n                        onClick={() => setCalendarOpenSingle((v) => !v)}\n                        title=\"달력 열기\"\n                      >\n                        📅\n                      </button>\n                    </div>\n                    {calendarOpenSingle && (\n                      <div\n                        ref={calendarRefSingle}\n                        className=\"absolute z-50 bg-white border border-gray-300 rounded-md shadow-lg mt-2 p-3\"\n                        style={{ transform: 'scale(2)', transformOrigin: 'top left' }}\n                      >\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={prevMonthSingle}>◀</button>\n                          <div className=\"text-sm font-medium\">\n                            {calendarMonthSingle.getFullYear()}년 {calendarMonthSingle.getMonth() + 1}월\n                          </div>\n                          <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={nextMonthSingle}>▶</button>\n                        </div>\n                        <table className=\"text-xs select-none\">\n                          <thead>\n                            <tr className=\"text-center text-gray-600\">\n                              {['일','월','화','수','목','금','토'].map((d, idx) => (\n                                <th key={d} className={`px-2 py-1 ${idx === 0 ? 'text-red-600' : idx === 6 ? 'text-blue-600' : ''}`}>{d}</th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {renderCalendarRowsSingle()}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">내용</label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={newItem.name}\n                      onChange={handleInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">수량</label>\n                    <input\n                      type=\"text\"\n                      name=\"quantity\"\n                      value={newItem.quantity || ''}\n                      onChange={handleInputChange}\n                      placeholder=\"1\"\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">단위</label>\n                    <select\n                      name=\"unit\"\n                      value={newItem.unit}\n                      onChange={handleInputChange}\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                    >\n                      <option value=\"\">단위 선택</option>\n                      {units.map(unit => (\n                        <option key={unit} value={unit}>{unit}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">기본 단가</label>\n                    <input\n                      type=\"text\"\n                      name=\"defaultPrice\"\n                      value={newItem.defaultPrice ? formatNumberWithCommas(newItem.defaultPrice) : ''}\n                      onChange={handleInputChange}\n                      placeholder=\"예: 1,000,000\"\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">세부 작업</label>\n                    <textarea\n                      name=\"description\"\n                      value={newItem.description}\n                      onChange={handleInputChange}\n                      rows=\"3\"\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">비고</label>\n                    <textarea\n                      name=\"notes\"\n                      value={newItem.notes}\n                      onChange={handleInputChange}\n                      rows=\"3\"\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      placeholder=\"추가적인 메모나 특이사항을 입력하세요\"\n                    />\n                  </div>\n                </div>\n                {/* 인부(선택) */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">인부 인원(선택)</label>\n                    <input\n                      type=\"text\"\n                      name=\"laborPersons\"\n                      value={newItem.laborPersons || ''}\n                      onChange={handleInputChange}\n                      placeholder=\"예: 2\"\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">인부 단가(선택)</label>\n                    <input\n                      type=\"text\"\n                      name=\"laborUnitRate\"\n                      value={newItem.laborUnitRate ? formatNumberWithCommas(newItem.laborUnitRate) : ''}\n                      onChange={handleInputChange}\n                      placeholder=\"예: 200,000\"\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                    />\n                  </div>\n                </div>\n                {(getLaborCost(newItem) > 0) && (\n                  <div className=\"text-sm text-gray-600\">\n                    인부비 소계: {getLaborCost(newItem).toLocaleString()}원\n                  </div>\n                )}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">상태</label>\n                  <select\n                    name=\"status\"\n                    value={newItem.status}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                    required\n                  >\n                    {statuses.map(status => (\n                      <option key={status} value={status}>{status}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"flex justify-end space-x-2 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={resetForm}\n                    className=\"px-4 py-2 text-gray-500 hover:text-gray-700\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded\"\n                  >\n                    {editingItem ? '수정' : '추가'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 일괄 작업 항목 추가 모달 */}\n      {showBulkModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-10 mx-auto p-5 border w-4/5 max-w-6xl shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">일괄 작업 항목 추가</h3>\n              <form onSubmit={handleBulkSubmit} className=\"space-y-6\">\n                \n                {/* 공통 정보 */}\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"text-md font-medium text-gray-800 mb-3\">공통 정보</h4>\n                  <div className=\"grid grid-cols-4 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">건축주</label>\n                      <select\n                        name=\"clientId\"\n                        value={bulkBaseInfo.clientId}\n                        onChange={handleBulkBaseInfoChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                      >\n                        <option value=\"\">건축주 선택</option>\n                        {clients.map(client => (\n                          <option key={client.id} value={client.id}>{client.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">작업장</label>\n                      <select\n                        name=\"workplaceId\"\n                        value={bulkBaseInfo.workplaceId}\n                        onChange={handleBulkBaseInfoChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                        disabled={!bulkBaseInfo.clientId}\n                      >\n                        <option value=\"\">작업장 선택</option>\n                        {bulkBaseInfo.clientId && getClientWorkplaces(bulkBaseInfo.clientId).map(workplace => (\n                          <option key={workplace.id} value={workplace.id}>\n                            {workplace.name} - {workplace.address}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">프로젝트명</label>\n                      {!showBulkCustomProject ? (\n                        <select\n                          name=\"projectName\"\n                          value={bulkBaseInfo.projectName}\n                          onChange={handleBulkBaseInfoChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                          required\n                          disabled={!bulkBaseInfo.clientId}\n                        >\n                          <option value=\"\">프로젝트 선택</option>\n                          {bulkBaseInfo.clientId && getClientProjects(bulkBaseInfo.clientId).map(project => (\n                            <option key={project} value={project}>{project}</option>\n                          ))}\n                          <option value=\"custom\">+ 새 프로젝트 입력</option>\n                        </select>\n                      ) : (\n                        <div className=\"flex space-x-2\">\n                          <input\n                            type=\"text\"\n                            name=\"projectName\"\n                            value={bulkBaseInfo.projectName}\n                            onChange={handleBulkBaseInfoChange}\n                            placeholder=\"새 프로젝트명 입력\"\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                            required\n                          />\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              setShowBulkCustomProject(false);\n                              setBulkBaseInfo(prev => ({ ...prev, projectName: '' }));\n                            }}\n                            className=\"mt-1 px-2 py-2 text-gray-400 hover:text-gray-600\"\n                            title=\"기존 프로젝트 선택으로 돌아가기\"\n                          >\n                            ↩\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">작업일자</label>\n                      <div className=\"mt-1 relative inline-block\" ref={calContainerRefBulk}>\n                        <div className=\"flex items-center gap-2\">\n                          <input\n                            type=\"text\"\n                            name=\"date\"\n                            value={bulkBaseInfo.date || ''}\n                            onChange={handleBulkBaseInfoChange}\n                            placeholder=\"YYYY-MM-DD\"\n                            inputMode=\"numeric\"\n                            className=\"block w-full border border-gray-300 rounded-md px-3 py-2\"\n                            onFocus={() => setCalendarOpenBulk(true)}\n                            required\n                          />\n                          <button\n                            type=\"button\"\n                            className=\"px-2 py-2 text-gray-600 hover:text-gray-800\"\n                            onClick={() => setCalendarOpenBulk((v) => !v)}\n                            title=\"달력 열기\"\n                          >\n                            📅\n                          </button>\n                        </div>\n                        {calendarOpenBulk && (\n                          <div\n                            ref={calendarRefBulk}\n                            className=\"absolute z-50 bg-white border border-gray-300 rounded-md shadow-lg mt-2 p-3\"\n                            style={{ transform: 'scale(2)', transformOrigin: 'top left' }}\n                          >\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={prevMonthBulk}>◀</button>\n                              <div className=\"text-sm font-medium\">\n                                {calendarMonthBulk.getFullYear()}년 {calendarMonthBulk.getMonth() + 1}월\n                              </div>\n                              <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={nextMonthBulk}>▶</button>\n                            </div>\n                            <table className=\"text-xs select-none\">\n                              <thead>\n                                <tr className=\"text-center text-gray-600\">\n                                  {['일','월','화','수','목','금','토'].map((d, idx) => (\n                                    <th key={d} className={`px-2 py-1 ${idx === 0 ? 'text-red-600' : idx === 6 ? 'text-blue-600' : ''}`}>{d}</th>\n                                  ))}\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {renderCalendarRowsBulk()}\n                              </tbody>\n                            </table>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  {/* 공통 인부(선택) - 일반 작업자 */}\n                  <div className=\"grid grid-cols-4 gap-4 mt-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">공통 인부 인원(일반·선택)</label>\n                      <input\n                        type=\"text\"\n                        name=\"bulkLaborPersons\"\n                        value={bulkBaseInfo.bulkLaborPersons || ''}\n                        onChange={handleBulkBaseInfoChange}\n                        placeholder=\"예: 2\"\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">공통 인부 단가(일반·선택)</label>\n                      <input\n                        type=\"text\"\n                        name=\"bulkLaborUnitRate\"\n                        value={bulkBaseInfo.bulkLaborUnitRate ? formatNumberWithCommas(bulkBaseInfo.bulkLaborUnitRate) : ''}\n                        onChange={handleBulkBaseInfoChange}\n                        placeholder=\"예: 200,000\"\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* 작업 항목들 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-3\">\n                    <h4 className=\"text-md font-medium text-gray-800\">작업 항목들</h4>\n                    <button\n                      type=\"button\"\n                      onClick={addBulkItem}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                    >\n                      + 항목 추가\n                    </button>\n                  </div>\n                  \n                  <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                    {bulkItems.map((item, index) => (\n                      <div key={index} className=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <span className=\"text-sm font-medium text-gray-700\">작업 항목 #{index + 1}</span>\n                          {bulkItems.length > 1 && (\n                            <button\n                              type=\"button\"\n                              onClick={() => removeBulkItem(index)}\n                              className=\"text-red-600 hover:text-red-800 text-sm\"\n                            >\n                              삭제\n                            </button>\n                          )}\n                        </div>\n                        \n                        <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">내용</label>\n                            <input\n                              type=\"text\"\n                              value={item.name}\n                              onChange={(e) => handleBulkItemChange(index, 'name', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">카테고리</label>\n                            <select\n                              value={item.category}\n                              onChange={(e) => handleBulkItemChange(index, 'category', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            >\n                              <option value=\"\">카테고리 선택</option>\n                              {categories.map(cat => (\n                                <option key={cat} value={cat}>{cat}</option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n\n                        <div className=\"grid grid-cols-4 gap-3 mb-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">수량</label>\n                            <input\n                              type=\"text\"\n                              value={item.quantity || ''}\n                              onChange={(e) => handleBulkItemChange(index, 'quantity', e.target.value)}\n                              placeholder=\"1\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">단위</label>\n                            <select\n                              value={item.unit}\n                              onChange={(e) => handleBulkItemChange(index, 'unit', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            >\n                              <option value=\"\">단위 선택</option>\n                              {units.map(unit => (\n                                <option key={unit} value={unit}>{unit}</option>\n                              ))}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">기본 단가</label>\n                            <input\n                              type=\"text\"\n                              value={item.defaultPrice ? formatNumberWithCommas(item.defaultPrice) : ''}\n                              onChange={(e) => handleBulkItemChange(index, 'defaultPrice', e.target.value)}\n                              placeholder=\"예: 1,000,000\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">상태</label>\n                            <select\n                              value={item.status}\n                              onChange={(e) => handleBulkItemChange(index, 'status', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                            >\n                              {statuses.map(status => (\n                                <option key={status} value={status}>{status}</option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n\n                        {/* 인부(선택) - 기술자 */}\n                        <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">인부 인원(기술자·선택)</label>\n                            <input\n                              type=\"text\"\n                              value={item.laborPersons || ''}\n                              onChange={(e) => handleBulkItemChange(index, 'laborPersons', e.target.value)}\n                              placeholder=\"예: 2\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">인부 단가(기술자·선택)</label>\n                            <input\n                              type=\"text\"\n                              value={item.laborUnitRate ? formatNumberWithCommas(item.laborUnitRate) : ''}\n                              onChange={(e) => handleBulkItemChange(index, 'laborUnitRate', e.target.value)}\n                              placeholder=\"예: 200,000\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                            />\n                          </div>\n                        </div>\n\n                        {/* 인부 합계 미리보기 (일반 + 기술자) */}\n                        {(getLaborCost(item) > 0) && (\n                          <div className=\"text-xs text-gray-600\">\n                            인부비 소계: {getLaborCost({\n                              ...item,\n                              laborPersonsGeneral: item.laborPersonsGeneral ?? bulkBaseInfo.bulkLaborPersons,\n                              laborUnitRateGeneral: item.laborUnitRateGeneral ?? bulkBaseInfo.bulkLaborUnitRate,\n                            }).toLocaleString()}원\n                          </div>\n                        )}\n\n                        <div className=\"grid grid-cols-1 gap-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">세부 작업</label>\n                            <textarea\n                              value={item.description}\n                              onChange={(e) => handleBulkItemChange(index, 'description', e.target.value)}\n                              rows=\"2\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">비고</label>\n                            <textarea\n                              value={item.notes}\n                              onChange={(e) => handleBulkItemChange(index, 'notes', e.target.value)}\n                              rows=\"2\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              placeholder=\"추가적인 메모나 특이사항을 입력하세요\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex justify-end space-x-2 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowBulkModal(false)}\n                    className=\"px-4 py-2 text-gray-500 hover:text-gray-700\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded\"\n                  >\n                    {bulkItems.length}개 항목 일괄 추가\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WorkItems;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport { exportToExcel, importFromExcel, createTemplate } from '../utils/excelUtils';\nimport { numberToKorean } from '../utils/numberToKorean';\n\nfunction Estimates() {\n  const { \n    clients, \n    estimates, \n    setEstimates, \n    convertEstimateToWorkItems,\n    companyInfo,\n    units,\n    categories\n  } = useApp();\n  const navigate = useNavigate();\n  const componentRef = useRef();\n  \n  const [selectedClient, setSelectedClient] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [editingEstimate, setEditingEstimate] = useState(null);\n  const [printEstimate, setPrintEstimate] = useState(null);\n  const [showConfirmDelete, setShowConfirmDelete] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [newEstimate, setNewEstimate] = useState({\n    clientId: '',\n    workplaceId: '',\n    projectName: '',\n    title: '',\n    validUntil: '',\n    category: '',\n    status: '검토중',\n    notes: '',\n    items: [\n      {\n        category: '',\n        name: '',\n        description: '',\n        quantity: 1,\n        unit: '',\n        unitPrice: 0,\n        notes: ''\n      }\n    ]\n  });\n  const [noDueDate, setNoDueDate] = useState(false);\n\n  // Custom calendar overlay state (for 유효기한)\n  const calContainerRef = useRef(null);\n  const calendarRef = useRef(null);\n  const [calendarOpen, setCalendarOpen] = useState(false);\n  const [calendarMonth, setCalendarMonth] = useState(() => new Date());\n\n  // Initialize calendar month to current selected value\n  useEffect(() => {\n    if (newEstimate.validUntil) {\n      const [y, m] = newEstimate.validUntil.split('-').map(Number);\n      if (y && m) setCalendarMonth(new Date(y, m - 1, 1));\n    }\n  }, [newEstimate.validUntil]);\n\n  // Close calendar when clicking outside\n  useEffect(() => {\n    const onDocClick = (e) => {\n      if (calContainerRef.current && !calContainerRef.current.contains(e.target)) {\n        setCalendarOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', onDocClick);\n    return () => document.removeEventListener('mousedown', onDocClick);\n  }, []);\n\n  const prevMonth = () => setCalendarMonth((d) => new Date(d.getFullYear(), d.getMonth() - 1, 1));\n  const nextMonth = () => setCalendarMonth((d) => new Date(d.getFullYear(), d.getMonth() + 1, 1));\n  const pad2 = (n) => String(n).padStart(2, '0');\n  const pickDate = (day) => {\n    if (!day) return;\n    const y = calendarMonth.getFullYear();\n    const m = calendarMonth.getMonth() + 1;\n    const value = `${y}-${pad2(m)}-${pad2(day)}`;\n    setNewEstimate((prev) => ({ ...prev, validUntil: value }));\n    setCalendarOpen(false);\n  };\n  const renderCalendarRows = () => {\n    const first = new Date(calendarMonth.getFullYear(), calendarMonth.getMonth(), 1);\n    const startDay = first.getDay();\n    const days = new Date(calendarMonth.getFullYear(), calendarMonth.getMonth() + 1, 0).getDate();\n    const cells = [];\n    for (let i = 0; i < startDay; i++) cells.push(null);\n    for (let d = 1; d <= days; d++) cells.push(d);\n    const rows = [];\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\n    return rows.map((row, idx) => (\n      <tr key={idx} className=\"text-center\">\n        {row.map((d, i2) => {\n          const color = i2 === 0 ? 'text-red-600' : i2 === 6 ? 'text-blue-600' : '';\n          return (\n            <td\n              key={i2}\n              className={`px-2 py-1 ${color} ${d ? 'cursor-pointer hover:bg-gray-100 rounded' : ''}`}\n              onClick={() => pickDate(d)}\n            >\n              {d || ''}\n            </td>\n          );\n        })}\n      </tr>\n    ));\n  };\n\n  // (removed) custom calendar overlay\n  const statuses = ['검토중', '승인됨', '거부됨', '수정 요청', '작업 전환됨'];\n\n  // Auto-reset printEstimate state to prevent UI issues\n  useEffect(() => {\n    if (printEstimate) {\n      const timer = setTimeout(() => {\n        setPrintEstimate(null);\n        console.log('Auto-reset printEstimate state');\n      }, 3000); // Reset after 3 seconds\n      \n      return () => clearTimeout(timer);\n    }\n  }, [printEstimate]);\n\n  // 선택된 건축주의 작업장 목록\n  const getClientWorkplaces = (clientId) => {\n    const client = clients.find(c => c.id === parseInt(clientId));\n    return client?.workplaces || [];\n  };\n\n  // 필터링된 견적서 목록\n  const filteredEstimates = estimates.filter(estimate => {\n    if (selectedClient && estimate.clientId !== parseInt(selectedClient)) return false;\n    if (selectedStatus && estimate.status !== selectedStatus) return false;\n    return true;\n  });\n\n  const allVisibleIds = filteredEstimates.map(e => e.id);\n  const allSelected = selectedIds.length > 0 && selectedIds.length === allVisibleIds.length;\n  const toggleSelectAll = (checked) => setSelectedIds(checked ? allVisibleIds : []);\n  const toggleSelectOne = (id, checked) => setSelectedIds(prev => checked ? Array.from(new Set([...prev, id])) : prev.filter(x => x !== id));\n\n  // 숫자 포맷팅 함수\n  const formatNumberWithCommas = (number) => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    const newValue = name === 'clientId' || name === 'workplaceId' \n      ? parseInt(value) || 0 \n      : value;\n    \n    setNewEstimate(prev => {\n      const updated = {\n        ...prev,\n        [name]: newValue\n      };\n      \n      // 건축주가 변경되면 작업장 선택 초기화\n      if (name === 'clientId') {\n        updated.workplaceId = '';\n      }\n      // 작업장 변경 시 프로젝트명 자동 채움(비어있을 때)\n      if (name === 'workplaceId') {\n        const client = clients.find(c => c.id === (typeof prev.clientId === 'string' ? parseInt(prev.clientId) : prev.clientId));\n        const wp = client?.workplaces?.find(w => w.id === (typeof newValue === 'string' ? parseInt(newValue) : newValue));\n        if (!updated.projectName && wp?.description) {\n          updated.projectName = wp.description;\n        }\n      }\n      \n      return updated;\n    });\n  };\n\n  const handleItemChange = (index, field, value) => {\n    const updatedItems = [...newEstimate.items];\n    \n    if (field === 'unitPrice' || field === 'quantity') {\n      const numbersOnly = value.replace(/[^\\d]/g, '');\n      const numericValue = parseInt(numbersOnly) || (field === 'quantity' ? 1 : 0);\n      updatedItems[index][field] = numericValue;\n      updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].unitPrice;\n    } else {\n      updatedItems[index][field] = value;\n    }\n    \n    setNewEstimate(prev => ({ ...prev, items: updatedItems }));\n  };\n\n  const addItem = () => {\n    setNewEstimate(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        category: '',\n        name: '',\n        description: '',\n        quantity: 1,\n        unit: '',\n        unitPrice: 0,\n        notes: ''\n      }]\n    }));\n  };\n\n  const removeItem = (index) => {\n    if (newEstimate.items.length > 1) {\n      setNewEstimate(prev => ({\n        ...prev,\n        items: prev.items.filter((_, i) => i !== index)\n      }));\n    }\n  };\n\n  const calculateTotal = () => {\n    return newEstimate.items.reduce((sum, item) => \n      sum + ((item.unitPrice || 0) * (item.quantity || 1)), 0\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const selectedClientData = clients.find(c => c.id === newEstimate.clientId);\n    const selectedWorkplaceData = getClientWorkplaces(newEstimate.clientId).find(wp => wp.id === newEstimate.workplaceId);\n    \n    const estimateData = {\n      ...newEstimate,\n      id: editingEstimate ? editingEstimate.id : `EST-${new Date().getFullYear()}-${String(estimates.length + 1).padStart(3, '0')}`,\n      clientName: selectedClientData?.name || '',\n      workplaceName: selectedWorkplaceData?.name || '',\n      workplaceAddress: selectedWorkplaceData?.address || '',\n      date: editingEstimate ? editingEstimate.date : new Date().toISOString().split('T')[0],\n      totalAmount: calculateTotal(),\n      items: newEstimate.items.map((item, index) => ({\n        ...item,\n        id: index + 1,\n        total: (item.unitPrice || 0) * (item.quantity || 1)\n      }))\n    };\n    \n    if (editingEstimate) {\n      setEstimates(prev => prev.map(est => \n        est.id === editingEstimate.id ? estimateData : est\n      ));\n    } else {\n      setEstimates(prev => [...prev, estimateData]);\n    }\n    \n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNewEstimate({\n      clientId: '',\n      workplaceId: '',\n      projectName: '',\n      title: '',\n      validUntil: '',\n      category: '',\n      status: '검토중',\n      notes: '',\n      items: [\n        {\n          category: '',\n          name: '',\n          description: '',\n          quantity: 1,\n          unit: '',\n          unitPrice: 0,\n          notes: ''\n        }\n      ]\n    });\n    setEditingEstimate(null);\n    setShowModal(false);\n    setNoDueDate(false);\n  };\n\n  const handleEdit = (estimate) => {\n    setNewEstimate({\n      clientId: estimate.clientId,\n      workplaceId: estimate.workplaceId || '',\n      projectName: estimate.projectName,\n      title: estimate.title,\n      validUntil: estimate.validUntil,\n      category: estimate.category || '',\n      status: estimate.status,\n      notes: estimate.notes || '',\n      items: estimate.items.map(item => ({\n        category: item.category,\n        name: item.name,\n        description: item.description,\n        quantity: item.quantity,\n        unit: item.unit,\n        unitPrice: item.unitPrice,\n        notes: item.notes || ''\n      }))\n    });\n    setEditingEstimate(estimate);\n    setShowModal(true);\n    setNoDueDate(!estimate.validUntil);\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      setEstimates(prev => prev.filter(estimate => estimate.id !== id));\n    }\n  };\n  const handleBulkDelete = () => {\n    if (selectedIds.length === 0) return;\n    setEstimates(prev => prev.filter(est => !selectedIds.includes(est.id)));\n    setSelectedIds([]);\n    setShowConfirmDelete(false);\n  };\n\n  const handleConvertToWorkItems = (estimateId) => {\n    if (window.confirm('이 견적서를 작업 항목으로 변환하시겠습니까?')) {\n      const convertedItems = convertEstimateToWorkItems(estimateId);\n      alert(`${convertedItems.length}개의 작업 항목이 생성되었습니다.`);\n      navigate('/work-items');\n    }\n  };\n\n  const handlePrint = (estimate) => {\n    // Set printEstimate\n    setPrintEstimate(estimate);\n    \n    // Execute after waiting for state update\n    setTimeout(() => {\n      console.log('견적서 PDF 새 탭에서 열기:', estimate.id);\n      \n      // Get the print content\n      const printContent = componentRef.current;\n      if (!printContent) {\n        console.error('인쇄 콘텐츠를 찾을 수 없습니다');\n        alert('인쇄 콘텐츠를 준비하는 중입니다. 잠시 후 다시 시도해주세요.');\n        return;\n      }\n      \n      // Create new window for printing with better specifications\n      const printWindow = window.open('', '_blank', 'width=1000,height=800,scrollbars=yes,resizable=yes');\n      if (!printWindow) {\n        alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n        return;\n      }\n      \n      // Write comprehensive HTML content to new window\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html lang=\"ko\">\n          <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>견적서 - ${estimate.id}</title>\n            <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap\" rel=\"stylesheet\">\n            <style>\n              * { box-sizing: border-box; }\n              body { \n                margin: 0; \n                padding: 20px; \n                font-family: 'Noto Sans KR', sans-serif; \n                background: white;\n                line-height: 1.4;\n              }\n              @media print { \n                body { margin: 0; padding: 15px; }\n                .no-print { display: none; }\n              }\n              .toolbar { position: fixed; top: 10px; right: 10px; z-index: 1000; display: flex; gap: 10px; }\n              .print-header {\n                background: #3498db;\n                color: white;\n                padding: 10px 15px;\n                border-radius: 5px;\n                font-size: 14px;\n                cursor: pointer;\n              }\n              .print-header:hover {\n                background: #2980b9;\n              }\n              .close-header {\n                background: #e11d48; /* rose-600 */\n                color: white;\n                padding: 10px 15px;\n                border-radius: 5px;\n                font-size: 14px;\n                cursor: pointer;\n              }\n              .close-header:hover {\n                background: #be123c; /* rose-700 */\n              }\n              @media print {\n                .toolbar { display: none; }\n              }\n            </style>\n          </head>\n          <body>\n            <div class=\"toolbar no-print\">\n              <div class=\"close-header\" onclick=\"window.close()\">✕ 닫기</div>\n              <div class=\"print-header\" onclick=\"window.print()\">🖨️ 인쇄하기 (Ctrl+P)</div>\n            </div>\n            ${printContent.innerHTML}\n            <script>\n              // 페이지 로드 완료 후 포커스\n              window.onload = function() {\n                window.focus();\n                console.log('견적서 PDF 준비 완료');\n              };\n              \n              // 키보드 단축키 지원\n              document.addEventListener('keydown', function(e) {\n                if (e.ctrlKey && e.key === 'p') {\n                  e.preventDefault();\n                  window.print();\n                }\n              });\n            </script>\n          </body>\n        </html>\n      `);\n      \n      printWindow.document.close();\n      \n      // 로딩 완료 후 포커스 및 사용자 알림\n      setTimeout(() => {\n        try {\n          printWindow.focus();\n          console.log('견적서 새 탭에서 열기 완료');\n          \n          // 사용자에게 알림 (선택사항)\n          // alert('견적서가 새 탭에서 열렸습니다. 인쇄하려면 Ctrl+P를 누르세요.');\n        } catch (error) {\n          console.error('새 탭 열기 오류:', error);\n          alert('새 탭에서 견적서를 여는 중 오류가 발생했습니다.');\n        }\n      }, 300);\n      \n    }, 100);\n  };\n\n  // 엑셀 내보내기\n  const handleExportToExcel = () => {\n    exportToExcel.estimates(estimates);\n  };\n\n  // 엑셀에서 가져오기\n  const handleImportFromExcel = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    try {\n      const importedEstimates = await importFromExcel.estimates(file);\n      setEstimates(prev => [...prev, ...importedEstimates]);\n      alert(`${importedEstimates.length}개의 견적서를 성공적으로 가져왔습니다.`);\n    } catch (error) {\n      alert('파일을 가져오는 중 오류가 발생했습니다.');\n      console.error('Import error:', error);\n    }\n    \n    e.target.value = '';\n  };\n\n  // 템플릿 다운로드\n  const handleDownloadTemplate = () => {\n    createTemplate.estimates();\n  };\n\n  // 상세 견적서 엑셀 내보내기\n  // eslint-disable-next-line no-unused-vars\n  const handleExportEstimateDetail = (estimate) => {\n    const detailData = {\n      ...estimate,\n      workItems: estimate.items.map(item => ({\n        name: item.name,\n        quantity: item.quantity,\n        unitPrice: item.unitPrice,\n        total: item.quantity * item.unitPrice,\n        category: item.category,\n        description: item.description,\n        notes: item.notes\n      }))\n    };\n    exportToExcel.estimateDetail(detailData);\n  };\n\n  const getStatusColor = (status) => {\n    const colors = {\n      '검토중': 'bg-yellow-100 text-yellow-800',\n      '승인됨': 'bg-green-100 text-green-800',\n      '거부됨': 'bg-red-100 text-red-800',\n      '수정 요청': 'bg-blue-100 text-blue-800',\n      '작업 전환됨': 'bg-purple-100 text-purple-800'\n    };\n    return colors[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">견적서 관리</h1>\n            <p className=\"text-gray-600\">건축주별 견적서를 관리하고 작업 항목으로 변환하세요</p>\n          </div>\n          <div className=\"flex space-x-2\">\n            {/* Excel 관련 버튼들 */}\n            <button\n              onClick={handleDownloadTemplate}\n              className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              📁 템플릿 다운로드\n            </button>\n            \n            <button\n              onClick={handleExportToExcel}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              📥 Excel 내보내기\n            </button>\n            \n            <label className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded cursor-pointer\">\n              📤 Excel 가져오기\n              <input\n                type=\"file\"\n                accept=\".xlsx,.xls\"\n                onChange={handleImportFromExcel}\n                className=\"hidden\"\n              />\n            </label>\n            \n            <button\n              onClick={() => setShowModal(true)}\n              className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              + 새 견적서\n            </button>\n          </div>\n        </div>\n        \n        {/* 필터 */}\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center space-x-4 flex-wrap\">\n            <label className=\"text-sm font-medium text-gray-700\">필터:</label>\n            <select\n              value={selectedClient}\n              onChange={(e) => setSelectedClient(e.target.value)}\n              className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500\"\n              style={{ fontSize: '15px' }}\n            >\n              <option value=\"\">전체 건축주</option>\n              {clients.map(client => (\n                <option key={client.id} value={client.id}>{client.name}</option>\n              ))}\n            </select>\n            \n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500\"\n              style={{ fontSize: '15px' }}\n            >\n              <option value=\"\">전체 상태</option>\n              {statuses.map(status => (\n                <option key={status} value={status}>{status}</option>\n              ))}\n            </select>\n            \n            <div className=\"text-sm text-gray-500\">\n              {(selectedClient || selectedStatus) ? \n                `${filteredEstimates.length}개 견적서` : \n                `총 ${estimates.length}개 견적서`\n              }\n            </div>\n            \n            {(selectedClient || selectedStatus) && (\n              <button\n                onClick={() => {\n                  setSelectedClient('');\n                  setSelectedStatus('');\n                }}\n                className=\"text-xs text-green-600 hover:text-green-800\"\n              >\n                필터 초기화\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">총 견적서</p>\n              <p className=\"text-xl font-bold text-gray-900\">{filteredEstimates.length}</p>\n            </div>\n            <div className=\"bg-green-500 rounded-full p-3 text-white text-2xl\">\n              📈\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">승인된 견적서</p>\n              <p className=\"text-xl font-bold text-green-600\">\n                {filteredEstimates.filter(est => est.status === '승인됨').length}\n              </p>\n            </div>\n            <div className=\"bg-green-500 rounded-full p-3 text-white text-2xl\">\n              ✅\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">검토 중인 견적서</p>\n              <p className=\"text-xl font-bold text-yellow-600\">\n                {filteredEstimates.filter(est => est.status === '검토중').length}\n              </p>\n            </div>\n            <div className=\"bg-yellow-500 rounded-full p-3 text-white text-2xl\">\n              ⏳\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">총 견적 금액</p>\n              <p className=\"text-xl font-bold text-blue-600\">\n                {filteredEstimates.reduce((sum, est) => sum + est.totalAmount, 0).toLocaleString()}원\n              </p>\n            </div>\n            <div className=\"bg-blue-500 rounded-full p-3 text-white text-2xl\">\n              💰\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 견적서 목록 */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50 border-b\">\n          <div className=\"text-sm text-gray-600\">선택됨: {selectedIds.length}개</div>\n          {selectedIds.length > 0 && (\n            <button\n              onClick={() => setShowConfirmDelete(true)}\n              className=\"text-white text-sm font-medium px-3 py-1 rounded bg-red-600 hover:bg-red-700\"\n            >\n              🗑️ 선택 삭제({selectedIds.length})\n            </button>\n          )}\n        </div>\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <input\n                  type=\"checkbox\"\n                  className=\"rounded border-gray-300\"\n                  checked={allSelected}\n                  onChange={(e) => toggleSelectAll(e.target.checked)}\n                  title=\"전체 선택\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                견적서 번호\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                건축주\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                프로젝트\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                작업장\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                견적 금액\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                유효기한\n              </th>\n              <th className=\"px-6 py-3 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {filteredEstimates.map((estimate) => (\n              <tr key={estimate.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"rounded border-gray-300\"\n                    checked={selectedIds.includes(estimate.id)}\n                    onChange={(e) => toggleSelectOne(estimate.id, e.target.checked)}\n                    title=\"항목 선택\"\n                  />\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">{estimate.id}</div>\n                  <div className=\"text-sm text-gray-500\">{estimate.date}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"h-8 w-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                      <span className=\"text-xs font-medium text-gray-700\">\n                        {estimate.clientName.charAt(0)}\n                      </span>\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-sm font-medium text-gray-900\">{estimate.clientName}</div>\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">{estimate.projectName}</div>\n                  <div className=\"text-sm text-gray-500\">{estimate.title}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{estimate.workplaceName}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    {estimate.totalAmount.toLocaleString()}원\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(estimate.status)}`}>\n                    {estimate.status}\n                  </span>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{estimate.validUntil}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                  <button \n                    onClick={() => handleEdit(estimate)}\n                    className=\"text-blue-600 hover:text-blue-900 mr-2\"\n                  >\n                    편집\n                  </button>\n                  <button \n                    onClick={() => handlePrint(estimate)}\n                    className=\"text-green-600 hover:text-green-900 mr-2\"\n                  >\n                    🖨️ 출력\n                  </button>\n                  <button \n                    onClick={() => handleDelete(estimate.id)}\n                    className=\"text-red-600 hover:text-red-900 mr-2\"\n                  >\n                    삭제\n                  </button>\n                  {estimate.status === '승인됨' && (\n                    <button \n                      onClick={() => handleConvertToWorkItems(estimate.id)}\n                      className=\"text-purple-600 hover:text-purple-900\"\n                    >\n                      작업 변환\n                    </button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {showConfirmDelete && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">선택 삭제</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">선택된 {selectedIds.length}개의 견적서를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.</p>\n            <div className=\"flex justify-end gap-2\">\n              <button className=\"btn-secondary\" onClick={() => setShowConfirmDelete(false)}>취소</button>\n              <button className=\"btn-primary bg-red-600 hover:bg-red-700\" onClick={handleBulkDelete}>삭제</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 견적서 추가/편집 모달 */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-5 mx-auto p-5 border w-4/5 max-w-6xl shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {editingEstimate ? '견적서 편집' : '새 견적서 작성'}\n              </h3>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                \n                {/* 기본 정보 */}\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"text-md font-medium text-gray-800 mb-3\">기본 정보</h4>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">건축주</label>\n                      <select\n                        name=\"clientId\"\n                        value={newEstimate.clientId}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                      >\n                        <option value=\"\">건축주 선택</option>\n                        {clients.map(client => (\n                          <option key={client.id} value={client.id}>{client.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">작업장</label>\n                      <select\n                        name=\"workplaceId\"\n                        value={newEstimate.workplaceId}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                        disabled={!newEstimate.clientId}\n                      >\n                        <option value=\"\">작업장 선택</option>\n                        {newEstimate.clientId && getClientWorkplaces(newEstimate.clientId).map(workplace => (\n                          <option key={workplace.id} value={workplace.id}>\n                            {workplace.name} - {workplace.address}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">프로젝트명</label>\n                      <input\n                        type=\"text\"\n                        name=\"projectName\"\n                        value={newEstimate.projectName}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">견적서 제목</label>\n                      <input\n                        type=\"text\"\n                        name=\"title\"\n                        value={newEstimate.title}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">유효기한</label>\n                      <div className=\"mt-1 relative inline-block\" ref={calContainerRef}>\n                        <div className=\"flex items-center gap-2\">\n                          <input\n                            type=\"text\"\n                            name=\"validUntil\"\n                            value={newEstimate.validUntil}\n                            onChange={handleInputChange}\n                            placeholder=\"YYYY-MM-DD\"\n                            inputMode=\"numeric\"\n                            className=\"block w-full border border-gray-300 rounded-md px-3 py-2\"\n                            onFocus={() => !noDueDate && setCalendarOpen(true)}\n                            disabled={noDueDate}\n                            required={!noDueDate}\n                          />\n                          <button\n                            type=\"button\"\n                            className=\"px-2 py-2 text-gray-600 hover:text-gray-800\"\n                            onClick={() => !noDueDate && setCalendarOpen((v) => !v)}\n                            title=\"달력 열기\"\n                            disabled={noDueDate}\n                          >\n                            📅\n                          </button>\n                          <label className=\"flex items-center gap-1 text-xs text-gray-600 select-none\">\n                            <input\n                              type=\"checkbox\"\n                              checked={noDueDate}\n                              onChange={(e) => {\n                                const checked = e.target.checked;\n                                setNoDueDate(checked);\n                                if (checked) {\n                                  setCalendarOpen(false);\n                                  setNewEstimate(prev => ({ ...prev, validUntil: '' }));\n                                }\n                              }}\n                            />\n                            유효기간 선택 안함\n                          </label>\n                        </div>\n                        {calendarOpen && (\n                          <div\n                            ref={calendarRef}\n                            className=\"absolute z-50 bg-white border border-gray-300 rounded-md shadow-lg mt-2 p-3\"\n                            style={{ transform: 'scale(2)', transformOrigin: 'top left' }}\n                          >\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={prevMonth}>◀</button>\n                              <div className=\"text-sm font-medium\">\n                                {calendarMonth.getFullYear()}년 {calendarMonth.getMonth() + 1}월\n                              </div>\n                              <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={nextMonth}>▶</button>\n                            </div>\n                            <table className=\"text-xs select-none\">\n                              <thead>\n                                <tr className=\"text-center text-gray-600\">\n                                  {['일','월','화','수','목','금','토'].map((d, idx) => (\n                                    <th key={d} className={`px-2 py-1 ${idx === 0 ? 'text-red-600' : idx === 6 ? 'text-blue-600' : ''}`}>{d}</th>\n                                  ))}\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {renderCalendarRows()}\n                              </tbody>\n                            </table>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">상태</label>\n                      <select\n                        name=\"status\"\n                        value={newEstimate.status}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                      >\n                        {statuses.map(status => (\n                          <option key={status} value={status}>{status}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 견적 항목들 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-3\">\n                    <h4 className=\"text-md font-medium text-gray-800\">견적 항목</h4>\n                    <button\n                      type=\"button\"\n                      onClick={addItem}\n                      className=\"text-green-600 hover:text-green-800 text-sm\"\n                    >\n                      + 항목 추가\n                    </button>\n                  </div>\n                  \n                  <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                    {newEstimate.items.map((item, index) => (\n                      <div key={index} className=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <span className=\"text-sm font-medium text-gray-700\">항목 #{index + 1}</span>\n                          {newEstimate.items.length > 1 && (\n                            <button\n                              type=\"button\"\n                              onClick={() => removeItem(index)}\n                              className=\"text-red-600 hover:text-red-800 text-sm\"\n                            >\n                              삭제\n                            </button>\n                          )}\n                        </div>\n                        \n                        <div className=\"grid grid-cols-3 gap-3 mb-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">카테고리</label>\n                            <select\n                              value={item.category}\n                              onChange={(e) => handleItemChange(index, 'category', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            >\n                              <option value=\"\">카테고리 선택</option>\n                              {categories.map(cat => (\n                                <option key={cat} value={cat}>{cat}</option>\n                              ))}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">내용</label>\n                            <input\n                              type=\"text\"\n                              value={item.name}\n                              onChange={(e) => handleItemChange(index, 'name', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">설명</label>\n                            <input\n                              type=\"text\"\n                              value={item.description}\n                              onChange={(e) => handleItemChange(index, 'description', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"grid grid-cols-4 gap-3 mb-3\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">단가</label>\n                            <input\n                              type=\"text\"\n                              value={item.unitPrice ? formatNumberWithCommas(item.unitPrice) : ''}\n                              onChange={(e) => handleItemChange(index, 'unitPrice', e.target.value)}\n                              placeholder=\"0\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">수량</label>\n                            <input\n                              type=\"text\"\n                              value={item.quantity || ''}\n                              onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\n                              placeholder=\"1\"\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">단위</label>\n                            <select\n                              value={item.unit}\n                              onChange={(e) => handleItemChange(index, 'unit', e.target.value)}\n                              className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                              required\n                            >\n                              <option value=\"\">단위 선택</option>\n                              {units.map(u => (\n                                <option key={u} value={u}>{u}</option>\n                              ))}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 mb-1\">합계</label>\n                            <div className=\"w-full bg-gray-100 border border-gray-300 rounded px-2 py-1 text-sm\">\n                              {((item.unitPrice || 0) * (item.quantity || 1)).toLocaleString()}원\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <label className=\"block text-xs font-medium text-gray-600 mb-1\">비고</label>\n                          <textarea\n                            value={item.notes}\n                            onChange={(e) => handleItemChange(index, 'notes', e.target.value)}\n                            rows=\"2\"\n                            className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-3 bg-gray-100 rounded\">\n                    <div className=\"text-right\">\n                      <span className=\"text-lg font-bold text-gray-900\">\n                        총 견적 금액: {calculateTotal().toLocaleString()}원\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">특이사항 및 조건</label>\n                  <textarea\n                    name=\"notes\"\n                    value={newEstimate.notes}\n                    onChange={handleInputChange}\n                    rows=\"3\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\n                    placeholder=\"부가세 별도, 설계 변경 시 추가 견적 등...\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-2 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={resetForm}\n                    className=\"px-4 py-2 text-gray-500 hover:text-gray-700\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded\"\n                  >\n                    {editingEstimate ? '수정' : '작성'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* PDF 인쇄용 숨겨진 컴포넌트 */}\n      <div style={{ display: 'none' }}>\n        <div ref={componentRef} style={{ padding: '40px', fontFamily: \"'Noto Sans KR', sans-serif\", fontSize: '12px', lineHeight: '1.4', maxWidth: '800px', margin: 'auto', backgroundColor: '#ffffff', color: '#374151' }}>\n          {printEstimate && (\n            <>\n              {/* 견적서 번호 및 제목 */}\n              <div style={{ marginBottom: '40px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '20px' }}>\n                  <div style={{ fontSize: '14px', color: '#374151' }}>\n                    <strong>견적서 번호:</strong> {printEstimate.id}\n                  </div>\n                  <div style={{ fontSize: '14px', color: '#374151' }}>\n                    <strong>작성일:</strong> {printEstimate.date}\n                  </div>\n                </div>\n                <div style={{ textAlign: 'center', borderBottom: '3px solid #1f2937', paddingBottom: '20px' }}>\n                  <h1 style={{ fontSize: '36px', margin: '0', fontWeight: 'bold', color: '#1f2937', letterSpacing: '8px' }}>견   적   서</h1>\n                </div>\n              </div>\n\n              {/* 고객 정보 및 업체 정보 */}\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '30px' }}>\n                {/* 고객 정보 (왼쪽) */}\n                <div>\n                  <div style={{ border: '2px solid #374151', padding: '20px', borderRadius: '8px', minWidth: '300px' }}>\n                    <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '15px', color: '#1f2937', borderBottom: '1px solid #d1d5db', paddingBottom: '8px' }}>발주처 정보</h3>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>건축주명:</strong> {printEstimate.clientName}</p>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>프로젝트명:</strong> {printEstimate.projectName}</p>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>작업장 주소:</strong> {printEstimate.workplaceAddress}</p>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>유효기한:</strong> {printEstimate.validUntil}</p>\n                  </div>\n                </div>\n                \n                {/* 업체 정보 (오른쪽) */}\n                <div>\n                  <div style={{ border: '2px solid #374151', padding: '20px', borderRadius: '8px', minWidth: '300px' }}>\n                    <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '15px', color: '#1f2937', borderBottom: '1px solid #d1d5db', paddingBottom: '8px' }}>시공업체 정보</h3>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>업체명:</strong> {companyInfo.name}</p>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>대표자:</strong> {companyInfo.representative}</p>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>연락처:</strong> {companyInfo.phone}</p>\n                    <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>주소:</strong> {companyInfo.address}</p>\n                    {companyInfo.businessNumber && <p style={{ margin: '8px 0', fontSize: '14px' }}><strong>사업자번호:</strong> {companyInfo.businessNumber}</p>}\n                  </div>\n                </div>\n              </div>\n\n              {/* 총 견적금액 (한글) */}\n              <div style={{ textAlign: 'left', marginBottom: '30px', padding: '15px', backgroundColor: '#f8fafc', border: '1px solid #e2e8f0', borderRadius: '8px' }}>\n                <p style={{ fontSize: '18px', fontWeight: 'bold', margin: '0', color: '#1f2937' }}>\n                  총 견적금액 : 금 {numberToKorean(printEstimate.totalAmount)} 원정\n                </p>\n              </div>\n\n              {/* 세부 작업 내역 */}\n              <div style={{ marginBottom: '40px' }}>\n                <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '15px', color: '#1f2937', borderBottom: '2px solid #374151', paddingBottom: '8px' }}>세부 견적 내역</h3>\n                <div style={{ border: '2px solid #374151', borderRadius: '8px', overflow: 'hidden' }}>\n                  <table style={{ width: '100%', borderCollapse: 'collapse', fontSize: '12px' }}>\n                    <thead>\n                      <tr style={{ backgroundColor: '#374151', color: 'white' }}>\n                        <th style={{ padding: '12px 8px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '50px' }}>순번</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '120px' }}>구분</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '250px' }}>공종 및 내용</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '80px' }}>수량</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '80px' }}>단위</th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '100px' }}>\n                          단가<br/>\n                          <span style={{ fontSize: '10px', fontWeight: 'normal' }}>(천원)</span>\n                        </th>\n                        <th style={{ padding: '12px 16px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '100px' }}>\n                          금액<br/>\n                          <span style={{ fontSize: '10px', fontWeight: 'normal' }}>(천원)</span>\n                        </th>\n                        <th style={{ padding: '12px 12px', border: '1px solid #6b7280', textAlign: 'center', fontWeight: 'bold', width: '120px' }}>비고</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {printEstimate.items.map((item, index) => (\n                        <tr key={index} style={{ ':hover': { backgroundColor: '#f1f5f9' } }}>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center' }}>{index + 1}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center' }}>{item.category}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb' }}>\n                            <div>\n                              <strong>{item.name}</strong>\n                              {item.description && (\n                                <div style={{ fontSize: '11px', color: '#6b7280', marginTop: '4px', fontStyle: 'italic' }}>\n                                  {item.description}\n                                </div>\n                              )}\n                            </div>\n                          </td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center' }}>{item.quantity}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'center' }}>{item.unit}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'right' }}>{Math.floor(item.unitPrice / 1000).toLocaleString()}</td>\n                          <td style={{ padding: '12px 16px', border: '1px solid #e5e7eb', textAlign: 'right', fontWeight: 'bold' }}>{Math.floor((item.quantity * item.unitPrice) / 1000).toLocaleString()}</td>\n                          <td style={{ padding: '12px 12px', border: '1px solid #e5e7eb', fontSize: '11px', color: '#374151' }}>\n                            {item.notes || ''}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot>\n                      <tr style={{ backgroundColor: '#f8fafc', fontWeight: 'bold', fontSize: '14px' }}>\n                        <td colSpan=\"8\" style={{ padding: '16px', border: '1px solid #e5e7eb', textAlign: 'right', fontSize: '16px', fontWeight: 'bold', color: '#374151', backgroundColor: '#f3f4f6' }}>\n                          총 견적금액: {printEstimate.totalAmount.toLocaleString()}원\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </div>\n\n              {/* 특이사항 및 조건 */}\n              {printEstimate.notes && (\n                <div style={{ marginBottom: '30px' }}>\n                  <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '15px', color: '#1f2937', borderBottom: '2px solid #374151', paddingBottom: '8px' }}>특이사항 및 조건</h3>\n                  <div style={{ border: '1px solid #d1d5db', padding: '16px', borderRadius: '8px', backgroundColor: '#fefce8' }}>\n                    <p style={{ margin: '0', fontSize: '13px', lineHeight: '1.6', whiteSpace: 'pre-line', color: '#374151' }}>{printEstimate.notes}</p>\n                  </div>\n                </div>\n              )}\n\n              {/* 하단 서명 영역 */}\n              <div style={{ marginTop: '50px', borderTop: '1px solid #d1d5db', paddingTop: '30px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div style={{ textAlign: 'center', minWidth: '200px' }}>\n                    <div style={{ borderBottom: '1px solid #374151', marginBottom: '8px', paddingBottom: '40px' }}></div>\n                    <p style={{ fontSize: '14px', fontWeight: 'bold', margin: '0', color: '#374151' }}>발주처 확인</p>\n                  </div>\n                  <div style={{ textAlign: 'center', minWidth: '200px' }}>\n                    <div style={{ borderBottom: '1px solid #374151', marginBottom: '8px', paddingBottom: '40px' }}></div>\n                    <p style={{ fontSize: '14px', fontWeight: 'bold', margin: '0', color: '#374151' }}>시공업체 ({companyInfo.name})</p>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Estimates;\n","// 도장 이미지 저장을 위한 유틸리티\nconst STAMP_IMAGE_KEY = 'constructionApp_stampImage';\n\n// localStorage에 이미지 저장\nexport const saveStampImage = (imageDataUrl) => {\n  try {\n    localStorage.setItem(STAMP_IMAGE_KEY, imageDataUrl);\n    console.log('도장 이미지가 localStorage에 저장되었습니다.');\n    return true;\n  } catch (error) {\n    console.error('도장 이미지 저장 실패:', error);\n    return false;\n  }\n};\n\n// localStorage에서 이미지 불러오기\nexport const loadStampImage = () => {\n  try {\n    const imageData = localStorage.getItem(STAMP_IMAGE_KEY);\n    if (imageData) {\n      console.log('도장 이미지가 localStorage에서 로드되었습니다.');\n    }\n    return imageData;\n  } catch (error) {\n    console.error('도장 이미지 로드 실패:', error);\n    return null;\n  }\n};\n\n// localStorage에서 이미지 삭제\nexport const removeStampImage = () => {\n  try {\n    localStorage.removeItem(STAMP_IMAGE_KEY);\n    console.log('도장 이미지가 localStorage에서 삭제되었습니다.');\n    return true;\n  } catch (error) {\n    console.error('도장 이미지 삭제 실패:', error);\n    return false;\n  }\n};\n\n// localStorage 저장 공간 확인\nexport const checkStorageAvailable = () => {\n  try {\n    const test = 'test';\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return true;\n  } catch (error) {\n    console.error('localStorage 사용 불가:', error);\n    return false;\n  }\n};\n\n// 이미지 파일을 Base64로 변환\nexport const imageToBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (e) => resolve(e.target.result);\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(file);\n  });\n};\n\n// localStorage 사용량 확인 (개발용)\nexport const getStorageInfo = () => {\n  let total = 0;\n  for (let key in localStorage) {\n    if (localStorage.hasOwnProperty(key)) {\n      total += localStorage[key].length + key.length;\n    }\n  }\n  return {\n    used: Math.round(total / 1024) + ' KB',\n    stampImageSize: localStorage.getItem(STAMP_IMAGE_KEY) \n      ? Math.round(localStorage.getItem(STAMP_IMAGE_KEY).length / 1024) + ' KB'\n      : '0 KB'\n  };\n};","import React, { useState, useRef, useEffect } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { checkStorageAvailable, getStorageInfo, imageToBase64, saveStampImage, removeStampImage } from '../utils/imageStorage';\nimport { storage } from '../services/storage';\nimport { formatPhoneNumber } from '../utils/phoneFormatter';\n\nfunction CompanyInfo() {\n  const { companyInfo, setCompanyInfo, units, setUnits, categories, setCategories, stampImage, setStampImage } = useApp();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editForm, setEditForm] = useState({ ...companyInfo });\n  \n  // 설정 관련 상태\n  const [newUnit, setNewUnit] = useState('');\n  const [newCategory, setNewCategory] = useState('');\n  const [storageInfo, setStorageInfo] = useState({ used: '0 KB', stampImageSize: '0 KB' });\n  const [dataDir, setDataDir] = useState('');\n  const [browserDirName, setBrowserDirName] = useState('');\n  const fileInputRef = useRef(null);\n\n  // 컴포넌트 로드 시 저장소 정보 업데이트\n  useEffect(() => {\n    if (checkStorageAvailable()) {\n      setStorageInfo(getStorageInfo());\n    }\n    // Load Electron data directory if available\n    (async () => {\n      try {\n        if (window.cms && typeof window.cms.getBaseDir === 'function') {\n          const dir = await window.cms.getBaseDir();\n          setDataDir(dir);\n        }\n      } catch (e) {}\n      try {\n        const info = await storage.getBrowserDirectoryInfo?.();\n        if (info?.name) setBrowserDirName(info.name);\n      } catch (e) {}\n    })();\n  }, [stampImage]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    // 전화번호 필드인 경우 자동 포맷팅 적용\n    const formattedValue = name === 'phone' ? formatPhoneNumber(value) : value;\n    \n    setEditForm(prev => ({\n      ...prev,\n      [name]: formattedValue\n    }));\n  };\n\n  const handleSave = () => {\n    setCompanyInfo(editForm);\n    setIsEditing(false);\n    alert('건축업체 정보가 저장되었습니다.');\n  };\n\n  const handleCancel = () => {\n    setEditForm({ ...companyInfo });\n    setIsEditing(false);\n  };\n\n  // 설정 관련 함수들\n  const handleAddUnit = () => {\n    if (newUnit.trim() && !units.includes(newUnit.trim())) {\n      setUnits(prev => [...prev, newUnit.trim()]);\n      setNewUnit('');\n      alert('새로운 단위가 추가되었습니다.');\n    } else if (units.includes(newUnit.trim())) {\n      alert('이미 존재하는 단위입니다.');\n    }\n  };\n\n  const handleRemoveUnit = (unit) => {\n    if (window.confirm(`'${unit}' 단위를 삭제하시겠습니까?`)) {\n      setUnits(prev => prev.filter(u => u !== unit));\n      alert('단위가 삭제되었습니다.');\n    }\n  };\n\n  const handleAddCategory = () => {\n    if (newCategory.trim() && !categories.includes(newCategory.trim())) {\n      setCategories(prev => [...prev, newCategory.trim()]);\n      setNewCategory('');\n      alert('새로운 카테고리가 추가되었습니다.');\n    } else if (categories.includes(newCategory.trim())) {\n      alert('이미 존재하는 카테고리입니다.');\n    }\n  };\n\n  const handleRemoveCategory = (category) => {\n    if (window.confirm(`'${category}' 카테고리를 삭제하시겠습니까?`)) {\n      setCategories(prev => prev.filter(c => c !== category));\n      alert('카테고리가 삭제되었습니다.');\n    }\n  };\n\n  const handleStampImageChange = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.type.startsWith('image/')) {\n        try {\n          // 파일 크기 확인 (5MB 제한)\n          if (file.size > 5 * 1024 * 1024) {\n            alert('이미지 파일 크기는 5MB를 초과할 수 없습니다.');\n            return;\n          }\n\n          const imageDataUrl = await imageToBase64(file);\n          \n          // localStorage에 저장 시도\n          const saved = saveStampImage(imageDataUrl);\n          if (saved) {\n            setStampImage(imageDataUrl);\n            alert('도장 이미지가 성공적으로 저장되었습니다.');\n            console.log('저장소 사용량:', getStorageInfo());\n          } else {\n            alert('이미지 저장에 실패했습니다. 파일 크기를 줄여주세요.');\n          }\n        } catch (error) {\n          console.error('이미지 처리 오류:', error);\n          alert('이미지 처리 중 오류가 발생했습니다.');\n        }\n      } else {\n        alert('이미지 파일만 업로드 가능합니다.');\n      }\n    }\n  };\n\n  const handleRemoveStampImage = () => {\n    if (window.confirm('도장 이미지를 삭제하시겠습니까?')) {\n      const removed = removeStampImage();\n      if (removed) {\n        setStampImage(null);\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n        alert('도장 이미지가 완전히 삭제되었습니다.');\n        console.log('저장소 사용량:', getStorageInfo());\n      } else {\n        alert('이미지 삭제 중 오류가 발생했습니다.');\n      }\n    }\n  };\n\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">환경설정</h1>\n        <p className=\"text-gray-600\">건축업체 정보와 시스템 설정을 관리하세요</p>\n      </div>\n\n      {/* 상단 레이아웃: 업체 정보와 시스템 설정 */}\n      <div className=\"flex flex-col lg:flex-row lg:flex-wrap gap-8 mb-8\">\n        \n        {/* 환경설정 */}\n        <div className=\"flex-1 bg-white rounded-lg shadow flex flex-col\">\n          <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center bg-gray-100\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">업체 정보 관리</h2>\n          {!isEditing ? (\n            <button\n              onClick={() => setIsEditing(true)}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              수정\n            </button>\n          ) : (\n            <div className=\"space-x-2\">\n              <button\n                onClick={handleSave}\n                className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n              >\n                저장\n              </button>\n              <button\n                onClick={handleCancel}\n                className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\"\n              >\n                취소\n              </button>\n            </div>\n          )}\n          </div>\n\n          <div className=\"p-6 flex-1\">\n            <div className=\"grid grid-cols-1 gap-6\">\n              \n              {/* 첫 번째 행: 업체명, 사업자등록번호 */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* 업체명 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    업체명 <span className=\"text-red-500\">*</span>\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={editForm.name}\n                      onChange={handleInputChange}\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">{companyInfo.name}</p>\n                  )}\n                </div>\n\n                {/* 사업자등록번호 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    사업자등록번호 <span className=\"text-red-500\">*</span>\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      name=\"businessNumber\"\n                      value={editForm.businessNumber}\n                      onChange={handleInputChange}\n                      placeholder=\"000-00-00000\"\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">{companyInfo.businessNumber}</p>\n                  )}\n                </div>\n              </div>\n\n              {/* 두 번째 행: 대표자명, 전화번호 */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* 대표자명 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    대표자명 <span className=\"text-red-500\">*</span>\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      name=\"representative\"\n                      value={editForm.representative}\n                      onChange={handleInputChange}\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">{companyInfo.representative}</p>\n                  )}\n                </div>\n\n                {/* 전화번호 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    전화번호 <span className=\"text-red-500\">*</span>\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={editForm.phone}\n                      onChange={handleInputChange}\n                      placeholder=\"02-0000-0000\"\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">{companyInfo.phone}</p>\n                  )}\n                </div>\n              </div>\n\n              {/* 세 번째 행: 이메일 (전체 너비) */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  이메일\n                </label>\n                {isEditing ? (\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={editForm.email}\n                    onChange={handleInputChange}\n                    placeholder=\"info@company.com\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2\">{companyInfo.email || '-'}</p>\n                )}\n              </div>\n\n              {/* 네 번째 행: 주소 (전체 너비) */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  주소 <span className=\"text-red-500\">*</span>\n                </label>\n                {isEditing ? (\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    value={editForm.address}\n                    onChange={handleInputChange}\n                    placeholder=\"서울시 강남구 테헤란로 123\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2\">{companyInfo.address}</p>\n                )}\n              </div>\n\n              {/* 다섯 번째 행: 계좌번호, 예금주명 */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* 계좌번호 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    계좌번호\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      name=\"bankAccount\"\n                      value={editForm.bankAccount}\n                      onChange={handleInputChange}\n                      placeholder=\"은행명 000-000-000000\"\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">{companyInfo.bankAccount || '-'}</p>\n                  )}\n                </div>\n\n                {/* 예금주명 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    예금주명\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      name=\"accountHolder\"\n                      value={editForm.accountHolder}\n                      onChange={handleInputChange}\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">{companyInfo.accountHolder || '-'}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* 안내 메시지 */}\n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-blue-700\">\n                    여기서 설정한 정보는 생성되는 모든 청구서에 자동으로 포함됩니다. \n                    정확한 정보를 입력해주세요.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 시스템 설정 */}\n        <div className=\"flex-1 bg-white rounded-lg shadow flex flex-col\">\n          <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center bg-gray-100\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">시스템 설정</h2>\n            <div className=\"h-10\"></div>\n          </div>\n          <div className=\"p-6 flex-1\">\n            <div className=\"space-y-8\">\n              \n              {/* 상단: 단위 관리와 카테고리 관리 */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                \n                {/* 단위 관리 */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-4\">단위 관리</h3>\n                  <div className=\"space-y-4\">\n                    {/* 단위 추가 */}\n                    <div className=\"flex space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={newUnit}\n                        onChange={(e) => setNewUnit(e.target.value)}\n                        placeholder=\"새 단위 입력\"\n                        className=\"flex-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n                        onKeyPress={(e) => e.key === 'Enter' && handleAddUnit()}\n                      />\n                      <button\n                        onClick={handleAddUnit}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-md text-sm\"\n                      >\n                        추가\n                      </button>\n                    </div>\n\n                    {/* 단위 목록 */}\n                    <div className=\"border border-gray-200 rounded-md max-h-48 overflow-y-auto\">\n                      <div className=\"p-2\">\n                        {units.map((unit, index) => (\n                          <div key={index} className=\"flex items-center justify-between p-2 hover:bg-gray-50 rounded\">\n                            <span className=\"text-gray-900 text-sm\">{unit}</span>\n                            <button\n                              onClick={() => handleRemoveUnit(unit)}\n                              className=\"text-red-600 hover:text-red-800 text-xs\"\n                            >\n                              삭제\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 카테고리 관리 */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-4\">카테고리 관리</h3>\n                  <div className=\"space-y-4\">\n                    {/* 카테고리 추가 */}\n                    <div className=\"flex space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={newCategory}\n                        onChange={(e) => setNewCategory(e.target.value)}\n                        placeholder=\"새 카테고리 입력\"\n                        className=\"flex-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\n                        onKeyPress={(e) => e.key === 'Enter' && handleAddCategory()}\n                      />\n                      <button\n                        onClick={handleAddCategory}\n                        className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md text-sm\"\n                      >\n                        추가\n                      </button>\n                    </div>\n\n                    {/* 카테고리 목록 */}\n                    <div className=\"border border-gray-200 rounded-md max-h-48 overflow-y-auto\">\n                      <div className=\"p-2\">\n                        {categories.map((category, index) => (\n                          <div key={index} className=\"flex items-center justify-between p-2 hover:bg-gray-50 rounded\">\n                            <span className=\"text-gray-900 text-sm\">{category}</span>\n                            <button\n                              onClick={() => handleRemoveCategory(category)}\n                              className=\"text-red-600 hover:text-red-800 text-xs\"\n                            >\n                              삭제\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 하단: 도장 이미지 관리 */}\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">도장 이미지 관리</h3>\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  \n                  {/* 이미지 업로드 영역 */}\n                  <div>\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6\">\n                      <div className=\"text-center\">\n                        <svg className=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                          <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                        </svg>\n                        <div className=\"mt-4\">\n                          <label htmlFor=\"stamp-image\" className=\"cursor-pointer\">\n                            <span className=\"block text-sm font-medium text-gray-900\">\n                              도장 이미지 업로드\n                            </span>\n                            <span className=\"block text-sm text-gray-500 mt-1\">\n                              PNG, JPG 파일만 지원 (최대 2MB)\n                            </span>\n                          </label>\n                          <input\n                            id=\"stamp-image\"\n                            ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleStampImageChange}\n                            className=\"hidden\"\n                          />\n                        </div>\n                        <button\n                          onClick={() => fileInputRef.current?.click()}\n                          className=\"mt-4 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm\"\n                        >\n                          파일 선택\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 이미지 미리보기 및 정보 */}\n                  <div className=\"space-y-4\">\n                    {/* 이미지 미리보기 */}\n                    {stampImage ? (\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">미리보기</h4>\n                        <div className=\"flex items-center space-x-4\">\n                          <div className=\"w-24 h-24 border border-gray-200 rounded-lg overflow-hidden\">\n                            <img\n                              src={stampImage}\n                              alt=\"도장 미리보기\"\n                              className=\"w-full h-full object-contain\"\n                            />\n                          </div>\n                          <button\n                            onClick={handleRemoveStampImage}\n                            className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded text-sm\"\n                          >\n                            삭제\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"text-center text-gray-500 py-8\">\n                        <p className=\"text-sm\">업로드된 이미지가 없습니다</p>\n                      </div>\n                    )}\n\n                    {/* 도장 설명 */}\n                    <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                      <div className=\"flex\">\n                        <div className=\"flex-shrink-0\">\n                          <svg className=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </div>\n                        <div className=\"ml-3\">\n                          <p className=\"text-sm text-yellow-700\">\n                            업로드된 도장 이미지는 청구서 생성 시 자동으로 포함됩니다. \n                            선명하고 투명 배경의 이미지를 사용하시기 바랍니다.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* 저장소 정보 */}\n                    <div className=\"p-3 bg-blue-50 rounded-lg\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0\">\n                          <svg className=\"h-4 w-4 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" />\n                          </svg>\n                        </div>\n                        <div className=\"ml-2\">\n                          <p className=\"text-xs text-blue-700\">\n                            저장소 사용량: {storageInfo.used} | 도장 이미지: {storageInfo.stampImageSize}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 데이터 저장 위치 (Electron/Browser) */}\n        <div className=\"w-full bg-white rounded-lg shadow h-max\">\n          <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-100\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">데이터 저장 위치</h2>\n          </div>\n          <div className=\"p-6 space-y-3\">\n            {dataDir ? (\n              <>\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-1\">현재 디렉토리</p>\n                  <div className=\"text-sm font-mono break-all bg-gray-50 border rounded p-2\">{dataDir}</div>\n                </div>\n                <button\n                  onClick={async () => {\n                    try {\n                      const dir = await window.cms.chooseBaseDir();\n                      setDataDir(dir);\n                      alert('데이터 저장 위치가 변경되었습니다.');\n                    } catch (e) {\n                      alert('디렉토리 선택 중 오류가 발생했습니다.');\n                    }\n                  }}\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded text-sm\"\n                >\n                  디렉토리 변경\n                </button>\n                <p className=\"text-xs text-gray-500\">Electron 환경에서만 사용할 수 있습니다.</p>\n              </>\n            ) : (\n              <div className=\"space-y-2\">\n                <p className=\"text-sm text-gray-600\">브라우저 저장 방식</p>\n                {browserDirName ? (\n                  <div className=\"text-sm\">선택된 폴더: <span className=\"font-mono bg-gray-50 border rounded px-2 py-1\">{browserDirName}</span></div>\n                ) : (\n                  <p className=\"text-sm text-gray-500\">기본 저장소(localStorage)를 사용 중입니다.</p>\n                )}\n                {('showDirectoryPicker' in window) ? (\n                  <button\n                    onClick={async () => {\n                      const ok = await storage.chooseBrowserDirectory?.();\n                      if (ok) {\n                        const info = await storage.getBrowserDirectoryInfo?.();\n                        setBrowserDirName(info?.name || '');\n                        alert('브라우저에서 사용할 폴더가 설정되었습니다. 이후 변경 사항은 해당 폴더의 store.json에도 저장됩니다.');\n                      } else {\n                        alert('폴더 선택이 취소되었거나 권한이 없습니다.');\n                      }\n                    }}\n                    className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded text-sm\"\n                  >\n                    브라우저 폴더 선택(Edge/Chrome)\n                  </button>\n                ) : (\n                  <p className=\"text-xs text-gray-500\">이 브라우저는 폴더 선택을 지원하지 않습니다.</p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompanyInfo;\n","/**\n * 한국 전화번호 자동 포맷팅 유틸리티\n */\n\n/**\n * 전화번호를 한국 형식으로 자동 포맷팅\n * @param {string} value - 입력된 전화번호\n * @returns {string} 포맷팅된 전화번호\n */\nexport const formatPhoneNumber = (value) => {\n  // 숫자만 추출\n  const numbers = value.replace(/[^\\d]/g, '');\n  \n  if (numbers.length === 0) return '';\n  \n  // 길이에 따른 포맷팅\n  if (numbers.length <= 3) {\n    return numbers;\n  } else if (numbers.length <= 7) {\n    // 010-1234 형태\n    if (numbers.startsWith('02')) {\n      // 서울 지역번호 (02)\n      return numbers.length <= 2 ? numbers : `${numbers.slice(0, 2)}-${numbers.slice(2)}`;\n    } else if (numbers.startsWith('0')) {\n      // 휴대폰 (010, 011 등) 또는 기타 지역번호\n      return `${numbers.slice(0, 3)}-${numbers.slice(3)}`;\n    } else {\n      // 일반 번호\n      return `${numbers.slice(0, 3)}-${numbers.slice(3)}`;\n    }\n  } else if (numbers.length <= 11) {\n    if (numbers.startsWith('02')) {\n      // 서울 지역번호: 02-1234-5678 또는 02-123-4567\n      if (numbers.length <= 9) {\n        return `02-${numbers.slice(2, 5)}-${numbers.slice(5)}`;\n      } else {\n        return `02-${numbers.slice(2, 6)}-${numbers.slice(6)}`;\n      }\n    } else if (numbers.startsWith('01')) {\n      // 휴대폰: 010-1234-5678\n      return `${numbers.slice(0, 3)}-${numbers.slice(3, 7)}-${numbers.slice(7)}`;\n    } else if (numbers.startsWith('0')) {\n      // 기타 지역번호: 031-123-4567\n      return `${numbers.slice(0, 3)}-${numbers.slice(3, 6)}-${numbers.slice(6)}`;\n    } else {\n      // 일반 번호\n      return `${numbers.slice(0, 3)}-${numbers.slice(3, 7)}-${numbers.slice(7)}`;\n    }\n  } else {\n    // 11자리 초과시 11자리까지만 사용\n    const truncated = numbers.slice(0, 11);\n    if (truncated.startsWith('02')) {\n      return `02-${truncated.slice(2, 6)}-${truncated.slice(6)}`;\n    } else if (truncated.startsWith('01')) {\n      return `${truncated.slice(0, 3)}-${truncated.slice(3, 7)}-${truncated.slice(7)}`;\n    } else {\n      return `${truncated.slice(0, 3)}-${truncated.slice(3, 6)}-${truncated.slice(6)}`;\n    }\n  }\n};\n\n/**\n * 전화번호 유효성 검사\n * @param {string} phoneNumber - 검사할 전화번호\n * @returns {boolean} 유효한 전화번호인지 여부\n */\nexport const isValidPhoneNumber = (phoneNumber) => {\n  const numbers = phoneNumber.replace(/[^\\d]/g, '');\n  \n  // 한국 전화번호 패턴\n  const patterns = [\n    /^02\\d{7,8}$/, // 서울 지역번호 (02-1234-5678 또는 02-123-4567)\n    /^0[3-6]\\d{8}$/, // 기타 지역번호 (031-123-4567)\n    /^01[0-9]\\d{7,8}$/, // 휴대폰 (010-1234-5678)\n    /^070\\d{7,8}$/, // 인터넷 전화 (070-1234-5678)\n    /^1[5-9]\\d{2}\\d{4}$/, // 특수번호 (1588-1234)\n  ];\n  \n  return patterns.some(pattern => pattern.test(numbers));\n};","import React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { \n  PlusIcon, \n  PencilIcon, \n  TrashIcon, \n  UserGroupIcon,\n  ExclamationTriangleIcon \n} from '@heroicons/react/24/outline';\n\nconst UserManagement = () => {\n  const { getAllUsers, addUser, updateUser, deleteUser, currentUser } = useUser();\n  const [users, setUsers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    name: '',\n    role: 'user'\n  });\n  const [error, setError] = useState('');\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n\n  const loadUsers = useCallback(() => {\n    setUsers(getAllUsers());\n  }, [getAllUsers]);\n\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  const resetForm = () => {\n    setFormData({\n      username: '',\n      password: '',\n      name: '',\n      role: 'user'\n    });\n    setError('');\n    setEditingUser(null);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!formData.username || !formData.name || (!editingUser && !formData.password)) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n\n    let result;\n    if (editingUser) {\n      const updateData = { ...formData };\n      if (!updateData.password) {\n        delete updateData.password;\n      }\n      result = updateUser(editingUser.id, updateData);\n    } else {\n      result = addUser(formData);\n    }\n\n    if (result.success) {\n      setShowModal(false);\n      resetForm();\n      loadUsers();\n    } else {\n      setError(result.error);\n    }\n  };\n\n  const handleEdit = (user) => {\n    setEditingUser(user);\n    setFormData({\n      username: user.username,\n      password: '',\n      name: user.name,\n      role: user.role\n    });\n    setShowModal(true);\n  };\n\n  const handleDelete = (user) => {\n    if (user.id === currentUser.id) {\n      setError('자신의 계정은 삭제할 수 없습니다.');\n      return;\n    }\n    setShowDeleteConfirm(user);\n  };\n\n  const confirmDelete = () => {\n    if (showDeleteConfirm) {\n      const result = deleteUser(showDeleteConfirm.id);\n      if (result.success) {\n        loadUsers();\n      }\n      setShowDeleteConfirm(null);\n    }\n  };\n\n  const getRoleText = (role) => {\n    const roles = {\n      admin: '관리자',\n      manager: '매니저',\n      user: '사용자'\n    };\n    return roles[role] || role;\n  };\n\n  const getRoleBadgeClass = (role) => {\n    const classes = {\n      admin: 'bg-red-100 text-red-800',\n      manager: 'bg-blue-100 text-blue-800',\n      user: 'bg-green-100 text-green-800'\n    };\n    return classes[role] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <UserGroupIcon className=\"h-6 w-6 text-gray-600\" />\n              <h1 className=\"text-xl font-semibold text-gray-900\">사용자 관리</h1>\n            </div>\n            <button\n              onClick={() => {\n                resetForm();\n                setShowModal(true);\n              }}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center space-x-2\"\n            >\n              <PlusIcon className=\"h-5 w-5\" />\n              <span>사용자 추가</span>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6\">\n          {users.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <UserGroupIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">사용자가 없습니다</h3>\n              <p className=\"mt-1 text-sm text-gray-500\">새 사용자를 추가해보세요.</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      사용자 정보\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      아이디\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      권한\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      작업\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {users.map((user) => (\n                    <tr key={user.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n                            <span className=\"text-sm font-medium text-gray-700\">\n                              {user.name.charAt(0)}\n                            </span>\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">{user.name}</div>\n                            {user.id === currentUser.id && (\n                              <div className=\"text-sm text-gray-500\">(현재 로그인)</div>\n                            )}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {user.username}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getRoleBadgeClass(user.role)}`}>\n                          {getRoleText(user.role)}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <div className=\"flex space-x-2\">\n                          <button\n                            onClick={() => handleEdit(user)}\n                            className=\"text-indigo-600 hover:text-indigo-900 flex items-center space-x-1\"\n                          >\n                            <PencilIcon className=\"h-4 w-4\" />\n                            <span>수정</span>\n                          </button>\n                          {user.id !== currentUser.id && (\n                            <button\n                              onClick={() => handleDelete(user)}\n                              className=\"text-red-600 hover:text-red-900 flex items-center space-x-1\"\n                            >\n                              <TrashIcon className=\"h-4 w-4\" />\n                              <span>삭제</span>\n                            </button>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* 사용자 추가/수정 모달 */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              {editingUser ? '사용자 수정' : '사용자 추가'}\n            </h3>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  아이디\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.username}\n                  onChange={(e) => setFormData({...formData, username: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"아이디를 입력하세요\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  이름\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => setFormData({...formData, name: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"이름을 입력하세요\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  비밀번호 {editingUser && <span className=\"text-gray-500\">(변경시에만 입력)</span>}\n                </label>\n                <input\n                  type=\"password\"\n                  value={formData.password}\n                  onChange={(e) => setFormData({...formData, password: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={editingUser ? \"새 비밀번호 (선택사항)\" : \"비밀번호를 입력하세요\"}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  권한\n                </label>\n                <select\n                  value={formData.role}\n                  onChange={(e) => setFormData({...formData, role: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"user\">사용자</option>\n                  <option value=\"manager\">매니저</option>\n                  <option value=\"admin\">관리자</option>\n                </select>\n              </div>\n\n              {error && (\n                <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n                  <p className=\"text-red-700 text-sm\">{error}</p>\n                </div>\n              )}\n\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowModal(false);\n                    resetForm();\n                  }}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n                >\n                  취소\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700\"\n                >\n                  {editingUser ? '수정' : '추가'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* 삭제 확인 모달 */}\n      {showDeleteConfirm && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <ExclamationTriangleIcon className=\"h-6 w-6 text-red-600\" />\n              <h3 className=\"text-lg font-medium text-gray-900\">사용자 삭제</h3>\n            </div>\n            \n            <p className=\"text-sm text-gray-500 mb-6\">\n              <span className=\"font-medium\">{showDeleteConfirm.name}</span> 사용자를 삭제하시겠습니까?\n              <br />이 작업은 되돌릴 수 없습니다.\n            </p>\n\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => setShowDeleteConfirm(null)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n              >\n                취소\n              </button>\n              <button\n                onClick={confirmDelete}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700\"\n              >\n                삭제\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserManagement;\n","import React from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { Navigate } from 'react-router-dom';\nimport UserManagement from './UserManagement';\nimport { \n  UserGroupIcon,\n  ChartBarIcon,\n  CogIcon,\n  ServerStackIcon,\n  ShieldCheckIcon\n} from '@heroicons/react/24/outline';\n\nconst AdminPanel = () => {\n  const { isAdmin, getAllUsers } = useUser();\n\n  if (!isAdmin()) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  const users = getAllUsers();\n  const userStats = {\n    total: users.length,\n    admins: users.filter(u => u.role === 'admin').length,\n    managers: users.filter(u => u.role === 'manager').length,\n    users: users.filter(u => u.role === 'user').length\n  };\n\n  const StatCard = ({ title, value, icon: Icon, color = 'blue' }) => {\n    const colorClasses = {\n      blue: 'bg-blue-500',\n      green: 'bg-green-500',\n      yellow: 'bg-yellow-500',\n      red: 'bg-red-500'\n    };\n\n    return (\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex items-center\">\n          <div className={`${colorClasses[color]} rounded-md p-3`}>\n            <Icon className=\"h-6 w-6 text-white\" />\n          </div>\n          <div className=\"ml-4\">\n            <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n            <p className=\"text-2xl font-semibold text-gray-900\">{value}</p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      {/* 헤더 */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center space-x-3\">\n            <ShieldCheckIcon className=\"h-8 w-8 text-blue-600\" />\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">관리자 패널</h1>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\" />\n        </div>\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <StatCard\n          title=\"전체 사용자\"\n          value={userStats.total}\n          icon={UserGroupIcon}\n          color=\"blue\"\n        />\n        <StatCard\n          title=\"관리자\"\n          value={userStats.admins}\n          icon={ShieldCheckIcon}\n          color=\"red\"\n        />\n        <StatCard\n          title=\"일반 사용자\"\n          value={userStats.users}\n          icon={UserGroupIcon}\n          color=\"green\"\n        />\n      </div>\n\n      {/* 관리 섹션 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n        {/* 시스템 정보 */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <ServerStackIcon className=\"h-6 w-6 text-gray-600\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">시스템 정보</h3>\n          </div>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">버전</span>\n              <span className=\"font-medium\">v1.0.0</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">데이터 저장</span>\n              <span className=\"font-medium\">LocalStorage</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">백업 시간</span>\n              <span className=\"font-medium\">실시간</span>\n            </div>\n          </div>\n        </div>\n\n        {/* 최근 활동 */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <ChartBarIcon className=\"h-6 w-6 text-gray-600\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">최근 활동</h3>\n          </div>\n          <div className=\"space-y-3\">\n            <div className=\"text-sm\">\n              <p className=\"text-gray-600\">오늘 로그인</p>\n              <p className=\"font-medium\">{userStats.total}명</p>\n            </div>\n            <div className=\"text-sm\">\n              <p className=\"text-gray-600\">활성 세션</p>\n              <p className=\"font-medium\">1개</p>\n            </div>\n            <div className=\"text-sm\">\n              <p className=\"text-gray-600\">시스템 상태</p>\n              <p className=\"font-medium text-green-600\">정상</p>\n            </div>\n          </div>\n        </div>\n\n        {/* 빠른 작업 */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <CogIcon className=\"h-6 w-6 text-gray-600\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">빠른 작업</h3>\n          </div>\n          <div className=\"space-y-3\">\n            <button className=\"w-full text-left p-2 rounded-md hover:bg-gray-50 text-sm\">\n              📊 시스템 보고서 생성\n            </button>\n            <button className=\"w-full text-left p-2 rounded-md hover:bg-gray-50 text-sm\">\n              🔄 데이터 백업\n            </button>\n            <button className=\"w-full text-left p-2 rounded-md hover:bg-gray-50 text-sm\">\n              🧹 시스템 정리\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* 사용자 섹션 */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">사용자</h2>\n        </div>\n        <div className=\"p-0\">\n          <UserManagement />\n        </div>\n      </div>\n\n      {/* 보안 알림 */}\n      <div className=\"mt-8 bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <ShieldCheckIcon className=\"h-5 w-5 text-yellow-400\" />\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-yellow-800\">\n              보안 권장사항\n            </h3>\n            <div className=\"mt-2 text-sm text-yellow-700\">\n              <ul className=\"list-disc pl-5 space-y-1\">\n                <li>정기적으로 사용자 계정을 검토하세요</li>\n                <li>사용하지 않는 계정은 비활성화하세요</li>\n                <li>강력한 비밀번호 정책을 적용하세요</li>\n                <li>시스템 로그를 정기적으로 확인하세요</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 관리자 패널에서는 로그아웃 UI를 표시하지 않습니다. */}\n    </div>\n  );\n};\n\nexport default AdminPanel;\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport { UserProvider, useUser } from './contexts/UserContext';\nimport Login from './components/Login';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard';\nimport Invoices from './components/Invoices';\nimport Clients from './components/Clients';\nimport WorkItems from './components/WorkItems';\nimport Estimates from './components/Estimates';\nimport CompanyInfo from './components/CompanyInfo';\nimport AdminPanel from './components/AdminPanel';\n\nfunction AppContent() {\n  const { isLoggedIn } = useUser();\n\n  if (!isLoggedIn) {\n    return <Login />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar />\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Dashboard />} />\n          <Route path=\"/estimates\" element={<Estimates />} />\n          <Route path=\"/invoices\" element={<Invoices />} />\n          <Route path=\"/clients\" element={<Clients />} />\n          <Route path=\"/work-items\" element={<WorkItems />} />\n          <Route path=\"/company-info\" element={<CompanyInfo />} />\n          <Route path=\"/admin\" element={<AdminPanel />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <UserProvider>\n      <AppContent />\n    </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { AppProvider } from './contexts/AppContext';\nimport './index.css';\nimport App from './App';\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000 // 5 minutes\n    }\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nconst basePath = ((): string => {\n  const fromEnv = process.env.REACT_APP_BASE_PATH;\n  if (fromEnv && fromEnv.length > 0) return fromEnv;\n  return window.location.pathname.startsWith('/cms') ? '/cms' : '/';\n})();\nconst RouterImpl: any = process.env.REACT_APP_USE_HASH_ROUTER === '1' ? HashRouter : BrowserRouter;\nroot.render(<React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <AppProvider>\n        <RouterImpl basename={basePath}>\n          <App />\n        </RouterImpl>\n      </AppProvider>\n    </QueryClientProvider>\n  </React.StrictMode>);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkconstruction_management_frontend\"] = self[\"webpackChunkconstruction_management_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(761)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["STORE","DIR_KEY","isSupported","window","openDb","Promise","resolve","reject","req","indexedDB","open","onupgradeneeded","db","result","objectStoreNames","contains","createObjectStore","onsuccess","onerror","error","async","getSavedDirectoryHandle","key","transaction","objectStore","get","idbGet","e","saveDirectoryHandle","handle","value","put","idbSet","verifyPermission","mode","arguments","length","undefined","queryPermission","requestPermission","getFileHandle","dirHandle","name","create","writeKey","obj","fileHandle","concat","writable","createWritable","write","Blob","JSON","stringify","type","close","browserFs","chooseDirectory","showDirectoryPicker","id","readKey","file","getFile","text","parse","writeKeyDirect","dir","storage","getItem","defaultValue","cms","storageGetSync","v","raw","localStorage","setItem","data","storageSet","catch","chooseBrowserDirectory","getBrowserDirectoryInfo","timer","lastPayload","normalizeArray","arr","Array","isArray","mirrorNow","snapshot","wb","companyInfo","clients","workItems","invoices","estimates","units","categories","XLSX","book_new","companyRows","wsCompany","json_to_sheet","book_append_sheet","wsClients","wsWorkItems","wsInvoices","wsEstimates","wsUnits","map","unit","wsCategories","category","buildWorkbook","ab","workbook","bookType","okElectron","api","writeXlsx","uint","Uint8Array","writeViaElectron","okBrowser","writeViaBrowserFs","AppContext","createContext","useApp","context","useContext","Error","STORAGE_KEYS","loadFromStorage","saveToStorage","AppProvider","_ref","children","defaultCompanyInfo","businessNumber","address","phone","email","representative","bankAccount","accountHolder","setCompanyInfo","useState","defaultClients","workplaces","description","projects","totalBilled","outstanding","notes","setClients","defaultWorkItems","clientId","clientName","workplaceId","workplaceName","defaultPrice","quantity","projectName","status","date","setWorkItems","defaultInvoices","client","project","workplaceAddress","amount","dueDate","unitPrice","total","setInvoices","defaultEstimates","title","validUntil","totalAmount","items","setEstimates","defaultUnits","defaultCategories","setUnits","setCategories","stampImage","setStampImage","useEffect","delayMs","clearTimeout","setTimeout","scheduleMirror","getCompletedWorkItems","filter","item","getCompletedWorkItemsByClient","addWorkItemToInvoice","workItem","finalQuantity","finalUnitPrice","laborPersons","parseInt","laborUnitRate","laborPersonsGeneral","laborUnitRateGeneral","laborCost","convertEstimateToWorkItems","estimateId","estimate","find","est","newWorkItems","index","Math","max","i","Date","toISOString","split","prev","_objectSpread","_jsx","Provider","UserContext","useUser","UserProvider","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","defaultUsers","username","password","role","savedUser","sessionStorage","removeItem","logout","String","now","getAllUsers","login","user","u","success","getUserStorageKey","addUser","userData","users","newUser","push","updateUser","userId","userIndex","findIndex","updatedUser","deleteUser","filteredUsers","isAdmin","timerId","reset","events","forEach","ev","addEventListener","passive","removeEventListener","onStorage","err","Login","setUsername","setPassword","setError","loading","setLoading","navigate","useNavigate","className","_jsxs","onSubmit","preventDefault","htmlFor","onChange","target","placeholder","disabled","location","useLocation","showUserMenu","setShowUserMenu","menuRef","useRef","handleClickOutside","current","handleKeyDown","document","isActive","path","pathname","BuildingOffice2Icon","Link","to","HomeIcon","CalculatorIcon","DocumentTextIcon","UsersIcon","WrenchScrewdriverIcon","CogIcon","ref","onClick","_Fragment","ShieldCheckIcon","UserIcon","restoreInputRef","formatCurrency","n","toLocaleString","recentInvoices","useMemo","slice","sort","a","b","localeCompare","reduce","s","paid","pending","stats","color","icon","href","payload","meta","exportedAt","app","blob","url","URL","createObjectURL","createElement","stampStr","replace","download","click","revokeObjectURL","accept","_e$target$files","files","alert","console","_restoreInputRef$curr","stat","valueSize","Card","invoice","numberToKorean","number","tens","bigUnits","convertGroup","num","digits","toString","Number","digit","position","groups","tempNumber","abs","unshift","floor","group","exportToExcel","join","worksheet","width","importFromExcel","reader","FileReader","onload","Sheets","SheetNames","sheet_to_json","row","readAsArrayBuffer","_row$인부인원","_ref2","_row$인부단가","createTemplate","selectedIds","setSelectedIds","showConfirmDelete","setShowConfirmDelete","selectedClientFilter","setSelectedClientFilter","selectedStatusFilter","setSelectedStatusFilter","filteredInvoices","base","_clients$find","cid","c","inv","allVisibleIds","allSelected","formatNumberWithCommas","workItemTemplates","showModal","setShowModal","selectedInvoice","setSelectedInvoice","printInvoice","setPrintInvoice","newInvoice","setNewInvoice","templateId","componentRef","log","handleFormInputChange","updated","selectedClient","selectedWorkplace","w","updateWorkItem","field","updatedItems","template","t","matchingWorkItem","wi","numbersOnly","numericValue","getTotalAmount","sum","handleDownloadTemplate","importedInvoices","handleExportToExcel","style","fontSize","checked","toggleSelectAll","includes","toggleSelectOne","from","Set","x","handleChangeStatus","next","viewInvoiceDetails","printWindow","resolvedClient","clientInfoHTML","business","businessName","taxEmail","businessAddress","laborTotal","htmlContent","focus","message","generatePDF","handleDeleteInvoice","invoiceId","confirm","handleBulkDelete","newInv","padStart","required","getClientWorkplaces","workplace","addWorkItem","_workItemTemplates$fi","readOnly","rows","_","colSpan","display","padding","fontFamily","lineHeight","maxWidth","margin","backgroundColor","marginBottom","borderRadius","justifyContent","alignItems","textAlign","borderBottom","paddingBottom","fontWeight","letterSpacing","gridTemplateColumns","gap","borderLeft","paddingLeft","overflowX","minWidth","borderCollapse","boxShadow","border","marginTop","verticalAlign","src","alt","height","objectFit","top","left","transform","paddingTop","borderTop","_selectedClient$busin","_selectedClient$busin2","_selectedClient$busin3","_selectedClient$busin4","_selectedClient$busin5","_selectedClient$busin6","_selectedClient$busin7","setSelectedClient","isEditing","setIsEditing","editingClientId","setEditingClientId","newClient","setNewClient","mobile","businessType","businessItem","fileInputRef","handleInputChange","input","startsWith","formatPhoneKR","handleBusinessChange","val","d","formatBizNo","handleWorkplaceChange","updatedWorkplaces","totalsByClientId","Map","set","match","agg","grandTotals","projectCountsByClientId","sets","ensureSet","has","p","trim","add","counts","entries","size","_fileInputRef$current","importedClients","_totalsByClientId$get","_client$business","_totalsByClientId$get2","_totalsByClientId$get3","_totalsByClientId$get4","charAt","viewClientDetails","handleEditClient","_payload$business","_payload$business2","updatedClient","wp","Boolean","addWorkplace","removeWorkplace","selectedProject","setSelectedProject","selectedItems","setSelectedItems","showBulkModal","setShowBulkModal","editingItem","setEditingItem","newItem","setNewItem","showCustomProject","setShowCustomProject","bulkItems","setBulkItems","bulkBaseInfo","setBulkBaseInfo","bulkLaborPersons","bulkLaborUnitRate","showBulkCustomProject","setShowBulkCustomProject","statuses","bulkStatus","setBulkStatus","calContainerRefSingle","calendarRefSingle","calendarOpenSingle","setCalendarOpenSingle","calendarMonthSingle","setCalendarMonthSingle","y","m","onDocClick","pad2","calContainerRefBulk","calendarRefBulk","calendarOpenBulk","setCalendarOpenBulk","calendarMonthBulk","setCalendarMonthBulk","getClientProjects","fromWorkItems","fromClientProjects","fromWorkplaces","filteredWorkItems","getLaborCost","_item$laborPersons","_item$laborUnitRate","_item$laborPersonsGen","_item$laborUnitRateGe","newValue","suggested","resetForm","handleBulkBaseInfoChange","handleBulkItemChange","handleEdit","allProjects","isExistingProject","handleCreateBulkInvoice","completedSelectedItems","incompleteCount","firstClientId","every","unbilledItems","some","workItemInInvoice","firstItem","newInvoiceId","getFullYear","workItemsForInvoice","importedWorkItems","handleSelectAll","handleItemSelect","itemId","handleDelete","handleCreateInvoice","selectedClientData","selectedWorkplaceData","cat","inputMode","onFocus","transformOrigin","prevMonthSingle","getMonth","nextMonthSingle","idx","renderCalendarRowsSingle","startDay","getDay","days","getDate","cells","i2","day","pickDateSingle","newItems","prevMonthBulk","nextMonthBulk","renderCalendarRowsBulk","pickDateBulk","addBulkItem","_item$laborPersonsGen2","_item$laborUnitRateGe2","removeBulkItem","selectedStatus","setSelectedStatus","editingEstimate","setEditingEstimate","printEstimate","setPrintEstimate","newEstimate","setNewEstimate","noDueDate","setNoDueDate","calContainerRef","calendarRef","calendarOpen","setCalendarOpen","calendarMonth","setCalendarMonth","filteredEstimates","_client$workplaces","handleItemChange","calculateTotal","importedEstimates","printContent","innerHTML","handlePrint","convertedItems","handleConvertToWorkItems","estimateData","prevMonth","nextMonth","renderCalendarRows","pickDate","addItem","overflow","fontStyle","whiteSpace","STAMP_IMAGE_KEY","getStorageInfo","hasOwnProperty","used","round","stampImageSize","editForm","setEditForm","newUnit","setNewUnit","newCategory","setNewCategory","storageInfo","setStorageInfo","dataDir","setDataDir","browserDirName","setBrowserDirName","checkStorageAvailable","test","getBaseDir","_storage$getBrowserDi","info","call","formattedValue","numbers","truncated","formatPhoneNumber","handleAddUnit","handleAddCategory","handleSave","handleCancel","viewBox","fill","fillRule","clipRule","onKeyPress","handleRemoveUnit","handleRemoveCategory","stroke","strokeWidth","strokeLinecap","strokeLinejoin","imageDataUrl","readAsDataURL","imageToBase64","saved","saveStampImage","handleRemoveStampImage","removeStampImage","chooseBaseDir","_storage$chooseBrowse","_storage$getBrowserDi2","UserManagement","setUsers","editingUser","setEditingUser","formData","setFormData","showDeleteConfirm","setShowDeleteConfirm","loadUsers","useCallback","getRoleText","admin","manager","UserGroupIcon","PlusIcon","PencilIcon","TrashIcon","updateData","ExclamationTriangleIcon","confirmDelete","AdminPanel","Navigate","userStats","admins","managers","StatCard","Icon","blue","green","yellow","red","ServerStackIcon","ChartBarIcon","AppContent","Navbar","Routes","Route","element","Dashboard","Estimates","Invoices","Clients","WorkItems","CompanyInfo","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","staleTime","root","ReactDOM","getElementById","basePath","fromEnv","process","REACT_APP_BASE_PATH","RouterImpl","REACT_APP_USE_HASH_ROUTER","HashRouter","BrowserRouter","render","React","QueryClientProvider","basename","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","splice","r","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","prop","prototype","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}